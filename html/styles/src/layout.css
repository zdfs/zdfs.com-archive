body {
  overflow-x: hidden; }

.no-js .primary-nav,
.no-js #content {
  opacity: 0; }

.wf-loading .primary-nav,
.wf-loading #content {
  opacity: 0;
  transform: translateY(-20px);
  -ms-transform: translateY(-20px);
  -webkit-transform: translateY(-20px); }

.primary-nav,
#content {
  opacity: 1;
  transform: translateY(0);
  -ms-transform: translateY(0);
  -webkit-transform: translateY(0);
  transition: transform .4s ease-in-out, opacity .4s ease-in-out;
  -webkit-transition: -webkit-transform .4s ease-in-out, opacity .4s ease-in-out; }

.icon {
  width: 1rem;
  height: 1rem; }

.slide-in-down.mui-enter {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: translateY(-100%);
  transition-property: transform, opacity;
  backface-visibility: hidden; }

.slide-in-down.mui-enter.mui-enter-active {
  transform: translateY(0); }

.slide-in-left.mui-enter {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: translateX(-100%);
  transition-property: transform, opacity;
  backface-visibility: hidden; }

.slide-in-left.mui-enter.mui-enter-active {
  transform: translateX(0); }

.slide-in-up.mui-enter {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: translateY(100%);
  transition-property: transform, opacity;
  backface-visibility: hidden; }

.slide-in-up.mui-enter.mui-enter-active {
  transform: translateY(0); }

.slide-in-right.mui-enter {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: translateX(100%);
  transition-property: transform, opacity;
  backface-visibility: hidden; }

.slide-in-right.mui-enter.mui-enter-active {
  transform: translateX(0); }

.slide-out-down.mui-leave {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: translateY(0);
  transition-property: transform, opacity;
  backface-visibility: hidden; }

.slide-out-down.mui-leave.mui-leave-active {
  transform: translateY(100%); }

.slide-out-right.mui-leave {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: translateX(0);
  transition-property: transform, opacity;
  backface-visibility: hidden; }

.slide-out-right.mui-leave.mui-leave-active {
  transform: translateX(100%); }

.slide-out-up.mui-leave {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: translateY(0);
  transition-property: transform, opacity;
  backface-visibility: hidden; }

.slide-out-up.mui-leave.mui-leave-active {
  transform: translateY(-100%); }

.slide-out-left.mui-leave {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: translateX(0);
  transition-property: transform, opacity;
  backface-visibility: hidden; }

.slide-out-left.mui-leave.mui-leave-active {
  transform: translateX(-100%); }

.fade-in.mui-enter {
  transition-duration: 500ms;
  transition-timing-function: linear;
  opacity: 0;
  transition-property: opacity; }

.fade-in.mui-enter.mui-enter-active {
  opacity: 1; }

.fade-out.mui-leave {
  transition-duration: 500ms;
  transition-timing-function: linear;
  opacity: 1;
  transition-property: opacity; }

.fade-out.mui-leave.mui-leave-active {
  opacity: 0; }

.hinge-in-from-top.mui-enter {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: perspective(2000px) rotateX(-90deg);
  transform-origin: top;
  transition-property: transform, opacity;
  opacity: 0; }

.hinge-in-from-top.mui-enter.mui-enter-active {
  transform: perspective(2000px) rotate(0deg);
  opacity: 1; }

.hinge-in-from-right.mui-enter {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: perspective(2000px) rotateY(-90deg);
  transform-origin: right;
  transition-property: transform, opacity;
  opacity: 0; }

.hinge-in-from-right.mui-enter.mui-enter-active {
  transform: perspective(2000px) rotate(0deg);
  opacity: 1; }

.hinge-in-from-bottom.mui-enter {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: perspective(2000px) rotateX(90deg);
  transform-origin: bottom;
  transition-property: transform, opacity;
  opacity: 0; }

.hinge-in-from-bottom.mui-enter.mui-enter-active {
  transform: perspective(2000px) rotate(0deg);
  opacity: 1; }

.hinge-in-from-left.mui-enter {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: perspective(2000px) rotateY(90deg);
  transform-origin: left;
  transition-property: transform, opacity;
  opacity: 0; }

.hinge-in-from-left.mui-enter.mui-enter-active {
  transform: perspective(2000px) rotate(0deg);
  opacity: 1; }

.hinge-in-from-middle-x.mui-enter {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: perspective(2000px) rotateX(-90deg);
  transform-origin: center;
  transition-property: transform, opacity;
  opacity: 0; }

.hinge-in-from-middle-x.mui-enter.mui-enter-active {
  transform: perspective(2000px) rotate(0deg);
  opacity: 1; }

.hinge-in-from-middle-y.mui-enter {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: perspective(2000px) rotateY(-90deg);
  transform-origin: center;
  transition-property: transform, opacity;
  opacity: 0; }

.hinge-in-from-middle-y.mui-enter.mui-enter-active {
  transform: perspective(2000px) rotate(0deg);
  opacity: 1; }

.hinge-out-from-top.mui-leave {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: perspective(2000px) rotate(0deg);
  transform-origin: top;
  transition-property: transform, opacity;
  opacity: 1; }

.hinge-out-from-top.mui-leave.mui-leave-active {
  transform: perspective(2000px) rotateX(-90deg);
  opacity: 0; }

.hinge-out-from-right.mui-leave {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: perspective(2000px) rotate(0deg);
  transform-origin: right;
  transition-property: transform, opacity;
  opacity: 1; }

.hinge-out-from-right.mui-leave.mui-leave-active {
  transform: perspective(2000px) rotateY(-90deg);
  opacity: 0; }

.hinge-out-from-bottom.mui-leave {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: perspective(2000px) rotate(0deg);
  transform-origin: bottom;
  transition-property: transform, opacity;
  opacity: 1; }

.hinge-out-from-bottom.mui-leave.mui-leave-active {
  transform: perspective(2000px) rotateX(90deg);
  opacity: 0; }

.hinge-out-from-left.mui-leave {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: perspective(2000px) rotate(0deg);
  transform-origin: left;
  transition-property: transform, opacity;
  opacity: 1; }

.hinge-out-from-left.mui-leave.mui-leave-active {
  transform: perspective(2000px) rotateY(90deg);
  opacity: 0; }

.hinge-out-from-middle-x.mui-leave {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: perspective(2000px) rotate(0deg);
  transform-origin: center;
  transition-property: transform, opacity;
  opacity: 1; }

.hinge-out-from-middle-x.mui-leave.mui-leave-active {
  transform: perspective(2000px) rotateX(-90deg);
  opacity: 0; }

.hinge-out-from-middle-y.mui-leave {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: perspective(2000px) rotate(0deg);
  transform-origin: center;
  transition-property: transform, opacity;
  opacity: 1; }

.hinge-out-from-middle-y.mui-leave.mui-leave-active {
  transform: perspective(2000px) rotateY(-90deg);
  opacity: 0; }

.scale-in-up.mui-enter {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: scale(0.5);
  transition-property: transform, opacity;
  opacity: 0; }

.scale-in-up.mui-enter.mui-enter-active {
  transform: scale(1);
  opacity: 1; }

.scale-in-down.mui-enter {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: scale(1.5);
  transition-property: transform, opacity;
  opacity: 0; }

.scale-in-down.mui-enter.mui-enter-active {
  transform: scale(1);
  opacity: 1; }

.scale-out-up.mui-leave {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: scale(1);
  transition-property: transform, opacity;
  opacity: 1; }

.scale-out-up.mui-leave.mui-leave-active {
  transform: scale(1.5);
  opacity: 0; }

.scale-out-down.mui-leave {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: scale(1);
  transition-property: transform, opacity;
  opacity: 1; }

.scale-out-down.mui-leave.mui-leave-active {
  transform: scale(0.5);
  opacity: 0; }

.spin-in.mui-enter {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: rotate(-0.75turn);
  transition-property: transform, opacity;
  opacity: 0; }

.spin-in.mui-enter.mui-enter-active {
  transform: rotate(0);
  opacity: 1; }

.spin-out.mui-leave {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: rotate(0);
  transition-property: transform, opacity;
  opacity: 1; }

.spin-out.mui-leave.mui-leave-active {
  transform: rotate(0.75turn);
  opacity: 0; }

.spin-in-ccw.mui-enter {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: rotate(0.75turn);
  transition-property: transform, opacity;
  opacity: 0; }

.spin-in-ccw.mui-enter.mui-enter-active {
  transform: rotate(0);
  opacity: 1; }

.spin-out-ccw.mui-leave {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: rotate(0);
  transition-property: transform, opacity;
  opacity: 1; }

.spin-out-ccw.mui-leave.mui-leave-active {
  transform: rotate(-0.75turn);
  opacity: 0; }

.slow {
  transition-duration: 750ms !important; }

.fast {
  transition-duration: 250ms !important; }

.linear {
  transition-timing-function: linear !important; }

.ease {
  transition-timing-function: ease !important; }

.ease-in {
  transition-timing-function: ease-in !important; }

.ease-out {
  transition-timing-function: ease-out !important; }

.ease-in-out {
  transition-timing-function: ease-in-out !important; }

.bounce-in {
  transition-timing-function: cubic-bezier(0.485, 0.155, 0.24, 1.245) !important; }

.bounce-out {
  transition-timing-function: cubic-bezier(0.485, 0.155, 0.515, 0.845) !important; }

.bounce-in-out {
  transition-timing-function: cubic-bezier(0.76, -0.245, 0.24, 1.245) !important; }

.short-delay {
  transition-delay: 300ms !important; }

.long-delay {
  transition-delay: 700ms !important; }

.shake {
  animation-name: shake-7; }

@keyframes shake-7 {
  0%, 10%, 20%, 30%, 40%, 50%, 60%, 70%, 80%, 90% {
    transform: translateX(7%); }
  5%, 15%, 25%, 35%, 45%, 55%, 65%, 75%, 85%, 95% {
    transform: translateX(-7%); } }

.spin-cw {
  animation-name: spin-cw-1turn; }

@keyframes spin-cw-1turn {
  0% {
    transform: rotate(-1turn); }
  100% {
    transform: rotate(0); } }

.spin-ccw {
  animation-name: spin-cw-1turn; }

@keyframes spin-cw-1turn {
  0% {
    transform: rotate(0); }
  100% {
    transform: rotate(1turn); } }

.wiggle {
  animation-name: wiggle-7deg; }

@keyframes wiggle-7deg {
  40%, 50%, 60% {
    transform: rotate(7deg); }
  35%, 45%, 55%, 65% {
    transform: rotate(-7deg); }
  0%, 30%, 70%, 100% {
    transform: rotate(0); } }

.shake,
.spin-cw,
.spin-ccw,
.wiggle {
  animation-duration: 500ms; }

.infinite {
  animation-iteration-count: infinite; }

.slow {
  animation-duration: 750ms !important; }

.fast {
  animation-duration: 250ms !important; }

.linear {
  animation-timing-function: linear !important; }

.ease {
  animation-timing-function: ease !important; }

.ease-in {
  animation-timing-function: ease-in !important; }

.ease-out {
  animation-timing-function: ease-out !important; }

.ease-in-out {
  animation-timing-function: ease-in-out !important; }

.bounce-in {
  animation-timing-function: cubic-bezier(0.485, 0.155, 0.24, 1.245) !important; }

.bounce-out {
  animation-timing-function: cubic-bezier(0.485, 0.155, 0.515, 0.845) !important; }

.bounce-in-out {
  animation-timing-function: cubic-bezier(0.76, -0.245, 0.24, 1.245) !important; }

.short-delay {
  animation-delay: 300ms !important; }

.long-delay {
  animation-delay: 700ms !important; }

@font-face {
  font-family: 'lg';
  src: url("../../assets/fonts/lg.eot?n1z373");
  src: url("../../assets/fonts/lg.eot?#iefixn1z373") format("embedded-opentype"), url("../../assets/fonts/lg.woff?n1z373") format("woff"), url("../../assets/fonts/lg.ttf?n1z373") format("truetype"), url("../../assets/fonts/lg.svg?n1z373#lg") format("svg");
  font-weight: normal;
  font-style: normal; }

.lg-icon {
  font-family: 'lg';
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.lg-actions .lg-next, .lg-actions .lg-prev {
  background-color: rgba(240, 240, 240, 0.45);
  border-radius: 2px;
  color: #ef5350;
  cursor: pointer;
  display: block;
  font-size: 22px;
  margin-top: -10px;
  padding: 8px 10px 9px;
  position: absolute;
  top: 50%;
  z-index: 1080; }
  .lg-actions .lg-next.disabled, .lg-actions .lg-prev.disabled {
    pointer-events: none;
    opacity: 0.5; }
  .lg-actions .lg-next:hover, .lg-actions .lg-prev:hover {
    color: #ea1a16; }

.lg-actions .lg-next {
  right: 20px; }
  .lg-actions .lg-next:before {
    content: "\e095"; }

.lg-actions .lg-prev {
  left: 20px; }
  .lg-actions .lg-prev:after {
    content: "\e094"; }

@-webkit-keyframes lg-right-end {
  0% {
    left: 0; }
  50% {
    left: -30px; }
  100% {
    left: 0; } }

@-moz-keyframes lg-right-end {
  0% {
    left: 0; }
  50% {
    left: -30px; }
  100% {
    left: 0; } }

@-ms-keyframes lg-right-end {
  0% {
    left: 0; }
  50% {
    left: -30px; }
  100% {
    left: 0; } }

@keyframes lg-right-end {
  0% {
    left: 0; }
  50% {
    left: -30px; }
  100% {
    left: 0; } }

@-webkit-keyframes lg-left-end {
  0% {
    left: 0; }
  50% {
    left: 30px; }
  100% {
    left: 0; } }

@-moz-keyframes lg-left-end {
  0% {
    left: 0; }
  50% {
    left: 30px; }
  100% {
    left: 0; } }

@-ms-keyframes lg-left-end {
  0% {
    left: 0; }
  50% {
    left: 30px; }
  100% {
    left: 0; } }

@keyframes lg-left-end {
  0% {
    left: 0; }
  50% {
    left: 30px; }
  100% {
    left: 0; } }

.lg-outer.lg-right-end .lg-object {
  -webkit-animation: lg-right-end 0.3s;
  -o-animation: lg-right-end 0.3s;
  animation: lg-right-end 0.3s;
  position: relative; }

.lg-outer.lg-left-end .lg-object {
  -webkit-animation: lg-left-end 0.3s;
  -o-animation: lg-left-end 0.3s;
  animation: lg-left-end 0.3s;
  position: relative; }

.lg-toolbar {
  z-index: 1082;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
  background-color: rgba(255, 255, 255, 0.9); }
  .lg-toolbar .lg-icon {
    color: #ef5350;
    cursor: pointer;
    float: right;
    font-size: 24px;
    height: 47px;
    line-height: 27px;
    padding: 10px 0;
    text-align: center;
    width: 50px;
    text-decoration: none !important;
    outline: medium none;
    -webkit-transition: color 0.2s linear;
    -o-transition: color 0.2s linear;
    transition: color 0.2s linear; }
    .lg-toolbar .lg-icon:hover {
      color: #ea1a16; }
  .lg-toolbar .lg-close:after {
    content: "\e070"; }
  .lg-toolbar .lg-download:after {
    content: "\e0f2"; }

.lg-sub-html {
  background-color: rgba(255, 255, 255, 0.9);
  bottom: 0;
  color: #333;
  font-size: 16px;
  left: 0;
  padding: 10px 40px;
  position: fixed;
  right: 0;
  text-align: center;
  z-index: 1080; }
  .lg-sub-html h4 {
    margin: 0;
    font-size: 13px;
    font-weight: bold; }
  .lg-sub-html p {
    font-size: 12px;
    margin: 5px auto 0;
    max-width: 80%; }

#lg-counter {
  color: #ef5350;
  display: inline-block;
  font-size: 16px;
  padding-left: 20px;
  padding-top: 12px;
  vertical-align: middle; }

.lg-toolbar, .lg-prev, .lg-next {
  opacity: 1;
  -webkit-transition: -webkit-transform 0.35s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.35s cubic-bezier(0, 0, 0.25, 1) 0s, color 0.2s linear;
  -moz-transition: -moz-transform 0.35s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.35s cubic-bezier(0, 0, 0.25, 1) 0s, color 0.2s linear;
  -o-transition: -o-transform 0.35s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.35s cubic-bezier(0, 0, 0.25, 1) 0s, color 0.2s linear;
  transition: transform 0.35s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.35s cubic-bezier(0, 0, 0.25, 1) 0s, color 0.2s linear; }

.lg-hide-items .lg-prev {
  opacity: 0;
  -webkit-transform: translate3d(-10px, 0, 0);
  transform: translate3d(-10px, 0, 0); }

.lg-hide-items .lg-next {
  opacity: 0;
  -webkit-transform: translate3d(10px, 0, 0);
  transform: translate3d(10px, 0, 0); }

.lg-hide-items .lg-toolbar {
  opacity: 0;
  -webkit-transform: translate3d(0, -10px, 0);
  transform: translate3d(0, -10px, 0); }

body:not(.lg-from-hash) .lg-outer.lg-start-zoom .lg-object {
  -webkit-transform: scale3d(0.5, 0.5, 0.5);
  transform: scale3d(0.5, 0.5, 0.5);
  opacity: 0;
  -webkit-transition: -webkit-transform 250ms cubic-bezier(0, 0, 0.25, 1) 0s, opacity 250ms cubic-bezier(0, 0, 0.25, 1) !important;
  -moz-transition: -moz-transform 250ms cubic-bezier(0, 0, 0.25, 1) 0s, opacity 250ms cubic-bezier(0, 0, 0.25, 1) !important;
  -o-transition: -o-transform 250ms cubic-bezier(0, 0, 0.25, 1) 0s, opacity 250ms cubic-bezier(0, 0, 0.25, 1) !important;
  transition: transform 250ms cubic-bezier(0, 0, 0.25, 1) 0s, opacity 250ms cubic-bezier(0, 0, 0.25, 1) !important;
  -webkit-transform-origin: 50% 50%;
  -moz-transform-origin: 50% 50%;
  -ms-transform-origin: 50% 50%;
  transform-origin: 50% 50%; }

body:not(.lg-from-hash) .lg-outer.lg-start-zoom .lg-item.lg-complete .lg-object {
  -webkit-transform: scale3d(1, 1, 1);
  transform: scale3d(1, 1, 1);
  opacity: 1; }

.lg-outer .lg-thumb-outer {
  background-color: #FFF;
  bottom: 0;
  position: absolute;
  width: 100%;
  z-index: 1080;
  max-height: 350px;
  -webkit-transform: translate3d(0, 100%, 0);
  transform: translate3d(0, 100%, 0);
  -webkit-transition: -webkit-transform 0.25s cubic-bezier(0, 0, 0.25, 1) 0s;
  -moz-transition: -moz-transform 0.25s cubic-bezier(0, 0, 0.25, 1) 0s;
  -o-transition: -o-transform 0.25s cubic-bezier(0, 0, 0.25, 1) 0s;
  transition: transform 0.25s cubic-bezier(0, 0, 0.25, 1) 0s; }
  .lg-outer .lg-thumb-outer.lg-grab .lg-thumb-item {
    cursor: -webkit-grab;
    cursor: -moz-grab;
    cursor: -o-grab;
    cursor: -ms-grab;
    cursor: grab; }
  .lg-outer .lg-thumb-outer.lg-grabbing .lg-thumb-item {
    cursor: move;
    cursor: -webkit-grabbing;
    cursor: -moz-grabbing;
    cursor: -o-grabbing;
    cursor: -ms-grabbing;
    cursor: grabbing; }
  .lg-outer .lg-thumb-outer.lg-dragging .lg-thumb {
    -webkit-transition-duration: 0s !important;
    transition-duration: 0s !important; }

.lg-outer.lg-thumb-open .lg-thumb-outer {
  -webkit-transform: translate3d(0, 0%, 0);
  transform: translate3d(0, 0%, 0); }

.lg-outer .lg-thumb {
  padding: 10px 0;
  height: 100%;
  margin-bottom: -5px; }

.lg-outer .lg-thumb-item {
  border-radius: 5px;
  cursor: pointer;
  float: left;
  overflow: hidden;
  height: 100%;
  border: 2px solid #FFF;
  border-radius: 4px;
  margin-bottom: 5px; }
  @media (min-width: 1025px) {
    .lg-outer .lg-thumb-item {
      -webkit-transition: border-color 0.25s ease;
      -o-transition: border-color 0.25s ease;
      transition: border-color 0.25s ease; } }
  .lg-outer .lg-thumb-item.active, .lg-outer .lg-thumb-item:hover {
    border-color: #a90707; }
  .lg-outer .lg-thumb-item img {
    width: 100%;
    height: 100%; }

.lg-outer.lg-has-thumb .lg-item {
  padding-bottom: 120px; }

.lg-outer.lg-can-toggle .lg-item {
  padding-bottom: 0; }

.lg-outer.lg-pull-caption-up .lg-sub-html {
  -webkit-transition: bottom 0.25s ease;
  -o-transition: bottom 0.25s ease;
  transition: bottom 0.25s ease; }

.lg-outer.lg-pull-caption-up.lg-thumb-open .lg-sub-html {
  bottom: 100px; }

.lg-outer .lg-toogle-thumb {
  background-color: #transparent;
  border-radius: 2px 2px 0 0;
  color: #ef5350;
  cursor: pointer;
  font-size: 24px;
  height: 39px;
  line-height: 27px;
  padding: 5px 0;
  position: absolute;
  right: 20px;
  text-align: center;
  top: -39px;
  width: 50px; }
  .lg-outer .lg-toogle-thumb:after {
    content: "\e1ff"; }
  .lg-outer .lg-toogle-thumb:hover {
    color: #ea1a16; }

.lg-outer .lg-video-cont {
  display: inline-block;
  vertical-align: middle;
  max-width: 1140px;
  max-height: 100%;
  width: 100%;
  padding: 0 5px; }

.lg-outer .lg-video {
  width: 100%;
  height: 0;
  padding-bottom: 56.25%;
  overflow: hidden;
  position: relative; }
  .lg-outer .lg-video .lg-object {
    display: inline-block;
    position: absolute;
    top: 0;
    left: 0;
    width: 100% !important;
    height: 100% !important; }
  .lg-outer .lg-video .lg-video-play {
    width: 84px;
    height: 59px;
    position: absolute;
    left: 50%;
    top: 50%;
    margin-left: -42px;
    margin-top: -30px;
    z-index: 1080;
    cursor: pointer; }

.lg-outer .lg-has-vimeo .lg-video-play {
  background: url("../../assets/img/vimeo-play.png") no-repeat scroll 0 0 transparent; }

.lg-outer .lg-has-vimeo:hover .lg-video-play {
  background: url("../../assets/img/vimeo-play.png") no-repeat scroll 0 -58px transparent; }

.lg-outer .lg-has-html5 .lg-video-play {
  background: transparent url("../../assets/img/video-play.png") no-repeat scroll 0 0;
  height: 64px;
  margin-left: -32px;
  margin-top: -32px;
  width: 64px;
  opacity: 0.8; }

.lg-outer .lg-has-html5:hover .lg-video-play {
  opacity: 1; }

.lg-outer .lg-has-youtube .lg-video-play {
  background: url("../../assets/img/youtube-play.png") no-repeat scroll 0 0 transparent; }

.lg-outer .lg-has-youtube:hover .lg-video-play {
  background: url("../../assets/img/youtube-play.png") no-repeat scroll 0 -60px transparent; }

.lg-outer .lg-video-object {
  width: 100% !important;
  height: 100% !important;
  position: absolute;
  top: 0;
  left: 0; }

.lg-outer .lg-has-video .lg-video-object {
  visibility: hidden; }

.lg-outer .lg-has-video.lg-video-playing .lg-object, .lg-outer .lg-has-video.lg-video-playing .lg-video-play {
  display: none; }

.lg-outer .lg-has-video.lg-video-playing .lg-video-object {
  visibility: visible; }

.lg-progress-bar {
  background-color: #FFF;
  height: 5px;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
  z-index: 1080;
  opacity: 0;
  -webkit-transition: opacity 0.08s ease 0s;
  -moz-transition: opacity 0.08s ease 0s;
  -o-transition: opacity 0.08s ease 0s;
  transition: opacity 0.08s ease 0s; }
  .lg-progress-bar .lg-progress {
    background-color: #ef5350;
    height: 5px;
    width: 0; }
  .lg-progress-bar.lg-start .lg-progress {
    width: 100%; }
  .lg-show-autoplay .lg-progress-bar {
    opacity: 1; }

.lg-autoplay-button:after {
  content: "\e01d"; }
  .lg-show-autoplay .lg-autoplay-button:after {
    content: "\e01a"; }

.lg-outer.lg-css3.lg-zoom-dragging .lg-item.lg-complete.lg-zoomable .lg-img-wrap, .lg-outer.lg-css3.lg-zoom-dragging .lg-item.lg-complete.lg-zoomable .lg-image {
  -webkit-transition-duration: 0s;
  transition-duration: 0s; }

.lg-outer .lg-item.lg-complete.lg-zoomable .lg-img-wrap {
  -webkit-transition: left 0.3s cubic-bezier(0, 0, 0.25, 1) 0s, top 0.3s cubic-bezier(0, 0, 0.25, 1) 0s;
  -moz-transition: left 0.3s cubic-bezier(0, 0, 0.25, 1) 0s, top 0.3s cubic-bezier(0, 0, 0.25, 1) 0s;
  -o-transition: left 0.3s cubic-bezier(0, 0, 0.25, 1) 0s, top 0.3s cubic-bezier(0, 0, 0.25, 1) 0s;
  transition: left 0.3s cubic-bezier(0, 0, 0.25, 1) 0s, top 0.3s cubic-bezier(0, 0, 0.25, 1) 0s;
  -webkit-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
  -webkit-backface-visibility: hidden;
  -moz-backface-visibility: hidden;
  backface-visibility: hidden; }

.lg-outer .lg-item.lg-complete.lg-zoomable .lg-image {
  -webkit-transform: scale3d(1, 1, 1);
  transform: scale3d(1, 1, 1);
  -webkit-transition: -webkit-transform 0.3s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.15s !important;
  -moz-transition: -moz-transform 0.3s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.15s !important;
  -o-transition: -o-transform 0.3s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.15s !important;
  transition: transform 0.3s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.15s !important;
  -webkit-transform-origin: 0 0;
  -moz-transform-origin: 0 0;
  -ms-transform-origin: 0 0;
  transform-origin: 0 0;
  -webkit-backface-visibility: hidden;
  -moz-backface-visibility: hidden;
  backface-visibility: hidden; }

#lg-zoom-in:after {
  content: "\e311"; }

#lg-actual-size {
  font-size: 20px; }
  #lg-actual-size:after {
    content: "\e033"; }

#lg-zoom-out {
  opacity: 0.5;
  pointer-events: none; }
  #lg-zoom-out:after {
    content: "\e312"; }
  .lg-zoomed #lg-zoom-out {
    opacity: 1;
    pointer-events: auto; }

.lg-outer .lg-pager-outer {
  bottom: 60px;
  left: 0;
  position: absolute;
  right: 0;
  text-align: center;
  z-index: 1080;
  height: 10px; }
  .lg-outer .lg-pager-outer.lg-pager-hover .lg-pager-cont {
    overflow: visible; }

.lg-outer .lg-pager-cont {
  cursor: pointer;
  display: inline-block;
  overflow: hidden;
  position: relative;
  vertical-align: top;
  margin: 0 5px; }
  .lg-outer .lg-pager-cont:hover .lg-pager-thumb-cont {
    opacity: 1;
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0); }
  .lg-outer .lg-pager-cont.lg-pager-active .lg-pager {
    box-shadow: 0 0 0 2px white inset; }

.lg-outer .lg-pager-thumb-cont {
  background-color: #fff;
  color: #FFF;
  bottom: 100%;
  height: 83px;
  left: 0;
  margin-bottom: 20px;
  margin-left: -60px;
  opacity: 0;
  padding: 5px;
  position: absolute;
  width: 120px;
  border-radius: 3px;
  -webkit-transition: opacity 0.15s ease 0s, -webkit-transform 0.15s ease 0s;
  -moz-transition: opacity 0.15s ease 0s, -moz-transform 0.15s ease 0s;
  -o-transition: opacity 0.15s ease 0s, -o-transform 0.15s ease 0s;
  transition: opacity 0.15s ease 0s, transform 0.15s ease 0s;
  -webkit-transform: translate3d(0, 5px, 0);
  transform: translate3d(0, 5px, 0); }
  .lg-outer .lg-pager-thumb-cont img {
    width: 100%;
    height: 100%; }

.lg-outer .lg-pager {
  background-color: rgba(255, 255, 255, 0.5);
  border-radius: 50%;
  box-shadow: 0 0 0 8px rgba(255, 255, 255, 0.7) inset;
  display: block;
  height: 12px;
  -webkit-transition: box-shadow 0.3s ease 0s;
  -o-transition: box-shadow 0.3s ease 0s;
  transition: box-shadow 0.3s ease 0s;
  width: 12px; }
  .lg-outer .lg-pager:hover, .lg-outer .lg-pager:focus {
    box-shadow: 0 0 0 8px white inset; }

.lg-outer .lg-caret {
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  border-top: 10px dashed;
  bottom: -10px;
  display: inline-block;
  height: 0;
  left: 50%;
  margin-left: -5px;
  position: absolute;
  vertical-align: middle;
  width: 0; }

.lg-fullscreen:after {
  content: "\e20c"; }
  .lg-fullscreen-on .lg-fullscreen:after {
    content: "\e20d"; }

.group {
  *zoom: 1;
  margin: 0 auto; }

.group:before, .group:after {
  display: table;
  content: "";
  line-height: 0; }

.group:after {
  clear: both; }

.lg-outer {
  width: 100%;
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 1050;
  opacity: 0;
  -webkit-transition: opacity 0.15s ease 0s;
  -o-transition: opacity 0.15s ease 0s;
  transition: opacity 0.15s ease 0s; }
  .lg-outer * {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box; }
  .lg-outer.lg-visible {
    opacity: 1; }
  .lg-outer.lg-css3 .lg-item.lg-prev-slide, .lg-outer.lg-css3 .lg-item.lg-next-slide, .lg-outer.lg-css3 .lg-item.lg-current {
    -webkit-transition-duration: inherit !important;
    transition-duration: inherit !important;
    -webkit-transition-timing-function: inherit !important;
    transition-timing-function: inherit !important; }
  .lg-outer.lg-css3.lg-dragging .lg-item.lg-prev-slide, .lg-outer.lg-css3.lg-dragging .lg-item.lg-next-slide, .lg-outer.lg-css3.lg-dragging .lg-item.lg-current {
    -webkit-transition-duration: 0s !important;
    transition-duration: 0s !important;
    opacity: 1; }
  .lg-outer.lg-grab img.lg-object {
    cursor: -webkit-grab;
    cursor: -moz-grab;
    cursor: -o-grab;
    cursor: -ms-grab;
    cursor: grab; }
  .lg-outer.lg-grabbing img.lg-object {
    cursor: move;
    cursor: -webkit-grabbing;
    cursor: -moz-grabbing;
    cursor: -o-grabbing;
    cursor: -ms-grabbing;
    cursor: grabbing; }
  .lg-outer .lg {
    height: 100%;
    width: 100%;
    position: relative;
    overflow: hidden;
    margin-left: auto;
    margin-right: auto;
    max-width: 100%;
    max-height: 100%; }
  .lg-outer .lg-inner {
    width: 100%;
    height: 100%;
    position: absolute;
    left: 0;
    top: 0;
    white-space: nowrap; }
  .lg-outer .lg-item {
    background: url("../../assets/img/loading.gif") no-repeat scroll center center transparent;
    display: none !important; }
  .lg-outer.lg-css3 .lg-prev-slide, .lg-outer.lg-css3 .lg-current, .lg-outer.lg-css3 .lg-next-slide {
    display: inline-block !important; }
  .lg-outer.lg-css .lg-current {
    display: inline-block !important; }
  .lg-outer .lg-item, .lg-outer .lg-img-wrap {
    display: inline-block;
    text-align: center;
    position: absolute;
    width: 100%;
    height: 100%; }
    .lg-outer .lg-item:before, .lg-outer .lg-img-wrap:before {
      content: "";
      display: inline-block;
      height: 50%;
      width: 1px;
      margin-right: -1px; }
  .lg-outer .lg-img-wrap {
    position: absolute;
    padding: 0 5px;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0; }
  .lg-outer .lg-item.lg-complete {
    background-image: none; }
  .lg-outer .lg-item.lg-current {
    z-index: 1060; }
  .lg-outer .lg-image {
    display: inline-block;
    vertical-align: middle;
    max-width: 100%;
    max-height: 100%;
    width: auto !important;
    height: auto !important; }
  .lg-outer.lg-show-after-load .lg-item .lg-object, .lg-outer.lg-show-after-load .lg-item .lg-video-play {
    opacity: 0;
    -webkit-transition: opacity 0.15s ease 0s;
    -o-transition: opacity 0.15s ease 0s;
    transition: opacity 0.15s ease 0s; }
  .lg-outer.lg-show-after-load .lg-item.lg-complete .lg-object, .lg-outer.lg-show-after-load .lg-item.lg-complete .lg-video-play {
    opacity: 1; }
  .lg-outer .lg-empty-html {
    display: none; }
  .lg-outer.lg-hide-download #lg-download {
    display: none; }

.lg-backdrop {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 1040;
  background-color: #FFF;
  opacity: 0;
  -webkit-transition: opacity 0.15s ease 0s;
  -o-transition: opacity 0.15s ease 0s;
  transition: opacity 0.15s ease 0s; }
  .lg-backdrop.in {
    opacity: 1; }

.lg-css3.lg-no-trans .lg-prev-slide, .lg-css3.lg-no-trans .lg-next-slide, .lg-css3.lg-no-trans .lg-current {
  -webkit-transition: none 0s ease 0s !important;
  -moz-transition: none 0s ease 0s !important;
  -o-transition: none 0s ease 0s !important;
  transition: none 0s ease 0s !important; }

.lg-css3.lg-use-css3 .lg-item {
  -webkit-backface-visibility: hidden;
  -moz-backface-visibility: hidden;
  backface-visibility: hidden; }

.lg-css3.lg-use-left .lg-item {
  -webkit-backface-visibility: hidden;
  -moz-backface-visibility: hidden;
  backface-visibility: hidden; }

.lg-css3.lg-fade .lg-item {
  opacity: 0; }
  .lg-css3.lg-fade .lg-item.lg-current {
    opacity: 1; }
  .lg-css3.lg-fade .lg-item.lg-prev-slide, .lg-css3.lg-fade .lg-item.lg-next-slide, .lg-css3.lg-fade .lg-item.lg-current {
    -webkit-transition: opacity 0.1s ease 0s;
    -moz-transition: opacity 0.1s ease 0s;
    -o-transition: opacity 0.1s ease 0s;
    transition: opacity 0.1s ease 0s; }

.lg-css3.lg-slide.lg-use-css3 .lg-item {
  opacity: 0; }
  .lg-css3.lg-slide.lg-use-css3 .lg-item.lg-prev-slide {
    -webkit-transform: translate3d(-100%, 0, 0);
    transform: translate3d(-100%, 0, 0); }
  .lg-css3.lg-slide.lg-use-css3 .lg-item.lg-next-slide {
    -webkit-transform: translate3d(100%, 0, 0);
    transform: translate3d(100%, 0, 0); }
  .lg-css3.lg-slide.lg-use-css3 .lg-item.lg-current {
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
    opacity: 1; }
  .lg-css3.lg-slide.lg-use-css3 .lg-item.lg-prev-slide, .lg-css3.lg-slide.lg-use-css3 .lg-item.lg-next-slide, .lg-css3.lg-slide.lg-use-css3 .lg-item.lg-current {
    -webkit-transition: -webkit-transform 1s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.1s ease 0s;
    -moz-transition: -moz-transform 1s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.1s ease 0s;
    -o-transition: -o-transform 1s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.1s ease 0s;
    transition: transform 1s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.1s ease 0s; }

.lg-css3.lg-slide.lg-use-left .lg-item {
  opacity: 0;
  position: absolute;
  left: 0; }
  .lg-css3.lg-slide.lg-use-left .lg-item.lg-prev-slide {
    left: -100%; }
  .lg-css3.lg-slide.lg-use-left .lg-item.lg-next-slide {
    left: 100%; }
  .lg-css3.lg-slide.lg-use-left .lg-item.lg-current {
    left: 0;
    opacity: 1; }
  .lg-css3.lg-slide.lg-use-left .lg-item.lg-prev-slide, .lg-css3.lg-slide.lg-use-left .lg-item.lg-next-slide, .lg-css3.lg-slide.lg-use-left .lg-item.lg-current {
    -webkit-transition: left 1s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.1s ease 0s;
    -moz-transition: left 1s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.1s ease 0s;
    -o-transition: left 1s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.1s ease 0s;
    transition: left 1s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.1s ease 0s; }

/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
   * 1. Set default font family to sans-serif.
   * 2. Prevent iOS and IE text size adjust after device orientation change,
   *    without disabling user zoom.
   */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
   * Remove default margin.
   */
body {
  margin: 0; }

/* HTML5 display definitions
       ========================================================================== */
/**
   * Correct `block` display not defined for any HTML5 element in IE 8/9.
   * Correct `block` display not defined for `details` or `summary` in IE 10/11
   * and Firefox.
   * Correct `block` display not defined for `main` in IE 11.
   */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
   * 1. Correct `inline-block` display not defined in IE 8/9.
   * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
   */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
   * Prevent modern browsers from displaying `audio` without controls.
   * Remove excess height in iOS 5 devices.
   */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
   * Address `[hidden]` styling not present in IE 8/9/10.
   * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
   */
[hidden],
template {
  display: none; }

/* Links
       ========================================================================== */
/**
   * Remove the gray background color from active links in IE 10.
   */
a {
  background-color: transparent; }

/**
   * Improve readability of focused elements when they are also in an
   * active/hover state.
   */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
       ========================================================================== */
/**
   * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
   */
abbr[title] {
  border-bottom: 1px dotted; }

/**
   * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
   */
b,
strong {
  font-weight: bold; }

/**
   * Address styling not present in Safari and Chrome.
   */
dfn {
  font-style: italic; }

/**
   * Address variable `h1` font-size and margin within `section` and `article`
   * contexts in Firefox 4+, Safari, and Chrome.
   */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
   * Address styling not present in IE 8/9.
   */
mark {
  background: #ff0;
  color: #000; }

/**
   * Address inconsistent and variable font size in all browsers.
   */
small {
  font-size: 80%; }

/**
   * Prevent `sub` and `sup` affecting `line-height` in all browsers.
   */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
       ========================================================================== */
/**
   * Remove border when inside `a` element in IE 8/9/10.
   */
img {
  border: 0; }

/**
   * Correct overflow not hidden in IE 9/10/11.
   */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
       ========================================================================== */
/**
   * Address margin not present in IE 8/9 and Safari.
   */
figure {
  margin: 1em 40px; }

/**
   * Address differences between Firefox and other browsers.
   */
hr {
  box-sizing: content-box;
  height: 0; }

/**
   * Contain overflow in all browsers.
   */
pre {
  overflow: auto; }

/**
   * Address odd `em`-unit font size rendering in all browsers.
   */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
       ========================================================================== */
/**
   * Known limitation: by default, Chrome and Safari on OS X allow very limited
   * styling of `select`, unless a `border` property is set.
   */
/**
   * 1. Correct color not being inherited.
   *    Known issue: affects color of disabled elements.
   * 2. Correct font properties not being inherited.
   * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
   */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
   * Address `overflow` set to `hidden` in IE 8/9/10/11.
   */
button {
  overflow: visible; }

/**
   * Address inconsistent `text-transform` inheritance for `button` and `select`.
   * All other form control elements do not inherit `text-transform` values.
   * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
   * Correct `select` style inheritance in Firefox.
   */
button,
select {
  text-transform: none; }

/**
   * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
   *    and `video` controls.
   * 2. Correct inability to style clickable `input` types in iOS.
   * 3. Improve usability and consistency of cursor style between image-type
   *    `input` and others.
   */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
   * Re-set default cursor for disabled elements.
   */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
   * Remove inner padding and border in Firefox 4+.
   */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
   * Address Firefox 4+ setting `line-height` on `input` using `!important` in
   * the UA stylesheet.
   */
input {
  line-height: normal; }

/**
   * It's recommended that you don't attempt to style these elements.
   * Firefox's implementation doesn't respect box-sizing, padding, or width.
   *
   * 1. Address box sizing set to `content-box` in IE 8/9/10.
   * 2. Remove excess padding in IE 8/9/10.
   */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
   * Fix the cursor style for Chrome's increment/decrement buttons. For certain
   * `font-size` values of the `input`, it causes the cursor style of the
   * decrement button to change from `default` to `text`.
   */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
   * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
   * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
   */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */ }

/**
   * Remove inner padding and search cancel button in Safari and Chrome on OS X.
   * Safari (but not Chrome) clips the cancel button when the search input has
   * padding (and `textfield` appearance).
   */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
   * Define consistent border, margin, and padding.
   * [NOTE] We don't enable this ruleset in Foundation, because we want the <fieldset> element to have plain styling.
   */
/* fieldset {
      border: 1px solid #c0c0c0;
      margin: 0 2px;
      padding: 0.35em 0.625em 0.75em;
  } */
/**
   * 1. Correct `color` not being inherited in IE 8/9/10/11.
   * 2. Remove padding so people aren't caught out if they zero out fieldsets.
   */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
   * Remove default vertical scrollbar in IE 8/9/10/11.
   */
textarea {
  overflow: auto; }

/**
   * Don't inherit the `font-weight` (applied by a rule above).
   * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
   */
optgroup {
  font-weight: bold; }

/* Tables
       ========================================================================== */
/**
   * Remove most spacing between table cells.
   */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

.foundation-mq {
  font-family: "small=0em&medium=40em&large=64em&xlarge=75em&xxlarge=90em"; }

html {
  font-size: 100%;
  box-sizing: border-box;
  height: 100%; }

*,
*:before,
*:after {
  box-sizing: inherit; }

body {
  padding: 0;
  margin: 0;
  font-family: "prenton", Helvetica, Roboto, Arial, sans-serif;
  font-weight: normal;
  line-height: 1.5;
  color: #333;
  background: #fefefe;
  overflow-x: hidden;
  height: 100%;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

img {
  max-width: 100%;
  height: auto;
  -ms-interpolation-mode: bicubic;
  display: inline-block;
  vertical-align: middle; }

textarea {
  height: auto;
  min-height: 50px;
  border-radius: 0; }

select {
  width: 100%;
  border-radius: 0; }

#map_canvas img,
#map_canvas embed,
#map_canvas object,
.map_canvas img,
.map_canvas embed,
.map_canvas object,
.mqa-display img,
.mqa-display embed,
.mqa-display object {
  max-width: none !important; }

button {
  -webkit-appearance: none;
  -moz-appearance: none;
  background: transparent;
  padding: 0;
  border: 0;
  border-radius: 0;
  line-height: 1; }

.is-visible {
  display: block !important; }

.is-hidden {
  display: none !important; }

.align-right {
  justify-content: flex-end; }

.align-center {
  justify-content: center; }

.align-justify {
  justify-content: space-between; }

.align-spaced {
  justify-content: space-around; }

.align-top {
  align-items: flex-start; }

.align-self-top {
  align-self: flex-start; }

.align-bottom {
  align-items: flex-end; }

.align-self-bottom {
  align-self: flex-end; }

.align-middle {
  align-items: center; }

.align-self-middle {
  align-self: center; }

.align-stretch {
  align-items: stretch; }

.align-self-stretch {
  align-self: stretch; }

.small-order-1 {
  order: 1; }

.small-order-2 {
  order: 2; }

.small-order-3 {
  order: 3; }

.small-order-4 {
  order: 4; }

.small-order-5 {
  order: 5; }

.small-order-6 {
  order: 6; }

@media screen and (min-width: 40em) {
  .medium-order-1 {
    order: 1; }
  .medium-order-2 {
    order: 2; }
  .medium-order-3 {
    order: 3; }
  .medium-order-4 {
    order: 4; }
  .medium-order-5 {
    order: 5; }
  .medium-order-6 {
    order: 6; } }

@media screen and (min-width: 64em) {
  .large-order-1 {
    order: 1; }
  .large-order-2 {
    order: 2; }
  .large-order-3 {
    order: 3; }
  .large-order-4 {
    order: 4; }
  .large-order-5 {
    order: 5; }
  .large-order-6 {
    order: 6; } }

@media screen and (min-width: 75em) {
  .xlarge-order-1 {
    order: 1; }
  .xlarge-order-2 {
    order: 2; }
  .xlarge-order-3 {
    order: 3; }
  .xlarge-order-4 {
    order: 4; }
  .xlarge-order-5 {
    order: 5; }
  .xlarge-order-6 {
    order: 6; } }

@media screen and (min-width: 90em) {
  .xxlarge-order-1 {
    order: 1; }
  .xxlarge-order-2 {
    order: 2; }
  .xxlarge-order-3 {
    order: 3; }
  .xxlarge-order-4 {
    order: 4; }
  .xxlarge-order-5 {
    order: 5; }
  .xxlarge-order-6 {
    order: 6; } }

.row {
  max-width: 64rem;
  margin-left: auto;
  margin-right: auto;
  display: flex;
  flex-flow: row wrap; }
  .row .row {
    max-width: none;
    margin-left: -0.625rem;
    margin-right: -0.625rem;
    max-width: none; }
    @media screen and (min-width: 40em) {
      .row .row {
        margin-left: -0.9375rem;
        margin-right: -0.9375rem; } }
  .row.expanded {
    max-width: none; }
  .row.collapse > .column, .row.collapse > .columns {
    padding-left: 0;
    padding-right: 0; }

.column, .columns {
  flex: 1 1 0px;
  padding-left: 0.625rem;
  padding-right: 0.625rem;
  min-width: 0; }
  @media screen and (min-width: 40em) {
    .column, .columns {
      padding-left: 0.9375rem;
      padding-right: 0.9375rem; } }

.column.row.row, .row.row.columns {
  float: none;
  display: block; }
  .row .column.row.row, .row .row.row.columns {
    padding-left: 0;
    padding-right: 0;
    margin-left: 0;
    margin-right: 0; }

.small-1 {
  flex: 0 0 8.33333%;
  max-width: 8.33333%; }

.small-offset-0 {
  margin-left: 0%; }

.small-2 {
  flex: 0 0 16.66667%;
  max-width: 16.66667%; }

.small-offset-1 {
  margin-left: 8.33333%; }

.small-3 {
  flex: 0 0 25%;
  max-width: 25%; }

.small-offset-2 {
  margin-left: 16.66667%; }

.small-4 {
  flex: 0 0 33.33333%;
  max-width: 33.33333%; }

.small-offset-3 {
  margin-left: 25%; }

.small-5 {
  flex: 0 0 41.66667%;
  max-width: 41.66667%; }

.small-offset-4 {
  margin-left: 33.33333%; }

.small-6 {
  flex: 0 0 50%;
  max-width: 50%; }

.small-offset-5 {
  margin-left: 41.66667%; }

.small-7 {
  flex: 0 0 58.33333%;
  max-width: 58.33333%; }

.small-offset-6 {
  margin-left: 50%; }

.small-8 {
  flex: 0 0 66.66667%;
  max-width: 66.66667%; }

.small-offset-7 {
  margin-left: 58.33333%; }

.small-9 {
  flex: 0 0 75%;
  max-width: 75%; }

.small-offset-8 {
  margin-left: 66.66667%; }

.small-10 {
  flex: 0 0 83.33333%;
  max-width: 83.33333%; }

.small-offset-9 {
  margin-left: 75%; }

.small-11 {
  flex: 0 0 91.66667%;
  max-width: 91.66667%; }

.small-offset-10 {
  margin-left: 83.33333%; }

.small-12 {
  flex: 0 0 100%;
  max-width: 100%; }

.small-offset-11 {
  margin-left: 91.66667%; }

.small-order-1 {
  order: 1; }

.small-order-2 {
  order: 2; }

.small-order-3 {
  order: 3; }

.small-order-4 {
  order: 4; }

.small-order-5 {
  order: 5; }

.small-order-6 {
  order: 6; }

.small-up-1 {
  flex-wrap: wrap; }
  .small-up-1 > .column, .small-up-1 > .columns {
    flex: 0 0 100%;
    max-width: 100%; }

.small-up-2 {
  flex-wrap: wrap; }
  .small-up-2 > .column, .small-up-2 > .columns {
    flex: 0 0 50%;
    max-width: 50%; }

.small-up-3 {
  flex-wrap: wrap; }
  .small-up-3 > .column, .small-up-3 > .columns {
    flex: 0 0 33.33333%;
    max-width: 33.33333%; }

.small-up-4 {
  flex-wrap: wrap; }
  .small-up-4 > .column, .small-up-4 > .columns {
    flex: 0 0 25%;
    max-width: 25%; }

.small-up-5 {
  flex-wrap: wrap; }
  .small-up-5 > .column, .small-up-5 > .columns {
    flex: 0 0 20%;
    max-width: 20%; }

.small-up-6 {
  flex-wrap: wrap; }
  .small-up-6 > .column, .small-up-6 > .columns {
    flex: 0 0 16.66667%;
    max-width: 16.66667%; }

.small-up-7 {
  flex-wrap: wrap; }
  .small-up-7 > .column, .small-up-7 > .columns {
    flex: 0 0 14.28571%;
    max-width: 14.28571%; }

.small-up-8 {
  flex-wrap: wrap; }
  .small-up-8 > .column, .small-up-8 > .columns {
    flex: 0 0 12.5%;
    max-width: 12.5%; }

.small-collapse > .column, .small-collapse > .columns {
  padding-left: 0;
  padding-right: 0; }

.small-uncollapse > .column, .small-uncollapse > .columns {
  padding-left: 0.625rem;
  padding-right: 0.625rem; }

@media screen and (min-width: 40em) {
  .medium-1 {
    flex: 0 0 8.33333%;
    max-width: 8.33333%; }
  .medium-offset-0 {
    margin-left: 0%; }
  .medium-2 {
    flex: 0 0 16.66667%;
    max-width: 16.66667%; }
  .medium-offset-1 {
    margin-left: 8.33333%; }
  .medium-3 {
    flex: 0 0 25%;
    max-width: 25%; }
  .medium-offset-2 {
    margin-left: 16.66667%; }
  .medium-4 {
    flex: 0 0 33.33333%;
    max-width: 33.33333%; }
  .medium-offset-3 {
    margin-left: 25%; }
  .medium-5 {
    flex: 0 0 41.66667%;
    max-width: 41.66667%; }
  .medium-offset-4 {
    margin-left: 33.33333%; }
  .medium-6 {
    flex: 0 0 50%;
    max-width: 50%; }
  .medium-offset-5 {
    margin-left: 41.66667%; }
  .medium-7 {
    flex: 0 0 58.33333%;
    max-width: 58.33333%; }
  .medium-offset-6 {
    margin-left: 50%; }
  .medium-8 {
    flex: 0 0 66.66667%;
    max-width: 66.66667%; }
  .medium-offset-7 {
    margin-left: 58.33333%; }
  .medium-9 {
    flex: 0 0 75%;
    max-width: 75%; }
  .medium-offset-8 {
    margin-left: 66.66667%; }
  .medium-10 {
    flex: 0 0 83.33333%;
    max-width: 83.33333%; }
  .medium-offset-9 {
    margin-left: 75%; }
  .medium-11 {
    flex: 0 0 91.66667%;
    max-width: 91.66667%; }
  .medium-offset-10 {
    margin-left: 83.33333%; }
  .medium-12 {
    flex: 0 0 100%;
    max-width: 100%; }
  .medium-offset-11 {
    margin-left: 91.66667%; }
  .medium-order-1 {
    order: 1; }
  .medium-order-2 {
    order: 2; }
  .medium-order-3 {
    order: 3; }
  .medium-order-4 {
    order: 4; }
  .medium-order-5 {
    order: 5; }
  .medium-order-6 {
    order: 6; }
  .medium-up-1 {
    flex-wrap: wrap; }
    .medium-up-1 > .column, .medium-up-1 > .columns {
      flex: 0 0 100%;
      max-width: 100%; }
  .medium-up-2 {
    flex-wrap: wrap; }
    .medium-up-2 > .column, .medium-up-2 > .columns {
      flex: 0 0 50%;
      max-width: 50%; }
  .medium-up-3 {
    flex-wrap: wrap; }
    .medium-up-3 > .column, .medium-up-3 > .columns {
      flex: 0 0 33.33333%;
      max-width: 33.33333%; }
  .medium-up-4 {
    flex-wrap: wrap; }
    .medium-up-4 > .column, .medium-up-4 > .columns {
      flex: 0 0 25%;
      max-width: 25%; }
  .medium-up-5 {
    flex-wrap: wrap; }
    .medium-up-5 > .column, .medium-up-5 > .columns {
      flex: 0 0 20%;
      max-width: 20%; }
  .medium-up-6 {
    flex-wrap: wrap; }
    .medium-up-6 > .column, .medium-up-6 > .columns {
      flex: 0 0 16.66667%;
      max-width: 16.66667%; }
  .medium-up-7 {
    flex-wrap: wrap; }
    .medium-up-7 > .column, .medium-up-7 > .columns {
      flex: 0 0 14.28571%;
      max-width: 14.28571%; }
  .medium-up-8 {
    flex-wrap: wrap; }
    .medium-up-8 > .column, .medium-up-8 > .columns {
      flex: 0 0 12.5%;
      max-width: 12.5%; } }

@media screen and (min-width: 40em) and (min-width: 40em) {
  .medium-expand {
    flex: 1 1 0px; } }

.row.medium-unstack > .column, .row.medium-unstack > .columns {
  flex: 0 0 100%; }
  @media screen and (min-width: 40em) {
    .row.medium-unstack > .column, .row.medium-unstack > .columns {
      flex: 1 1 0px; } }

@media screen and (min-width: 40em) {
  .medium-collapse > .column, .medium-collapse > .columns {
    padding-left: 0;
    padding-right: 0; }
  .medium-uncollapse > .column, .medium-uncollapse > .columns {
    padding-left: 0.9375rem;
    padding-right: 0.9375rem; } }

@media screen and (min-width: 64em) {
  .large-1 {
    flex: 0 0 8.33333%;
    max-width: 8.33333%; }
  .large-offset-0 {
    margin-left: 0%; }
  .large-2 {
    flex: 0 0 16.66667%;
    max-width: 16.66667%; }
  .large-offset-1 {
    margin-left: 8.33333%; }
  .large-3 {
    flex: 0 0 25%;
    max-width: 25%; }
  .large-offset-2 {
    margin-left: 16.66667%; }
  .large-4 {
    flex: 0 0 33.33333%;
    max-width: 33.33333%; }
  .large-offset-3 {
    margin-left: 25%; }
  .large-5 {
    flex: 0 0 41.66667%;
    max-width: 41.66667%; }
  .large-offset-4 {
    margin-left: 33.33333%; }
  .large-6 {
    flex: 0 0 50%;
    max-width: 50%; }
  .large-offset-5 {
    margin-left: 41.66667%; }
  .large-7 {
    flex: 0 0 58.33333%;
    max-width: 58.33333%; }
  .large-offset-6 {
    margin-left: 50%; }
  .large-8 {
    flex: 0 0 66.66667%;
    max-width: 66.66667%; }
  .large-offset-7 {
    margin-left: 58.33333%; }
  .large-9 {
    flex: 0 0 75%;
    max-width: 75%; }
  .large-offset-8 {
    margin-left: 66.66667%; }
  .large-10 {
    flex: 0 0 83.33333%;
    max-width: 83.33333%; }
  .large-offset-9 {
    margin-left: 75%; }
  .large-11 {
    flex: 0 0 91.66667%;
    max-width: 91.66667%; }
  .large-offset-10 {
    margin-left: 83.33333%; }
  .large-12 {
    flex: 0 0 100%;
    max-width: 100%; }
  .large-offset-11 {
    margin-left: 91.66667%; }
  .large-order-1 {
    order: 1; }
  .large-order-2 {
    order: 2; }
  .large-order-3 {
    order: 3; }
  .large-order-4 {
    order: 4; }
  .large-order-5 {
    order: 5; }
  .large-order-6 {
    order: 6; }
  .large-up-1 {
    flex-wrap: wrap; }
    .large-up-1 > .column, .large-up-1 > .columns {
      flex: 0 0 100%;
      max-width: 100%; }
  .large-up-2 {
    flex-wrap: wrap; }
    .large-up-2 > .column, .large-up-2 > .columns {
      flex: 0 0 50%;
      max-width: 50%; }
  .large-up-3 {
    flex-wrap: wrap; }
    .large-up-3 > .column, .large-up-3 > .columns {
      flex: 0 0 33.33333%;
      max-width: 33.33333%; }
  .large-up-4 {
    flex-wrap: wrap; }
    .large-up-4 > .column, .large-up-4 > .columns {
      flex: 0 0 25%;
      max-width: 25%; }
  .large-up-5 {
    flex-wrap: wrap; }
    .large-up-5 > .column, .large-up-5 > .columns {
      flex: 0 0 20%;
      max-width: 20%; }
  .large-up-6 {
    flex-wrap: wrap; }
    .large-up-6 > .column, .large-up-6 > .columns {
      flex: 0 0 16.66667%;
      max-width: 16.66667%; }
  .large-up-7 {
    flex-wrap: wrap; }
    .large-up-7 > .column, .large-up-7 > .columns {
      flex: 0 0 14.28571%;
      max-width: 14.28571%; }
  .large-up-8 {
    flex-wrap: wrap; }
    .large-up-8 > .column, .large-up-8 > .columns {
      flex: 0 0 12.5%;
      max-width: 12.5%; } }

@media screen and (min-width: 64em) and (min-width: 64em) {
  .large-expand {
    flex: 1 1 0px; } }

.row.large-unstack > .column, .row.large-unstack > .columns {
  flex: 0 0 100%; }
  @media screen and (min-width: 64em) {
    .row.large-unstack > .column, .row.large-unstack > .columns {
      flex: 1 1 0px; } }

@media screen and (min-width: 64em) {
  .large-collapse > .column, .large-collapse > .columns {
    padding-left: 0;
    padding-right: 0; }
  .large-uncollapse > .column, .large-uncollapse > .columns {
    padding-left: 0.9375rem;
    padding-right: 0.9375rem; } }

@media screen and (min-width: 75em) {
  .xlarge-1 {
    flex: 0 0 8.33333%;
    max-width: 8.33333%; }
  .xlarge-offset-0 {
    margin-left: 0%; }
  .xlarge-2 {
    flex: 0 0 16.66667%;
    max-width: 16.66667%; }
  .xlarge-offset-1 {
    margin-left: 8.33333%; }
  .xlarge-3 {
    flex: 0 0 25%;
    max-width: 25%; }
  .xlarge-offset-2 {
    margin-left: 16.66667%; }
  .xlarge-4 {
    flex: 0 0 33.33333%;
    max-width: 33.33333%; }
  .xlarge-offset-3 {
    margin-left: 25%; }
  .xlarge-5 {
    flex: 0 0 41.66667%;
    max-width: 41.66667%; }
  .xlarge-offset-4 {
    margin-left: 33.33333%; }
  .xlarge-6 {
    flex: 0 0 50%;
    max-width: 50%; }
  .xlarge-offset-5 {
    margin-left: 41.66667%; }
  .xlarge-7 {
    flex: 0 0 58.33333%;
    max-width: 58.33333%; }
  .xlarge-offset-6 {
    margin-left: 50%; }
  .xlarge-8 {
    flex: 0 0 66.66667%;
    max-width: 66.66667%; }
  .xlarge-offset-7 {
    margin-left: 58.33333%; }
  .xlarge-9 {
    flex: 0 0 75%;
    max-width: 75%; }
  .xlarge-offset-8 {
    margin-left: 66.66667%; }
  .xlarge-10 {
    flex: 0 0 83.33333%;
    max-width: 83.33333%; }
  .xlarge-offset-9 {
    margin-left: 75%; }
  .xlarge-11 {
    flex: 0 0 91.66667%;
    max-width: 91.66667%; }
  .xlarge-offset-10 {
    margin-left: 83.33333%; }
  .xlarge-12 {
    flex: 0 0 100%;
    max-width: 100%; }
  .xlarge-offset-11 {
    margin-left: 91.66667%; }
  .xlarge-order-1 {
    order: 1; }
  .xlarge-order-2 {
    order: 2; }
  .xlarge-order-3 {
    order: 3; }
  .xlarge-order-4 {
    order: 4; }
  .xlarge-order-5 {
    order: 5; }
  .xlarge-order-6 {
    order: 6; }
  .xlarge-up-1 {
    flex-wrap: wrap; }
    .xlarge-up-1 > .column, .xlarge-up-1 > .columns {
      flex: 0 0 100%;
      max-width: 100%; }
  .xlarge-up-2 {
    flex-wrap: wrap; }
    .xlarge-up-2 > .column, .xlarge-up-2 > .columns {
      flex: 0 0 50%;
      max-width: 50%; }
  .xlarge-up-3 {
    flex-wrap: wrap; }
    .xlarge-up-3 > .column, .xlarge-up-3 > .columns {
      flex: 0 0 33.33333%;
      max-width: 33.33333%; }
  .xlarge-up-4 {
    flex-wrap: wrap; }
    .xlarge-up-4 > .column, .xlarge-up-4 > .columns {
      flex: 0 0 25%;
      max-width: 25%; }
  .xlarge-up-5 {
    flex-wrap: wrap; }
    .xlarge-up-5 > .column, .xlarge-up-5 > .columns {
      flex: 0 0 20%;
      max-width: 20%; }
  .xlarge-up-6 {
    flex-wrap: wrap; }
    .xlarge-up-6 > .column, .xlarge-up-6 > .columns {
      flex: 0 0 16.66667%;
      max-width: 16.66667%; }
  .xlarge-up-7 {
    flex-wrap: wrap; }
    .xlarge-up-7 > .column, .xlarge-up-7 > .columns {
      flex: 0 0 14.28571%;
      max-width: 14.28571%; }
  .xlarge-up-8 {
    flex-wrap: wrap; }
    .xlarge-up-8 > .column, .xlarge-up-8 > .columns {
      flex: 0 0 12.5%;
      max-width: 12.5%; } }

@media screen and (min-width: 75em) and (min-width: 75em) {
  .xlarge-expand {
    flex: 1 1 0px; } }

.row.xlarge-unstack > .column, .row.xlarge-unstack > .columns {
  flex: 0 0 100%; }
  @media screen and (min-width: 75em) {
    .row.xlarge-unstack > .column, .row.xlarge-unstack > .columns {
      flex: 1 1 0px; } }

@media screen and (min-width: 75em) {
  .xlarge-collapse > .column, .xlarge-collapse > .columns {
    padding-left: 0;
    padding-right: 0; }
  .xlarge-uncollapse > .column, .xlarge-uncollapse > .columns {
    padding-left: 0.9375rem;
    padding-right: 0.9375rem; } }

@media screen and (min-width: 90em) {
  .xxlarge-1 {
    flex: 0 0 8.33333%;
    max-width: 8.33333%; }
  .xxlarge-offset-0 {
    margin-left: 0%; }
  .xxlarge-2 {
    flex: 0 0 16.66667%;
    max-width: 16.66667%; }
  .xxlarge-offset-1 {
    margin-left: 8.33333%; }
  .xxlarge-3 {
    flex: 0 0 25%;
    max-width: 25%; }
  .xxlarge-offset-2 {
    margin-left: 16.66667%; }
  .xxlarge-4 {
    flex: 0 0 33.33333%;
    max-width: 33.33333%; }
  .xxlarge-offset-3 {
    margin-left: 25%; }
  .xxlarge-5 {
    flex: 0 0 41.66667%;
    max-width: 41.66667%; }
  .xxlarge-offset-4 {
    margin-left: 33.33333%; }
  .xxlarge-6 {
    flex: 0 0 50%;
    max-width: 50%; }
  .xxlarge-offset-5 {
    margin-left: 41.66667%; }
  .xxlarge-7 {
    flex: 0 0 58.33333%;
    max-width: 58.33333%; }
  .xxlarge-offset-6 {
    margin-left: 50%; }
  .xxlarge-8 {
    flex: 0 0 66.66667%;
    max-width: 66.66667%; }
  .xxlarge-offset-7 {
    margin-left: 58.33333%; }
  .xxlarge-9 {
    flex: 0 0 75%;
    max-width: 75%; }
  .xxlarge-offset-8 {
    margin-left: 66.66667%; }
  .xxlarge-10 {
    flex: 0 0 83.33333%;
    max-width: 83.33333%; }
  .xxlarge-offset-9 {
    margin-left: 75%; }
  .xxlarge-11 {
    flex: 0 0 91.66667%;
    max-width: 91.66667%; }
  .xxlarge-offset-10 {
    margin-left: 83.33333%; }
  .xxlarge-12 {
    flex: 0 0 100%;
    max-width: 100%; }
  .xxlarge-offset-11 {
    margin-left: 91.66667%; }
  .xxlarge-order-1 {
    order: 1; }
  .xxlarge-order-2 {
    order: 2; }
  .xxlarge-order-3 {
    order: 3; }
  .xxlarge-order-4 {
    order: 4; }
  .xxlarge-order-5 {
    order: 5; }
  .xxlarge-order-6 {
    order: 6; }
  .xxlarge-up-1 {
    flex-wrap: wrap; }
    .xxlarge-up-1 > .column, .xxlarge-up-1 > .columns {
      flex: 0 0 100%;
      max-width: 100%; }
  .xxlarge-up-2 {
    flex-wrap: wrap; }
    .xxlarge-up-2 > .column, .xxlarge-up-2 > .columns {
      flex: 0 0 50%;
      max-width: 50%; }
  .xxlarge-up-3 {
    flex-wrap: wrap; }
    .xxlarge-up-3 > .column, .xxlarge-up-3 > .columns {
      flex: 0 0 33.33333%;
      max-width: 33.33333%; }
  .xxlarge-up-4 {
    flex-wrap: wrap; }
    .xxlarge-up-4 > .column, .xxlarge-up-4 > .columns {
      flex: 0 0 25%;
      max-width: 25%; }
  .xxlarge-up-5 {
    flex-wrap: wrap; }
    .xxlarge-up-5 > .column, .xxlarge-up-5 > .columns {
      flex: 0 0 20%;
      max-width: 20%; }
  .xxlarge-up-6 {
    flex-wrap: wrap; }
    .xxlarge-up-6 > .column, .xxlarge-up-6 > .columns {
      flex: 0 0 16.66667%;
      max-width: 16.66667%; }
  .xxlarge-up-7 {
    flex-wrap: wrap; }
    .xxlarge-up-7 > .column, .xxlarge-up-7 > .columns {
      flex: 0 0 14.28571%;
      max-width: 14.28571%; }
  .xxlarge-up-8 {
    flex-wrap: wrap; }
    .xxlarge-up-8 > .column, .xxlarge-up-8 > .columns {
      flex: 0 0 12.5%;
      max-width: 12.5%; } }

@media screen and (min-width: 90em) and (min-width: 90em) {
  .xxlarge-expand {
    flex: 1 1 0px; } }

.row.xxlarge-unstack > .column, .row.xxlarge-unstack > .columns {
  flex: 0 0 100%; }
  @media screen and (min-width: 90em) {
    .row.xxlarge-unstack > .column, .row.xxlarge-unstack > .columns {
      flex: 1 1 0px; } }

@media screen and (min-width: 90em) {
  .xxlarge-collapse > .column, .xxlarge-collapse > .columns {
    padding-left: 0;
    padding-right: 0; }
  .xxlarge-uncollapse > .column, .xxlarge-uncollapse > .columns {
    padding-left: 0.9375rem;
    padding-right: 0.9375rem; } }

.shrink {
  flex: 0 0 auto;
  max-width: 100%; }

.column.align-top, .align-top.columns {
  align-self: flex-start; }

.column.align-bottom, .align-bottom.columns {
  align-self: flex-end; }

.column.align-middle, .align-middle.columns {
  align-self: center; }

.column.align-stretch, .align-stretch.columns {
  align-self: stretch; }

.top-bar {
  display: flex;
  align-items: center;
  justify-content: space-between;
  flex-wrap: nowrap;
  padding: 0.5rem;
  flex-wrap: wrap; }
  .top-bar,
  .top-bar ul {
    background-color: #e6e6e6; }
  .top-bar input {
    max-width: 200px;
    margin-right: 1rem; }
  .top-bar .input-group-field {
    width: 100%;
    margin-right: 0; }
  .top-bar input.button {
    width: auto; }
  .top-bar .top-bar-left,
  .top-bar .top-bar-right {
    flex: 0 0 100%;
    max-width: 100%; }
  @media screen and (min-width: 40em) {
    .top-bar {
      flex-wrap: nowrap; }
      .top-bar .top-bar-left,
      .top-bar .top-bar-right {
        flex: 1 1 0px; } }
  @media screen and (max-width: 63.9375em) {
    .top-bar.stacked-for-medium {
      flex-wrap: wrap; }
      .top-bar.stacked-for-medium .top-bar-left,
      .top-bar.stacked-for-medium .top-bar-right {
        flex: 0 0 100%;
        max-width: 100%; } }
  @media screen and (max-width: 74.9375em) {
    .top-bar.stacked-for-large {
      flex-wrap: wrap; }
      .top-bar.stacked-for-large .top-bar-left,
      .top-bar.stacked-for-large .top-bar-right {
        flex: 0 0 100%;
        max-width: 100%; } }
  @media screen and (max-width: 89.9375em) {
    .top-bar.stacked-for-xlarge {
      flex-wrap: wrap; }
      .top-bar.stacked-for-xlarge .top-bar-left,
      .top-bar.stacked-for-xlarge .top-bar-right {
        flex: 0 0 100%;
        max-width: 100%; } }
  .top-bar.stacked-for-xxlarge {
    flex-wrap: wrap; }
    .top-bar.stacked-for-xxlarge .top-bar-left,
    .top-bar.stacked-for-xxlarge .top-bar-right {
      flex: 0 0 100%;
      max-width: 100%; }

.top-bar-title {
  flex: 0 0 auto;
  margin-right: 1rem; }

.top-bar-left,
.top-bar-right {
  flex: 0 0 auto; }

.menu {
  margin: 0;
  list-style-type: none;
  width: 100%;
  display: flex;
  flex-wrap: nowrap;
  align-items: center;
  flex-wrap: nowrap; }
  .menu > li {
    flex: 0 0 auto; }
    [data-whatinput='mouse'] .menu > li {
      outline: 0; }
  .menu > li > a {
    display: block;
    padding: 0.7rem 1rem;
    line-height: 1; }
  .menu input,
  .menu a,
  .menu button {
    margin-bottom: 0; }
  .menu > li > a {
    display: flex; }
  .menu > li > a {
    flex-flow: row nowrap; }
    .menu > li > a img,
    .menu > li > a i {
      margin-right: 0.25rem; }
  .menu > li {
    flex: 0 0 auto; }
  .menu.vertical {
    flex-wrap: wrap; }
    .menu.vertical > li {
      flex: 0 0 100%;
      max-width: 100%; }
    .menu.vertical > li > a {
      align-items: flex-start;
      justify-content: flex-start; }
  @media screen and (min-width: 40em) {
    .menu.medium-horizontal {
      flex-wrap: nowrap; }
      .menu.medium-horizontal > li {
        flex: 0 0 auto; }
    .menu.medium-vertical {
      flex-wrap: wrap; }
      .menu.medium-vertical > li {
        flex: 0 0 100%;
        max-width: 100%; }
      .menu.medium-vertical > li > a {
        align-items: flex-start;
        justify-content: flex-start; } }
  @media screen and (min-width: 64em) {
    .menu.large-horizontal {
      flex-wrap: nowrap; }
      .menu.large-horizontal > li {
        flex: 0 0 auto; }
    .menu.large-vertical {
      flex-wrap: wrap; }
      .menu.large-vertical > li {
        flex: 0 0 100%;
        max-width: 100%; }
      .menu.large-vertical > li > a {
        align-items: flex-start;
        justify-content: flex-start; } }
  @media screen and (min-width: 75em) {
    .menu.xlarge-horizontal {
      flex-wrap: nowrap; }
      .menu.xlarge-horizontal > li {
        flex: 0 0 auto; }
    .menu.xlarge-vertical {
      flex-wrap: wrap; }
      .menu.xlarge-vertical > li {
        flex: 0 0 100%;
        max-width: 100%; }
      .menu.xlarge-vertical > li > a {
        align-items: flex-start;
        justify-content: flex-start; } }
  @media screen and (min-width: 90em) {
    .menu.xxlarge-horizontal {
      flex-wrap: nowrap; }
      .menu.xxlarge-horizontal > li {
        flex: 0 0 auto; }
    .menu.xxlarge-vertical {
      flex-wrap: wrap; }
      .menu.xxlarge-vertical > li {
        flex: 0 0 100%;
        max-width: 100%; }
      .menu.xxlarge-vertical > li > a {
        align-items: flex-start;
        justify-content: flex-start; } }
  .menu.simple li {
    line-height: 1;
    display: inline-block;
    margin-right: 1rem; }
  .menu.simple a {
    padding: 0; }
  .menu.align-right {
    justify-content: flex-end; }
  .menu.expanded > li {
    flex: 1 1 0px; }
  .menu.expanded > li:first-child:last-child {
    width: 100%; }
  .menu.icon-top > li > a {
    flex-flow: column nowrap; }
    .menu.icon-top > li > a img,
    .menu.icon-top > li > a i {
      align-self: stretch;
      text-align: center;
      margin-bottom: 0.25rem; }
  .menu.nested {
    margin-left: 1rem; }
  .menu .active > a {
    color: #fefefe;
    background: #ef5350; }

.menu-text {
  font-weight: bold;
  color: inherit;
  line-height: 1;
  padding-top: 0;
  padding-bottom: 0;
  padding: 0.7rem 1rem; }

.menu-centered {
  text-align: center; }
  .menu-centered > .menu {
    display: inline-block; }

.no-js [data-responsive-menu] ul {
  display: none; }

.menu-icon {
  position: relative;
  display: inline-block;
  vertical-align: middle;
  cursor: pointer;
  width: 20px;
  height: 16px; }
  .menu-icon::after {
    content: '';
    position: absolute;
    display: block;
    width: 100%;
    height: 2px;
    background: #fefefe;
    top: 0;
    left: 0;
    box-shadow: 0 7px 0 #fefefe, 0 14px 0 #fefefe; }
  .menu-icon:hover::after {
    background: #cacaca;
    box-shadow: 0 7px 0 #cacaca, 0 14px 0 #cacaca; }

.menu-icon.dark {
  position: relative;
  display: inline-block;
  vertical-align: middle;
  cursor: pointer;
  width: 20px;
  height: 16px; }
  .menu-icon.dark::after {
    content: '';
    position: absolute;
    display: block;
    width: 100%;
    height: 2px;
    background: #0a0a0a;
    top: 0;
    left: 0;
    box-shadow: 0 7px 0 #0a0a0a, 0 14px 0 #0a0a0a; }
  .menu-icon.dark:hover::after {
    background: #8a8a8a;
    box-shadow: 0 7px 0 #8a8a8a, 0 14px 0 #8a8a8a; }

.close-button {
  position: absolute;
  color: #8a8a8a;
  right: 1rem;
  top: 0.5rem;
  font-size: 2em;
  line-height: 1;
  cursor: pointer; }
  [data-whatinput='mouse'] .close-button {
    outline: 0; }
  .close-button:hover, .close-button:focus {
    color: #0a0a0a; }

.flex-video {
  position: relative;
  height: 0;
  padding-bottom: 75%;
  margin-bottom: 1rem;
  overflow: hidden; }
  .flex-video iframe,
  .flex-video object,
  .flex-video embed,
  .flex-video video {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%; }
  .flex-video.widescreen {
    padding-bottom: 56.25%; }
  .flex-video.vimeo {
    padding-top: 0; }

div,
dl,
dt,
dd,
ul,
ol,
li,
h1,
h2,
h3,
h4,
h5,
h6,
pre,
form,
p,
blockquote,
th,
td {
  margin: 0;
  padding: 0; }

p {
  font-size: inherit;
  line-height: 1.6;
  margin-bottom: 1rem;
  text-rendering: optimizeLegibility; }

em,
i {
  font-style: italic;
  line-height: inherit; }

strong,
b {
  font-weight: bold;
  line-height: inherit; }

small {
  font-size: 80%;
  line-height: inherit; }

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: "monarcha", Helvetica, Roboto, Arial, sans-serif;
  font-weight: 300;
  font-style: normal;
  color: inherit;
  text-rendering: optimizeLegibility;
  margin-top: 0;
  margin-bottom: 0.5rem;
  line-height: 1.4; }
  h1 small,
  h2 small,
  h3 small,
  h4 small,
  h5 small,
  h6 small {
    color: #cacaca;
    line-height: 0; }

h1 {
  font-size: 1.5rem; }

h2 {
  font-size: 1.25rem; }

h3 {
  font-size: 1.1875rem; }

h4 {
  font-size: 1.125rem; }

h5 {
  font-size: 1.0625rem; }

h6 {
  font-size: 1rem; }

@media screen and (min-width: 40em) {
  h1 {
    font-size: 3rem; }
  h2 {
    font-size: 2.5rem; }
  h3 {
    font-size: 1.9375rem; }
  h4 {
    font-size: 1.5625rem; }
  h5 {
    font-size: 1.25rem; }
  h6 {
    font-size: 1rem; } }

a {
  color: #ef5350;
  text-decoration: none;
  line-height: inherit;
  cursor: pointer; }
  a:hover, a:focus {
    color: #eb2b27; }
  a img {
    border: 0; }

hr {
  max-width: 64rem;
  height: 0;
  border-right: 0;
  border-top: 0;
  border-bottom: 1px solid #cacaca;
  border-left: 0;
  margin: 1.25rem auto;
  clear: both; }

ul,
ol,
dl {
  line-height: 1.6;
  margin-bottom: 1rem;
  list-style-position: outside; }

li {
  font-size: inherit; }

ul {
  list-style-type: disc;
  margin-left: 1.25rem; }

ol {
  margin-left: 1.25rem; }

ul ul, ol ul, ul ol, ol ol {
  margin-left: 1.25rem;
  margin-bottom: 0; }

dl {
  margin-bottom: 1rem; }
  dl dt {
    margin-bottom: 0.3rem;
    font-weight: bold; }

blockquote {
  margin: 0 0 1rem;
  padding: 0.5625rem 1.25rem 0 1.1875rem;
  border-left: 1px solid #cacaca; }
  blockquote, blockquote p {
    line-height: 1.6;
    color: #8a8a8a; }

cite {
  display: block;
  font-size: 0.8125rem;
  color: #0a0a0a; }
  cite:before {
    content: '\2014 \0020'; }

abbr {
  color: #333;
  cursor: help;
  border-bottom: 1px dotted #0a0a0a; }

code {
  font-family: Consolas, "Liberation Mono", Courier, monospace;
  font-weight: normal;
  color: #0a0a0a;
  background-color: #e6e6e6;
  border: 1px solid #cacaca;
  padding: 0.125rem 0.3125rem 0.0625rem; }

kbd {
  padding: 0.125rem 0.25rem 0;
  margin: 0;
  background-color: #e6e6e6;
  color: #0a0a0a;
  font-family: Consolas, "Liberation Mono", Courier, monospace; }

.subheader {
  margin-top: 0.2rem;
  margin-bottom: 0.5rem;
  font-weight: normal;
  line-height: 1.4;
  color: #8a8a8a; }

.lead {
  font-size: 125%;
  line-height: 1.6; }

.stat {
  font-size: 2.5rem;
  line-height: 1; }
  p + .stat {
    margin-top: -1rem; }

.no-bullet {
  margin-left: 0;
  list-style: none; }

.text-left {
  text-align: left; }

.text-right {
  text-align: right; }

.text-center {
  text-align: center; }

.text-justify {
  text-align: justify; }

@media screen and (min-width: 40em) {
  .medium-text-left {
    text-align: left; }
  .medium-text-right {
    text-align: right; }
  .medium-text-center {
    text-align: center; }
  .medium-text-justify {
    text-align: justify; } }

@media screen and (min-width: 64em) {
  .large-text-left {
    text-align: left; }
  .large-text-right {
    text-align: right; }
  .large-text-center {
    text-align: center; }
  .large-text-justify {
    text-align: justify; } }

@media screen and (min-width: 75em) {
  .xlarge-text-left {
    text-align: left; }
  .xlarge-text-right {
    text-align: right; }
  .xlarge-text-center {
    text-align: center; }
  .xlarge-text-justify {
    text-align: justify; } }

@media screen and (min-width: 90em) {
  .xxlarge-text-left {
    text-align: left; }
  .xxlarge-text-right {
    text-align: right; }
  .xxlarge-text-center {
    text-align: center; }
  .xxlarge-text-justify {
    text-align: justify; } }

.show-for-print {
  display: none !important; }

@media print {
  * {
    background: transparent !important;
    color: black !important;
    box-shadow: none !important;
    text-shadow: none !important; }
  .show-for-print {
    display: block !important; }
  .hide-for-print {
    display: none !important; }
  table.show-for-print {
    display: table !important; }
  thead.show-for-print {
    display: table-header-group !important; }
  tbody.show-for-print {
    display: table-row-group !important; }
  tr.show-for-print {
    display: table-row !important; }
  td.show-for-print {
    display: table-cell !important; }
  th.show-for-print {
    display: table-cell !important; }
  a,
  a:visited {
    text-decoration: underline; }
  a[href]:after {
    content: " (" attr(href) ")"; }
  .ir a:after,
  a[href^='javascript:']:after,
  a[href^='#']:after {
    content: ''; }
  abbr[title]:after {
    content: " (" attr(title) ")"; }
  pre,
  blockquote {
    border: 1px solid #8a8a8a;
    page-break-inside: avoid; }
  thead {
    display: table-header-group; }
  tr,
  img {
    page-break-inside: avoid; }
  img {
    max-width: 100% !important; }
  @page {
    margin: 0.5cm; }
  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3; }
  h2,
  h3 {
    page-break-after: avoid; } }

.slide-in-down.mui-enter {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: translateY(-100%);
  transition-property: transform, opacity;
  backface-visibility: hidden; }

.slide-in-down.mui-enter.mui-enter-active {
  transform: translateY(0); }

.slide-in-left.mui-enter {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: translateX(-100%);
  transition-property: transform, opacity;
  backface-visibility: hidden; }

.slide-in-left.mui-enter.mui-enter-active {
  transform: translateX(0); }

.slide-in-up.mui-enter {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: translateY(100%);
  transition-property: transform, opacity;
  backface-visibility: hidden; }

.slide-in-up.mui-enter.mui-enter-active {
  transform: translateY(0); }

.slide-in-right.mui-enter {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: translateX(100%);
  transition-property: transform, opacity;
  backface-visibility: hidden; }

.slide-in-right.mui-enter.mui-enter-active {
  transform: translateX(0); }

.slide-out-down.mui-leave {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: translateY(0);
  transition-property: transform, opacity;
  backface-visibility: hidden; }

.slide-out-down.mui-leave.mui-leave-active {
  transform: translateY(100%); }

.slide-out-right.mui-leave {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: translateX(0);
  transition-property: transform, opacity;
  backface-visibility: hidden; }

.slide-out-right.mui-leave.mui-leave-active {
  transform: translateX(100%); }

.slide-out-up.mui-leave {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: translateY(0);
  transition-property: transform, opacity;
  backface-visibility: hidden; }

.slide-out-up.mui-leave.mui-leave-active {
  transform: translateY(-100%); }

.slide-out-left.mui-leave {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: translateX(0);
  transition-property: transform, opacity;
  backface-visibility: hidden; }

.slide-out-left.mui-leave.mui-leave-active {
  transform: translateX(-100%); }

.fade-in.mui-enter {
  transition-duration: 500ms;
  transition-timing-function: linear;
  opacity: 0;
  transition-property: opacity; }

.fade-in.mui-enter.mui-enter-active {
  opacity: 1; }

.fade-out.mui-leave {
  transition-duration: 500ms;
  transition-timing-function: linear;
  opacity: 1;
  transition-property: opacity; }

.fade-out.mui-leave.mui-leave-active {
  opacity: 0; }

.hinge-in-from-top.mui-enter {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: perspective(2000px) rotateX(-90deg);
  transform-origin: top;
  transition-property: transform, opacity;
  opacity: 0; }

.hinge-in-from-top.mui-enter.mui-enter-active {
  transform: perspective(2000px) rotate(0deg);
  opacity: 1; }

.hinge-in-from-right.mui-enter {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: perspective(2000px) rotateY(-90deg);
  transform-origin: right;
  transition-property: transform, opacity;
  opacity: 0; }

.hinge-in-from-right.mui-enter.mui-enter-active {
  transform: perspective(2000px) rotate(0deg);
  opacity: 1; }

.hinge-in-from-bottom.mui-enter {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: perspective(2000px) rotateX(90deg);
  transform-origin: bottom;
  transition-property: transform, opacity;
  opacity: 0; }

.hinge-in-from-bottom.mui-enter.mui-enter-active {
  transform: perspective(2000px) rotate(0deg);
  opacity: 1; }

.hinge-in-from-left.mui-enter {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: perspective(2000px) rotateY(90deg);
  transform-origin: left;
  transition-property: transform, opacity;
  opacity: 0; }

.hinge-in-from-left.mui-enter.mui-enter-active {
  transform: perspective(2000px) rotate(0deg);
  opacity: 1; }

.hinge-in-from-middle-x.mui-enter {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: perspective(2000px) rotateX(-90deg);
  transform-origin: center;
  transition-property: transform, opacity;
  opacity: 0; }

.hinge-in-from-middle-x.mui-enter.mui-enter-active {
  transform: perspective(2000px) rotate(0deg);
  opacity: 1; }

.hinge-in-from-middle-y.mui-enter {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: perspective(2000px) rotateY(-90deg);
  transform-origin: center;
  transition-property: transform, opacity;
  opacity: 0; }

.hinge-in-from-middle-y.mui-enter.mui-enter-active {
  transform: perspective(2000px) rotate(0deg);
  opacity: 1; }

.hinge-out-from-top.mui-leave {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: perspective(2000px) rotate(0deg);
  transform-origin: top;
  transition-property: transform, opacity;
  opacity: 1; }

.hinge-out-from-top.mui-leave.mui-leave-active {
  transform: perspective(2000px) rotateX(-90deg);
  opacity: 0; }

.hinge-out-from-right.mui-leave {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: perspective(2000px) rotate(0deg);
  transform-origin: right;
  transition-property: transform, opacity;
  opacity: 1; }

.hinge-out-from-right.mui-leave.mui-leave-active {
  transform: perspective(2000px) rotateY(-90deg);
  opacity: 0; }

.hinge-out-from-bottom.mui-leave {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: perspective(2000px) rotate(0deg);
  transform-origin: bottom;
  transition-property: transform, opacity;
  opacity: 1; }

.hinge-out-from-bottom.mui-leave.mui-leave-active {
  transform: perspective(2000px) rotateX(90deg);
  opacity: 0; }

.hinge-out-from-left.mui-leave {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: perspective(2000px) rotate(0deg);
  transform-origin: left;
  transition-property: transform, opacity;
  opacity: 1; }

.hinge-out-from-left.mui-leave.mui-leave-active {
  transform: perspective(2000px) rotateY(90deg);
  opacity: 0; }

.hinge-out-from-middle-x.mui-leave {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: perspective(2000px) rotate(0deg);
  transform-origin: center;
  transition-property: transform, opacity;
  opacity: 1; }

.hinge-out-from-middle-x.mui-leave.mui-leave-active {
  transform: perspective(2000px) rotateX(-90deg);
  opacity: 0; }

.hinge-out-from-middle-y.mui-leave {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: perspective(2000px) rotate(0deg);
  transform-origin: center;
  transition-property: transform, opacity;
  opacity: 1; }

.hinge-out-from-middle-y.mui-leave.mui-leave-active {
  transform: perspective(2000px) rotateY(-90deg);
  opacity: 0; }

.scale-in-up.mui-enter {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: scale(0.5);
  transition-property: transform, opacity;
  opacity: 0; }

.scale-in-up.mui-enter.mui-enter-active {
  transform: scale(1);
  opacity: 1; }

.scale-in-down.mui-enter {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: scale(1.5);
  transition-property: transform, opacity;
  opacity: 0; }

.scale-in-down.mui-enter.mui-enter-active {
  transform: scale(1);
  opacity: 1; }

.scale-out-up.mui-leave {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: scale(1);
  transition-property: transform, opacity;
  opacity: 1; }

.scale-out-up.mui-leave.mui-leave-active {
  transform: scale(1.5);
  opacity: 0; }

.scale-out-down.mui-leave {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: scale(1);
  transition-property: transform, opacity;
  opacity: 1; }

.scale-out-down.mui-leave.mui-leave-active {
  transform: scale(0.5);
  opacity: 0; }

.spin-in.mui-enter {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: rotate(-0.75turn);
  transition-property: transform, opacity;
  opacity: 0; }

.spin-in.mui-enter.mui-enter-active {
  transform: rotate(0);
  opacity: 1; }

.spin-out.mui-leave {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: rotate(0);
  transition-property: transform, opacity;
  opacity: 1; }

.spin-out.mui-leave.mui-leave-active {
  transform: rotate(0.75turn);
  opacity: 0; }

.spin-in-ccw.mui-enter {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: rotate(0.75turn);
  transition-property: transform, opacity;
  opacity: 0; }

.spin-in-ccw.mui-enter.mui-enter-active {
  transform: rotate(0);
  opacity: 1; }

.spin-out-ccw.mui-leave {
  transition-duration: 500ms;
  transition-timing-function: linear;
  transform: rotate(0);
  transition-property: transform, opacity;
  opacity: 1; }

.spin-out-ccw.mui-leave.mui-leave-active {
  transform: rotate(-0.75turn);
  opacity: 0; }

.slow {
  transition-duration: 750ms !important; }

.fast {
  transition-duration: 250ms !important; }

.linear {
  transition-timing-function: linear !important; }

.ease {
  transition-timing-function: ease !important; }

.ease-in {
  transition-timing-function: ease-in !important; }

.ease-out {
  transition-timing-function: ease-out !important; }

.ease-in-out {
  transition-timing-function: ease-in-out !important; }

.bounce-in {
  transition-timing-function: cubic-bezier(0.485, 0.155, 0.24, 1.245) !important; }

.bounce-out {
  transition-timing-function: cubic-bezier(0.485, 0.155, 0.515, 0.845) !important; }

.bounce-in-out {
  transition-timing-function: cubic-bezier(0.76, -0.245, 0.24, 1.245) !important; }

.short-delay {
  transition-delay: 300ms !important; }

.long-delay {
  transition-delay: 700ms !important; }

.shake {
  animation-name: shake-7; }

@keyframes shake-7 {
  0%, 10%, 20%, 30%, 40%, 50%, 60%, 70%, 80%, 90% {
    transform: translateX(7%); }
  5%, 15%, 25%, 35%, 45%, 55%, 65%, 75%, 85%, 95% {
    transform: translateX(-7%); } }

.spin-cw {
  animation-name: spin-cw-1turn; }

@keyframes spin-cw-1turn {
  0% {
    transform: rotate(-1turn); }
  100% {
    transform: rotate(0); } }

.spin-ccw {
  animation-name: spin-cw-1turn; }

@keyframes spin-cw-1turn {
  0% {
    transform: rotate(0); }
  100% {
    transform: rotate(1turn); } }

.wiggle {
  animation-name: wiggle-7deg; }

@keyframes wiggle-7deg {
  40%, 50%, 60% {
    transform: rotate(7deg); }
  35%, 45%, 55%, 65% {
    transform: rotate(-7deg); }
  0%, 30%, 70%, 100% {
    transform: rotate(0); } }

.shake,
.spin-cw,
.spin-ccw,
.wiggle {
  animation-duration: 500ms; }

.infinite {
  animation-iteration-count: infinite; }

.slow {
  animation-duration: 750ms !important; }

.fast {
  animation-duration: 250ms !important; }

.linear {
  animation-timing-function: linear !important; }

.ease {
  animation-timing-function: ease !important; }

.ease-in {
  animation-timing-function: ease-in !important; }

.ease-out {
  animation-timing-function: ease-out !important; }

.ease-in-out {
  animation-timing-function: ease-in-out !important; }

.bounce-in {
  animation-timing-function: cubic-bezier(0.485, 0.155, 0.24, 1.245) !important; }

.bounce-out {
  animation-timing-function: cubic-bezier(0.485, 0.155, 0.515, 0.845) !important; }

.bounce-in-out {
  animation-timing-function: cubic-bezier(0.76, -0.245, 0.24, 1.245) !important; }

.short-delay {
  animation-delay: 300ms !important; }

.long-delay {
  animation-delay: 700ms !important; }

a {
  -webkit-transition: color 250ms ease-in-out;
  -moz-transition: color 250ms ease-in-out;
  -o-transition: color 250ms ease-in-out;
  transition: color 250ms ease-in-out; }

.top-bar {
  background-color: #fefefe;
  border-bottom: 1px solid #e1e1e1;
  width: 100%;
  position: fixed;
  z-index: 2; }
  .top-bar .primary-nav {
    background-color: #fefefe;
    justify-content: center; }
    .top-bar .primary-nav li a {
      padding: 0 1rem; }
      .top-bar .primary-nav li a.logo {
        background-color: #ef5350;
        color: #fefefe;
        padding: .7rem 0;
        border-radius: 40px;
        height: 40px;
        text-align: center;
        width: 40px;
        display: inline-block;
        cursor: pointer;
        -webkit-transition: background-color 250ms ease-in-out;
        -moz-transition: background-color 250ms ease-in-out;
        -o-transition: background-color 250ms ease-in-out;
        transition: background-color 250ms ease-in-out; }
        .top-bar .primary-nav li a.logo:hover {
          background-color: #ea1a16; }

.headroom {
  will-change: transform;
  transition: transform 200ms linear; }

.headroom--pinned {
  transform: translateY(0%); }

.headroom--unpinned {
  transform: translateY(-100%); }

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5b3V0LmNzcyIsInNvdXJjZXMiOlsibGF5b3V0LnNjc3MiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZm91bmRhdGlvbi1zaXRlcy9zY3NzL3V0aWwvX3V0aWwuc2NzcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9mb3VuZGF0aW9uLXNpdGVzL3Njc3MvdXRpbC9fdW5pdC5zY3NzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2ZvdW5kYXRpb24tc2l0ZXMvc2Nzcy91dGlsL192YWx1ZS5zY3NzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2ZvdW5kYXRpb24tc2l0ZXMvc2Nzcy91dGlsL19jb2xvci5zY3NzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2ZvdW5kYXRpb24tc2l0ZXMvc2Nzcy91dGlsL19zZWxlY3Rvci5zY3NzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2ZvdW5kYXRpb24tc2l0ZXMvc2Nzcy91dGlsL19mbGV4LnNjc3MiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZm91bmRhdGlvbi1zaXRlcy9zY3NzL3V0aWwvX2JyZWFrcG9pbnQuc2NzcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9mb3VuZGF0aW9uLXNpdGVzL3Njc3MvdXRpbC9fbWl4aW5zLnNjc3MiLCJfZ2xvYmFsLnNjc3MiLCJfc2V0dGluZ3Muc2NzcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9mb3VuZGF0aW9uLXNpdGVzL3Njc3MvZ3JpZC9fZ3JpZC5zY3NzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2ZvdW5kYXRpb24tc2l0ZXMvc2Nzcy9ncmlkL19yb3cuc2NzcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9mb3VuZGF0aW9uLXNpdGVzL3Njc3MvZ3JpZC9fY29sdW1uLnNjc3MiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZm91bmRhdGlvbi1zaXRlcy9zY3NzL2dyaWQvX3NpemUuc2NzcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9mb3VuZGF0aW9uLXNpdGVzL3Njc3MvZ3JpZC9fcG9zaXRpb24uc2NzcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9mb3VuZGF0aW9uLXNpdGVzL3Njc3MvZ3JpZC9fZ3V0dGVyLnNjc3MiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZm91bmRhdGlvbi1zaXRlcy9zY3NzL2dyaWQvX2NsYXNzZXMuc2NzcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9mb3VuZGF0aW9uLXNpdGVzL3Njc3MvZ3JpZC9fbGF5b3V0LnNjc3MiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZm91bmRhdGlvbi1zaXRlcy9zY3NzL2dyaWQvX2ZsZXgtZ3JpZC5zY3NzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2ZvdW5kYXRpb24tc2l0ZXMvc2Nzcy9jb21wb25lbnRzL19mbGV4LnNjc3MiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZm91bmRhdGlvbi1zaXRlcy9zY3NzL2NvbXBvbmVudHMvX3RvcC1iYXIuc2NzcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9mb3VuZGF0aW9uLXNpdGVzL3Njc3MvY29tcG9uZW50cy9fbWVudS5zY3NzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2ZvdW5kYXRpb24tc2l0ZXMvc2Nzcy9jb21wb25lbnRzL19tZW51LWljb24uc2NzcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9mb3VuZGF0aW9uLXNpdGVzL3Njc3MvY29tcG9uZW50cy9fY2xvc2UtYnV0dG9uLnNjc3MiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZm91bmRhdGlvbi1zaXRlcy9zY3NzL2NvbXBvbmVudHMvX2ZsZXgtdmlkZW8uc2NzcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9mb3VuZGF0aW9uLXNpdGVzL3Njc3MvdHlwb2dyYXBoeS9fdHlwb2dyYXBoeS5zY3NzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2ZvdW5kYXRpb24tc2l0ZXMvc2Nzcy90eXBvZ3JhcGh5L19iYXNlLnNjc3MiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZm91bmRhdGlvbi1zaXRlcy9zY3NzL3R5cG9ncmFwaHkvX2hlbHBlcnMuc2NzcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9mb3VuZGF0aW9uLXNpdGVzL3Njc3MvdHlwb2dyYXBoeS9fYWxpZ25tZW50LnNjc3MiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvZm91bmRhdGlvbi1zaXRlcy9zY3NzL3R5cG9ncmFwaHkvX3ByaW50LnNjc3MiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvbW90aW9uLXVpL21vdGlvbi11aS5zY3NzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL21vdGlvbi11aS9zcmMvbW90aW9uLXVpLnNjc3MiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvbW90aW9uLXVpL3NyYy9fc2V0dGluZ3Muc2NzcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9tb3Rpb24tdWkvc3JjL3V0aWwvX2FuaW1hdGlvbi5zY3NzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL21vdGlvbi11aS9zcmMvdXRpbC9fYXJncy5zY3NzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL21vdGlvbi11aS9zcmMvdXRpbC9fa2V5ZnJhbWUuc2NzcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9tb3Rpb24tdWkvc3JjL3V0aWwvX3NlbGVjdG9yLnNjc3MiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvbW90aW9uLXVpL3NyYy91dGlsL19zZXJpZXMuc2NzcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9tb3Rpb24tdWkvc3JjL3V0aWwvX3RyYW5zaXRpb24uc2NzcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9tb3Rpb24tdWkvc3JjL3V0aWwvX3VuaXQuc2NzcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9tb3Rpb24tdWkvc3JjL2VmZmVjdHMvX2ZhZGUuc2NzcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9tb3Rpb24tdWkvc3JjL2VmZmVjdHMvX2hpbmdlLnNjc3MiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvbW90aW9uLXVpL3NyYy9lZmZlY3RzL19zcGluLnNjc3MiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvbW90aW9uLXVpL3NyYy9lZmZlY3RzL196b29tLnNjc3MiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvbW90aW9uLXVpL3NyYy9lZmZlY3RzL19zaGFrZS5zY3NzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL21vdGlvbi11aS9zcmMvZWZmZWN0cy9fc2xpZGUuc2NzcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9tb3Rpb24tdWkvc3JjL2VmZmVjdHMvX3dpZ2dsZS5zY3NzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL21vdGlvbi11aS9zcmMvdHJhbnNpdGlvbnMvX2ZhZGUuc2NzcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9tb3Rpb24tdWkvc3JjL3RyYW5zaXRpb25zL19oaW5nZS5zY3NzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL21vdGlvbi11aS9zcmMvdHJhbnNpdGlvbnMvX3pvb20uc2NzcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9tb3Rpb24tdWkvc3JjL3RyYW5zaXRpb25zL19zbGlkZS5zY3NzIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL21vdGlvbi11aS9zcmMvdHJhbnNpdGlvbnMvX3NwaW4uc2NzcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9tb3Rpb24tdWkvc3JjL19jbGFzc2VzLnNjc3MiLCJvdmVycmlkZXMvX3R5cG9ncmFwaHlfb3ZlcnJpZGUuc2NzcyIsIm92ZXJyaWRlcy9fdG9wX2Jhcl9vdmVycmlkZS5zY3NzIiwibGlnaHRnYWxsZXJ5L19saWdodGdhbGxlcnkuc2NzcyIsImxpZ2h0Z2FsbGVyeS9fbGctdmFyaWFibGVzLnNjc3MiLCJsaWdodGdhbGxlcnkvX2xnLW1peGlucy5zY3NzIiwibGlnaHRnYWxsZXJ5L19sZy1mb250cy5zY3NzIiwibGlnaHRnYWxsZXJ5L19sZy10aGVtZS1kZWZhdWx0LnNjc3MiLCJsaWdodGdhbGxlcnkvX2xnLXRodW1ibmFpbC5zY3NzIiwibGlnaHRnYWxsZXJ5L19sZy12aWRlby5zY3NzIiwibGlnaHRnYWxsZXJ5L19sZy1hdXRvcGxheS5zY3NzIiwibGlnaHRnYWxsZXJ5L19sZy16b29tLnNjc3MiLCJsaWdodGdhbGxlcnkvX2xnLXBhZ2VyLnNjc3MiLCJsaWdodGdhbGxlcnkvX2xnLWZ1bGxzY3JlZW4uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTYXNzIHV0aWxpdGllc1xuQGltcG9ydCAnLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2ZvdW5kYXRpb24tc2l0ZXMvc2Nzcy91dGlsL3V0aWwnO1xuXG4vLyBHbG9iYWwgdmFyaWFibGVzIGFuZCBzdHlsZXNcbkBpbXBvcnQgJ2dsb2JhbCc7XG5cbi8vIFByb2plY3Qgc2V0dGluZ3NcbkBpbXBvcnQgJ3NldHRpbmdzJztcblxuLy8gSW1wb3J0IGRlZmF1bHQgY29tcG9uZW50c1xuQGltcG9ydCAnLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2ZvdW5kYXRpb24tc2l0ZXMvc2Nzcy9ncmlkL2dyaWQnO1xuQGltcG9ydCAnLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2ZvdW5kYXRpb24tc2l0ZXMvc2Nzcy9ncmlkL2ZsZXgtZ3JpZCc7XG5AaW1wb3J0ICcuLi8uLi8uLi9ub2RlX21vZHVsZXMvZm91bmRhdGlvbi1zaXRlcy9zY3NzL2NvbXBvbmVudHMvZmxleCc7XG5AaW1wb3J0ICcuLi8uLi8uLi9ub2RlX21vZHVsZXMvZm91bmRhdGlvbi1zaXRlcy9zY3NzL2NvbXBvbmVudHMvdG9wLWJhcic7XG5AaW1wb3J0ICcuLi8uLi8uLi9ub2RlX21vZHVsZXMvZm91bmRhdGlvbi1zaXRlcy9zY3NzL2NvbXBvbmVudHMvbWVudSc7XG5AaW1wb3J0ICcuLi8uLi8uLi9ub2RlX21vZHVsZXMvZm91bmRhdGlvbi1zaXRlcy9zY3NzL2NvbXBvbmVudHMvbWVudS1pY29uJztcbkBpbXBvcnQgJy4uLy4uLy4uL25vZGVfbW9kdWxlcy9mb3VuZGF0aW9uLXNpdGVzL3Njc3MvY29tcG9uZW50cy9jbG9zZS1idXR0b24nO1xuQGltcG9ydCAnLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2ZvdW5kYXRpb24tc2l0ZXMvc2Nzcy9jb21wb25lbnRzL2ZsZXgtdmlkZW8nO1xuQGltcG9ydCAnLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2ZvdW5kYXRpb24tc2l0ZXMvc2Nzcy90eXBvZ3JhcGh5L3R5cG9ncmFwaHknO1xuQGltcG9ydCAnLi4vLi4vLi4vbm9kZV9tb2R1bGVzL21vdGlvbi11aS9tb3Rpb24tdWknO1xuXG4vLyBPdmVycmlkZXNcbkBpbXBvcnQgJ292ZXJyaWRlcy90eXBvZ3JhcGh5X292ZXJyaWRlJztcbkBpbXBvcnQgJ292ZXJyaWRlcy90b3BfYmFyX292ZXJyaWRlJztcblxuLy8gSW1wb3J0IHBsdWdpbnNcbkBpbXBvcnQgJ2xpZ2h0Z2FsbGVyeS9saWdodGdhbGxlcnknO1xuXG4vLyBDYWxsIGRlZmF1bHQgbWl4aW5zXG5AaW5jbHVkZSBmb3VuZGF0aW9uLWdsb2JhbC1zdHlsZXM7XG5AaW5jbHVkZSBmb3VuZGF0aW9uLWZsZXgtY2xhc3NlcztcbkBpbmNsdWRlIGZvdW5kYXRpb24tZmxleC1ncmlkO1xuQGluY2x1ZGUgZm91bmRhdGlvbi10b3AtYmFyO1xuQGluY2x1ZGUgZm91bmRhdGlvbi1tZW51O1xuQGluY2x1ZGUgZm91bmRhdGlvbi1tZW51LWljb247XG5AaW5jbHVkZSBmb3VuZGF0aW9uLWNsb3NlLWJ1dHRvbjtcbkBpbmNsdWRlIGZvdW5kYXRpb24tZmxleC12aWRlbztcbkBpbmNsdWRlIGZvdW5kYXRpb24tdHlwb2dyYXBoeTtcbkBpbmNsdWRlIG1vdGlvbi11aS10cmFuc2l0aW9ucztcbkBpbmNsdWRlIG1vdGlvbi11aS1hbmltYXRpb25zO1xuXG4vLyBDYWxsIE92ZXJyaWRlc1xuQGluY2x1ZGUgdHlwb2dyYXBoeS1vdmVycmlkZTtcbkBpbmNsdWRlIHRvcC1iYXItb3ZlcnJpZGU7IiwiLy8gRm91bmRhdGlvbiBmb3IgU2l0ZXMgYnkgWlVSQlxuLy8gZm91bmRhdGlvbi56dXJiLmNvbVxuLy8gTGljZW5zZWQgdW5kZXIgTUlUIE9wZW4gU291cmNlXG5cbkBpbXBvcnQgJ3VuaXQnO1xuQGltcG9ydCAndmFsdWUnO1xuQGltcG9ydCAnY29sb3InO1xuQGltcG9ydCAnc2VsZWN0b3InO1xuQGltcG9ydCAnZmxleCc7XG5AaW1wb3J0ICdicmVha3BvaW50JztcbkBpbXBvcnQgJ21peGlucyc7XG4iLCIvLyBGb3VuZGF0aW9uIGZvciBTaXRlcyBieSBaVVJCXG4vLyBmb3VuZGF0aW9uLnp1cmIuY29tXG4vLyBMaWNlbnNlZCB1bmRlciBNSVQgT3BlbiBTb3VyY2VcblxuLy8vL1xuLy8vIEBncm91cCBmdW5jdGlvbnNcbi8vLy9cblxuJGdsb2JhbC1mb250LXNpemU6IDEwMCUgIWRlZmF1bHQ7XG5cbi8vIHNjc3MtbGludDpkaXNhYmxlIFplcm9Vbml0XG5cbi8vLyBSZW1vdmVzIHRoZSB1bml0IChlLmcuIHB4LCBlbSwgcmVtKSBmcm9tIGEgdmFsdWUsIHJldHVybmluZyB0aGUgbnVtYmVyIG9ubHkuXG4vLy9cbi8vLyBAcGFyYW0ge051bWJlcn0gJG51bSAtIE51bWJlciB0byBzdHJpcCB1bml0IGZyb20uXG4vLy9cbi8vLyBAcmV0dXJucyB7TnVtYmVyfSBUaGUgc2FtZSBudW1iZXIsIHNhbnMgdW5pdC5cbkBmdW5jdGlvbiBzdHJpcC11bml0KCRudW0pIHtcbiAgQHJldHVybiAkbnVtIC8gKCRudW0gKiAwICsgMSk7XG59XG5cbi8vLyBDb252ZXJ0cyBvbmUgb3IgbW9yZSBwaXhlbCB2YWx1ZXMgaW50byBtYXRjaGluZyByZW0gdmFsdWVzLlxuLy8vXG4vLy8gQHBhcmFtIHtOdW1iZXJ8TGlzdH0gJHZhbHVlcyAtIE9uZSBvciBtb3JlIHZhbHVlcyB0byBjb252ZXJ0LiBCZSBzdXJlIHRvIHNlcGFyYXRlIHRoZW0gd2l0aCBzcGFjZXMgYW5kIG5vdCBjb21tYXMuIElmIHlvdSBuZWVkIHRvIGNvbnZlcnQgYSBjb21tYS1zZXBhcmF0ZWQgbGlzdCwgd3JhcCB0aGUgbGlzdCBpbiBwYXJlbnRoZXNlcy5cbi8vLyBAcGFyYW0ge051bWJlcn0gJGJhc2UgW251bGxdIC0gVGhlIGJhc2UgdmFsdWUgdG8gdXNlIHdoZW4gY2FsY3VsYXRpbmcgdGhlIGByZW1gLiBJZiB5b3UncmUgdXNpbmcgRm91bmRhdGlvbiBvdXQgb2YgdGhlIGJveCwgdGhpcyBpcyAxNnB4LiBJZiB0aGlzIHBhcmFtZXRlciBpcyBgbnVsbGAsIHRoZSBmdW5jdGlvbiB3aWxsIHJlZmVyZW5jZSB0aGUgYCRiYXNlLWZvbnQtc2l6ZWAgdmFyaWFibGUgYXMgdGhlIGJhc2UuXG4vLy9cbi8vLyBAcmV0dXJucyB7TGlzdH0gQSBsaXN0IG9mIGNvbnZlcnRlZCB2YWx1ZXMuXG5AZnVuY3Rpb24gcmVtLWNhbGMoJHZhbHVlcywgJGJhc2U6IG51bGwpIHtcbiAgJHJlbS12YWx1ZXM6ICgpO1xuICAkY291bnQ6IGxlbmd0aCgkdmFsdWVzKTtcblxuICAvLyBJZiBubyBiYXNlIGlzIGRlZmluZWQsIGRlZmVyIHRvIHRoZSBnbG9iYWwgZm9udCBzaXplXG4gIEBpZiAkYmFzZSA9PSBudWxsIHtcbiAgICAkYmFzZTogJGdsb2JhbC1mb250LXNpemU7XG4gIH1cblxuICAvLyBJZiB0aGUgYmFzZSBmb250IHNpemUgaXMgYSAlLCB0aGVuIG11bHRpcGx5IGl0IGJ5IDE2cHhcbiAgLy8gVGhpcyBpcyBiZWNhdXNlIDEwMCUgZm9udCBzaXplID0gMTZweCBpbiBtb3N0IGFsbCBicm93c2Vyc1xuICBAaWYgdW5pdCgkYmFzZSkgPT0gJyUnIHtcbiAgICAkYmFzZTogKCRiYXNlIC8gMTAwJSkgKiAxNnB4O1xuICB9XG5cbiAgQGlmICRjb3VudCA9PSAxIHtcbiAgICBAcmV0dXJuIC16Zi10by1yZW0oJHZhbHVlcywgJGJhc2UpO1xuICB9XG5cbiAgQGZvciAkaSBmcm9tIDEgdGhyb3VnaCAkY291bnQge1xuICAgICRyZW0tdmFsdWVzOiBhcHBlbmQoJHJlbS12YWx1ZXMsIC16Zi10by1yZW0obnRoKCR2YWx1ZXMsICRpKSwgJGJhc2UpKTtcbiAgfVxuXG4gIEByZXR1cm4gJHJlbS12YWx1ZXM7XG59XG5cbi8vIENvbnZlcnRzIGEgdW5pdGxlc3MsIHBpeGVsLCBvciByZW0gdmFsdWUgdG8gZW0sIGZvciB1c2UgaW4gYnJlYWtwb2ludHMuXG5AZnVuY3Rpb24gLXpmLWJwLXRvLWVtKCR2YWx1ZSkge1xuICAvLyBQaXhlbCBhbmQgdW5pdGxlc3MgdmFsdWVzIGFyZSBjb252ZXJ0ZWQgdG8gcmVtc1xuICBAaWYgdW5pdCgkdmFsdWUpID09ICdweCcgb3IgdW5pdGxlc3MoJHZhbHVlKSB7XG4gICAgJHZhbHVlOiByZW0tY2FsYygkdmFsdWUsICRiYXNlOiAxNnB4KTtcbiAgfVxuXG4gIC8vIFRoZW4gdGhlIHZhbHVlIGlzIGNvbnZlcnRlZCB0byBlbXNcbiAgQHJldHVybiBzdHJpcC11bml0KCR2YWx1ZSkgKiAxZW07XG59XG5cbi8vLyBDb252ZXJ0cyBhIHBpeGVsIHZhbHVlIHRvIG1hdGNoaW5nIHJlbSB2YWx1ZS4gKkFueSogdmFsdWUgcGFzc2VkLCByZWdhcmRsZXNzIG9mIHVuaXQsIGlzIGFzc3VtZWQgdG8gYmUgYSBwaXhlbCB2YWx1ZS4gQnkgZGVmYXVsdCwgdGhlIGJhc2UgcGl4ZWwgdmFsdWUgdXNlZCB0byBjYWxjdWxhdGUgdGhlIHJlbSB2YWx1ZSBpcyB0YWtlbiBmcm9tIHRoZSBgJGdsb2JhbC1mb250LXNpemVgIHZhcmlhYmxlLlxuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuLy8vXG4vLy8gQHBhcmFtIHtOdW1iZXJ9ICR2YWx1ZSAtIFBpeGVsIHZhbHVlIHRvIGNvbnZlcnQuXG4vLy8gQHBhcmFtIHtOdW1iZXJ9ICRiYXNlIFtudWxsXSAtIEJhc2UgZm9yIHBpeGVsIGNvbnZlcnNpb24uXG4vLy9cbi8vLyBAcmV0dXJucyB7TnVtYmVyfSBBIG51bWJlciBpbiByZW1zLCBjYWxjdWxhdGVkIGJhc2VkIG9uIHRoZSBnaXZlbiB2YWx1ZSBhbmQgdGhlIGJhc2UgcGl4ZWwgdmFsdWUuIHJlbSB2YWx1ZXMgYXJlIHBhc3NlZCB0aHJvdWdoIGFzIGlzLlxuQGZ1bmN0aW9uIC16Zi10by1yZW0oJHZhbHVlLCAkYmFzZTogbnVsbCkge1xuICAvLyBDaGVjayBpZiB0aGUgdmFsdWUgaXMgYSBudW1iZXJcbiAgQGlmIHR5cGUtb2YoJHZhbHVlKSAhPSAnbnVtYmVyJyB7XG4gICAgQHdhcm4gaW5zcGVjdCgkdmFsdWUpICsgJyB3YXMgcGFzc2VkIHRvIHJlbS1jYWxjKCksIHdoaWNoIGlzIG5vdCBhIG51bWJlci4nO1xuICAgIEByZXR1cm4gJHZhbHVlO1xuICB9XG5cbiAgLy8gQ2FsY3VsYXRlIHJlbSBpZiB1bml0cyBmb3IgJHZhbHVlIGlzIG5vdCByZW1cbiAgQGlmIHVuaXQoJHZhbHVlKSAhPSAncmVtJyB7XG4gICAgJHZhbHVlOiBzdHJpcC11bml0KCR2YWx1ZSkgLyBzdHJpcC11bml0KCRiYXNlKSAqIDFyZW07XG4gIH1cblxuICAvLyBUdXJuIDByZW0gaW50byAwXG4gIEBpZiAkdmFsdWUgPT0gMHJlbSB7XG4gICAgJHZhbHVlOiAwO1xuICB9XG5cbiAgQHJldHVybiAkdmFsdWU7XG59XG4iLCIvLyBGb3VuZGF0aW9uIGZvciBTaXRlcyBieSBaVVJCXG4vLyBmb3VuZGF0aW9uLnp1cmIuY29tXG4vLyBMaWNlbnNlZCB1bmRlciBNSVQgT3BlbiBTb3VyY2VcblxuLy8vL1xuLy8vIEBncm91cCBmdW5jdGlvbnNcbi8vLy9cblxuLy8vIERldGVybWluZSBpZiBhIHZhbHVlIGlzIG5vdCBmYWxzZXksIGluIENTUyB0ZXJtcy4gRmFsc2V5IHZhbHVlcyBhcmUgYG51bGxgLCBgbm9uZWAsIGAwYCB3aXRoIGFueSB1bml0LCBvciBhbiBlbXB0eSBsaXN0LlxuLy8vXG4vLy8gQHBhcmFtIHtNaXhlZH0gJHZhbCAtIFZhbHVlIHRvIGNoZWNrLlxuLy8vXG4vLy8gQHJldHVybnMge0Jvb2xlYW59IGB0cnVlYCBpZiBgJHZhbGAgaXMgbm90IGZhbHNleS5cbkBmdW5jdGlvbiBoYXMtdmFsdWUoJHZhbCkge1xuICBAaWYgJHZhbCA9PSBudWxsIG9yICR2YWwgPT0gbm9uZSB7XG4gICAgQHJldHVybiBmYWxzZTtcbiAgfVxuICBAaWYgdHlwZS1vZigkdmFsKSA9PSAnbnVtYmVyJyBhbmQgc3RyaXAtdW5pdCgkdmFsKSA9PSAwIHtcbiAgICBAcmV0dXJuIGZhbHNlO1xuICB9XG4gIEBpZiB0eXBlLW9mKCR2YWwpID09ICdsaXN0JyBhbmQgbGVuZ3RoKCR2YWwpID09IDAge1xuICAgIEByZXR1cm4gZmFsc2U7XG4gIH1cbiAgQHJldHVybiB0cnVlO1xufVxuXG4vLy8gRGV0ZXJtaW5lIGEgdG9wL3JpZ2h0L2JvdHRvbS9yaWdodCB2YWx1ZSBvbiBhIHBhZGRpbmcsIG1hcmdpbiwgZXRjLiBwcm9wZXJ0eSwgbm8gbWF0dGVyIGhvdyBtYW55IHZhbHVlcyB3ZXJlIHBhc3NlZCBpbi4gVXNlIHRoaXMgZnVuY3Rpb24gaWYgeW91IG5lZWQgdG8ga25vdyB0aGUgc3BlY2lmaWMgc2lkZSBvZiBhIHZhbHVlLCBidXQgZG9uJ3Qga25vdyBpZiB0aGUgdmFsdWUgaXMgdXNpbmcgYSBzaG9ydGhhbmQgZm9ybWF0LlxuLy8vXG4vLy8gQHBhcmFtIHtMaXN0fE51bWJlcn0gJHZhbCAtIFZhbHVlIHRvIGFuYWx5emUuIFNob3VsZCBiZSBhIHNob3J0aGFuZCBzaXppbmcgcHJvcGVydHksIGUuZy4gXCIxZW0gMmVtIDFlbVwiXG4vLy8gQHBhcmFtIHtLZXl3b3JkfSAkc2lkZSAtIFNpZGUgdG8gcmV0dXJuLiBTaG91bGQgYmUgYHRvcGAsIGByaWdodGAsIGBib3R0b21gLCBvciBgbGVmdGAuXG4vLy9cbi8vLyBAcmV0dXJucyB7TnVtYmVyfSBBIHNpbmdsZSB2YWx1ZSBiYXNlZCBvbiBgJHZhbGAgYW5kIGAkc2lkZWAuXG5AZnVuY3Rpb24gZ2V0LXNpZGUoJHZhbCwgJHNpZGUpIHtcbiAgJGxlbmd0aDogbGVuZ3RoKCR2YWwpO1xuXG4gIEBpZiAkbGVuZ3RoID09IDEge1xuICAgIEByZXR1cm4gJHZhbDtcbiAgfVxuICBAaWYgJGxlbmd0aCA9PSAyIHtcbiAgICBAcmV0dXJuIG1hcC1nZXQoKFxuICAgICAgdG9wOiBudGgoJHZhbCwgMSksXG4gICAgICBib3R0b206IG50aCgkdmFsLCAxKSxcbiAgICAgIGxlZnQ6IG50aCgkdmFsLCAyKSxcbiAgICAgIHJpZ2h0OiBudGgoJHZhbCwgMiksXG4gICAgKSwgJHNpZGUpO1xuICB9XG4gIEBpZiAkbGVuZ3RoID09IDMge1xuICAgIEByZXR1cm4gbWFwLWdldCgoXG4gICAgICB0b3A6IG50aCgkdmFsLCAxKSxcbiAgICAgIGxlZnQ6IG50aCgkdmFsLCAyKSxcbiAgICAgIHJpZ2h0OiBudGgoJHZhbCwgMiksXG4gICAgICBib3R0b206IG50aCgkdmFsLCAzKSxcbiAgICApLCAkc2lkZSk7XG4gIH1cbiAgQGlmICRsZW5ndGggPT0gNCB7XG4gICAgQHJldHVybiBtYXAtZ2V0KChcbiAgICAgIHRvcDogbnRoKCR2YWwsIDEpLFxuICAgICAgcmlnaHQ6IG50aCgkdmFsLCAyKSxcbiAgICAgIGJvdHRvbTogbnRoKCR2YWwsIDMpLFxuICAgICAgbGVmdDogbnRoKCR2YWwsIDQpLFxuICAgICksICRzaWRlKTtcbiAgfVxufVxuXG4vLy8gR2l2ZW4gYm9yZGVyICR2YWwsIGZpbmQgYSBzcGVjaWZpYyBlbGVtZW50IG9mIHRoZSBib3JkZXIsIHdoaWNoIGlzICRlbGVtLiBUaGUgcG9zc2libGUgdmFsdWVzIGZvciAkZWxlbSBhcmUgd2lkdGgsIHN0eWxlLCBhbmQgY29sb3IuXG4vLy9cbi8vLyBAcGFyYW0ge0xpc3R9ICR2YWwgLSBCb3JkZXIgdmFsdWUgdG8gZmluZCBhIHZhbHVlIGluLlxuLy8vIEBwYXJhbSB7S2V5d29yZH0gJGVsZW0gLSBCb3JkZXIgY29tcG9uZW50IHRvIGV4dHJhY3QuXG4vLy9cbi8vLyBAcmV0dXJucyB7TWl4ZWR9IElmIHRoZSB2YWx1ZSBleGlzdHMsIHJldHVybnMgdGhlIHZhbHVlLiBJZiB0aGUgdmFsdWUgaXMgbm90IGluIHRoZSBib3JkZXIgZGVmaW5pdGlvbiwgdGhlIGZ1bmN0aW9uIHdpbGwgcmV0dXJuIGEgMHB4IHdpZHRoLCBzb2xpZCBzdHlsZSwgb3IgYmxhY2sgYm9yZGVyLlxuQGZ1bmN0aW9uIGdldC1ib3JkZXItdmFsdWUoJHZhbCwgJGVsZW0pIHtcbiAgLy8gRmluZCB0aGUgd2lkdGgsIHN0eWxlLCBvciBjb2xvciBhbmQgcmV0dXJuIGl0XG4gIEBlYWNoICR2IGluICR2YWwge1xuICAgICR0eXBlOiB0eXBlLW9mKCR2KTtcbiAgICBAaWYgJGVsZW0gPT0gd2lkdGggYW5kICR0eXBlID09ICdudW1iZXInIHtcbiAgICAgIEByZXR1cm4gJHY7XG4gICAgfVxuICAgIEBpZiAkZWxlbSA9PSBzdHlsZSBhbmQgJHR5cGUgPT0gJ3N0cmluZycge1xuICAgICAgQHJldHVybiAkdjtcbiAgICB9XG4gICAgQGlmICRlbGVtID09IGNvbG9yIGFuZCAkdHlwZSA9PSAnY29sb3InIHtcbiAgICAgIEByZXR1cm4gJHY7XG4gICAgfVxuICB9XG5cbiAgLy8gRGVmYXVsdHNcbiAgJGRlZmF1bHRzOiAoXG4gICAgd2lkdGg6IDAsXG4gICAgc3R5bGU6IHNvbGlkLFxuICAgIGNvbG9yOiAjMDAwLFxuICApO1xuXG4gIEByZXR1cm4gbWFwLWdldCgkZGVmYXVsdHMsICRlbGVtKTtcbn1cblxuLy8vIEZpbmRzIGEgdmFsdWUgaW4gYSBuZXN0ZWQgbWFwLlxuLy8vIEBsaW5rIGh0dHBzOi8vY3NzLXRyaWNrcy5jb20vc25pcHBldHMvc2Fzcy9kZWVwLWdldHNldC1tYXBzLyBEZWVwIEdldC9TZXQgaW4gTWFwc1xuLy8vXG4vLy8gQHBhcmFtIHtNYXB9ICRtYXAgLSBNYXAgdG8gcHVsbCBhIHZhbHVlIGZyb20uXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRrZXlzLi4uIC0gS2V5cyB0byB1c2Ugd2hlbiBsb29raW5nIGZvciBhIHZhbHVlLlxuLy8vIEByZXR1cm5zIHtNaXhlZH0gVGhlIHZhbHVlIGZvdW5kIGluIHRoZSBtYXAuXG5AZnVuY3Rpb24gbWFwLWRlZXAtZ2V0KCRtYXAsICRrZXlzLi4uKSB7XG4gIEBlYWNoICRrZXkgaW4gJGtleXMge1xuICAgICRtYXA6IG1hcC1nZXQoJG1hcCwgJGtleSk7XG4gIH1cbiAgQHJldHVybiAkbWFwO1xufVxuIiwiLy8gRm91bmRhdGlvbiBmb3IgU2l0ZXMgYnkgWlVSQlxuLy8gZm91bmRhdGlvbi56dXJiLmNvbVxuLy8gTGljZW5zZWQgdW5kZXIgTUlUIE9wZW4gU291cmNlXG5cbi8vLy9cbi8vLyBAZ3JvdXAgZnVuY3Rpb25zXG4vLy8vXG5cbi8vLyBDaGVja3MgdGhlIGxpZ2h0bmVzcyBvZiBgJGNvbG9yYCwgYW5kIGlmIGl0IHBhc3NlcyB0aGUgYCR0aHJlc2hvbGRgIG9mIGxpZ2h0bmVzcywgaXQgcmV0dXJucyB0aGUgYCR5ZXNgIGNvbG9yLiBPdGhlcndpc2UsIGl0IHJldHVybnMgdGhlIGAkbm9gIGNvbG9yLiBVc2UgdGhpcyBmdW5jdGlvbiB0byBkeW5hbWljYWxseSBvdXRwdXQgYSBmb3JlZ3JvdW5kIGNvbG9yIGJhc2VkIG9uIGEgZ2l2ZW4gYmFja2dyb3VuZCBjb2xvci5cbi8vL1xuLy8vIEBwYXJhbSB7Q29sb3J9ICRjb2xvciAtIENvbG9yIHRvIGNoZWNrIHRoZSBsaWdodG5lc3Mgb2YuXG4vLy8gQHBhcmFtIHtDb2xvcn0gJHllcyBbJGJsYWNrXSAtIENvbG9yIHRvIHJldHVybiBpZiBgJGNvbG9yYCBpcyBsaWdodC5cbi8vLyBAcGFyYW0ge0NvbG9yfSAkbm8gWyR3aGl0ZV0gLSBDb2xvciB0byByZXR1cm4gaWYgYCRjb2xvcmAgaXMgZGFyay5cbi8vLyBAcGFyYW0ge1BlcmNlbnRhZ2V9ICR0aHJlc2hvbGQgWzYwJV0gLSBUaHJlc2hvbGQgb2YgbGlnaHRuZXNzIHRvIGNoZWNrIGFnYWluc3QuXG4vLy9cbi8vLyBAcmV0dXJucyB7Q29sb3J9IFRoZSAkeWVzIGNvbG9yIG9yICRubyBjb2xvci5cbkBmdW5jdGlvbiBmb3JlZ3JvdW5kKCRjb2xvciwgJHllczogJGJsYWNrLCAkbm86ICR3aGl0ZSwgJHRocmVzaG9sZDogNjAlKSB7XG4gIEBpZiAkY29sb3IgPT0gdHJhbnNwYXJlbnQge1xuICAgICRjb2xvcjogJGJvZHktYmFja2dyb3VuZDtcbiAgfVxuICBAaWYgKGxpZ2h0bmVzcygkY29sb3IpID4gJHRocmVzaG9sZCkge1xuICAgIEByZXR1cm4gJHllcztcbiAgfVxuICBAZWxzZSB7XG4gICAgQHJldHVybiAkbm87XG4gIH1cbn1cblxuLy8vIFNjYWxlcyBhIGNvbG9yIHRvIGJlIGxpZ2h0ZXIgaWYgaXQncyBsaWdodCwgb3IgZGFya2VyIGlmIGl0J3MgZGFyay4gVXNlIHRoaXMgZnVuY3Rpb24gdG8gdGludCBhIGNvbG9yIGFwcHJvcHJpYXRlIHRvIGl0cyBsaWdodG5lc3MuXG4vLy9cbi8vLyBAcGFyYW0ge0NvbG9yfSAkY29sb3IgLSBDb2xvciB0byBzY2FsZS5cbi8vLyBAcGFyYW0ge1BlcmNlbnRhZ2V9ICRzY2FsZSBbNSVdIC0gQW1vdW50IHRvIHNjYWxlIHVwIG9yIGRvd24uXG4vLy8gQHBhcmFtIHtQZXJjZW50YWdlfSAkdGhyZXNob2xkIFs0MCVdIC0gVGhyZXNob2xkIG9mIGxpZ2h0bmVzcyB0byBjaGVjayBhZ2FpbnN0LlxuLy8vXG4vLy8gQHJldHVybnMge0NvbG9yfSBBIHNjYWxlZCBjb2xvci5cbkBmdW5jdGlvbiBzbWFydC1zY2FsZSgkY29sb3IsICRzY2FsZTogNSUsICR0aHJlc2hvbGQ6IDQwJSkge1xuICBAaWYgbGlnaHRuZXNzKCRjb2xvcikgPiAkdGhyZXNob2xkIHtcbiAgICAkc2NhbGU6IC0kc2NhbGU7XG4gIH1cbiAgQHJldHVybiBzY2FsZS1jb2xvcigkY29sb3IsICRsaWdodG5lc3M6ICRzY2FsZSk7XG59XG5cbi8vLyBUcmFuc2ZlcnMgdGhlIGNvbG9ycyBpbiB0aGUgYCRmb3VuZGF0aW9uLXBhbGV0dGVgIHZhcmlhYmxlIGludG8gdGhlIGxlZ2FjeSBjb2xvciB2YXJpYWJsZXMsIHN1Y2ggYXMgYCRwcmltYXJ5LWNvbG9yYCBhbmQgYCRzZWNvbmRhcnktY29sb3JgLiBDYWxsIHRoaXMgbWl4aW4gYmVsb3cgdGhlIEdsb2JhbCBzZWN0aW9uIG9mIHlvdXIgc2V0dGluZ3MgZmlsZSB0byBwcm9wZXJseSBtaWdyYXRlIHlvdXIgY29kZWJhc2UuXG5AbWl4aW4gYWRkLWZvdW5kYXRpb24tY29sb3JzKCkge1xuICBAaWYgbWFwLWhhcy1rZXkoJGZvdW5kYXRpb24tcGFsZXR0ZSwgcHJpbWFyeSkge1xuICAgICRwcmltYXJ5LWNvbG9yOiBtYXAtZ2V0KCRmb3VuZGF0aW9uLXBhbGV0dGUsIHByaW1hcnkpICFnbG9iYWw7XG4gIH1cbiAgQGlmIG1hcC1oYXMta2V5KCRmb3VuZGF0aW9uLXBhbGV0dGUsIHNlY29uZGFyeSkge1xuICAgICRzZWNvbmRhcnktY29sb3I6IG1hcC1nZXQoJGZvdW5kYXRpb24tcGFsZXR0ZSwgc2Vjb25kYXJ5KSAhZ2xvYmFsO1xuICB9XG4gIEBpZiBtYXAtaGFzLWtleSgkZm91bmRhdGlvbi1wYWxldHRlLCBzdWNjZXNzKSB7XG4gICAgJHN1Y2Nlc3MtY29sb3I6IG1hcC1nZXQoJGZvdW5kYXRpb24tcGFsZXR0ZSwgc3VjY2VzcykgIWdsb2JhbDtcbiAgfVxuICBAaWYgbWFwLWhhcy1rZXkoJGZvdW5kYXRpb24tcGFsZXR0ZSwgd2FybmluZykge1xuICAgICR3YXJuaW5nLWNvbG9yOiBtYXAtZ2V0KCRmb3VuZGF0aW9uLXBhbGV0dGUsIHdhcm5pbmcpICFnbG9iYWw7XG4gIH1cbiAgQGlmIG1hcC1oYXMta2V5KCRmb3VuZGF0aW9uLXBhbGV0dGUsIGFsZXJ0KSB7XG4gICAgJGFsZXJ0LWNvbG9yOiBtYXAtZ2V0KCRmb3VuZGF0aW9uLXBhbGV0dGUsIGFsZXJ0KSAhZ2xvYmFsO1xuICB9XG59XG4iLCIvLyBGb3VuZGF0aW9uIGZvciBTaXRlcyBieSBaVVJCXG4vLyBmb3VuZGF0aW9uLnp1cmIuY29tXG4vLyBMaWNlbnNlZCB1bmRlciBNSVQgT3BlbiBTb3VyY2VcblxuLy8vL1xuLy8vIEBncm91cCBmdW5jdGlvbnNcbi8vLy9cblxuLy8vIEdlbmVyYXRlcyBhIHNlbGVjdG9yIHdpdGggZXZlcnkgdGV4dCBpbnB1dCB0eXBlLiBZb3UgY2FuIGFsc28gZmlsdGVyIHRoZSBsaXN0IHRvIG9ubHkgb3V0cHV0IGEgc3Vic2V0IG9mIHRob3NlIHNlbGVjdG9ycy5cbi8vL1xuLy8vIEBwYXJhbSB7TGlzdHxLZXl3b3JkfSAkdHlwZXMgWygpXSAtIEEgbGlzdCBvZiB0ZXh0IGlucHV0IHR5cGVzIHRvIHVzZS4gTGVhdmUgYmxhbmsgdG8gdXNlIGFsbCBvZiB0aGVtLlxuQGZ1bmN0aW9uIHRleHQtaW5wdXRzKCR0eXBlczogKCkpIHtcbiAgJHJldHVybjogKCk7XG5cbiAgJGFsbC10eXBlczpcbiAgICB0ZXh0XG4gICAgcGFzc3dvcmRcbiAgICBkYXRlXG4gICAgZGF0ZXRpbWVcbiAgICBkYXRldGltZS1sb2NhbFxuICAgIG1vbnRoXG4gICAgd2Vla1xuICAgIGVtYWlsXG4gICAgbnVtYmVyXG4gICAgc2VhcmNoXG4gICAgdGVsXG4gICAgdGltZVxuICAgIHVybFxuICAgIGNvbG9yO1xuXG4gIEBpZiBub3QgaGFzLXZhbHVlKCR0eXBlcykge1xuICAgICR0eXBlczogJGFsbC10eXBlcztcbiAgfVxuXG4gIEBlYWNoICR0eXBlIGluICR0eXBlcyB7XG4gICAgJHJldHVybjogYXBwZW5kKCRyZXR1cm4sIHVucXVvdGUoJ1t0eXBlPVxcJyN7JHR5cGV9XFwnXScpLCBjb21tYSk7XG4gIH1cblxuICBAcmV0dXJuICRyZXR1cm47XG59XG4iLCIkLXpmLWZsZXgtanVzdGlmeTogKFxuICAnbGVmdCc6IGZsZXgtc3RhcnQsXG4gICdyaWdodCc6IGZsZXgtZW5kLFxuICAnY2VudGVyJzogY2VudGVyLFxuICAnanVzdGlmeSc6IHNwYWNlLWJldHdlZW4sXG4gICdzcGFjZWQnOiBzcGFjZS1hcm91bmQsXG4pO1xuXG4kLXpmLWZsZXgtYWxpZ246IChcbiAgJ3RvcCc6IGZsZXgtc3RhcnQsXG4gICdib3R0b20nOiBmbGV4LWVuZCxcbiAgJ21pZGRsZSc6IGNlbnRlcixcbiAgJ3N0cmV0Y2gnOiBzdHJldGNoLFxuKTtcblxuLy8vIEVuYWJsZXMgZmxleGJveCBieSBhZGRpbmcgYGRpc3BsYXk6IGZsZXhgIHRvIHRoZSBlbGVtZW50LlxuQG1peGluIGZsZXgge1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4vLy8gSG9yaXpvbnRhbGx5IG9yIHZlcnRpY2FsbHkgYWxpZ25zIHRoZSBpdGVtcyB3aXRoaW4gYSBmbGV4IGNvbnRhaW5lci5cbi8vL1xuLy8vIEBwYXJhbSB7S2V5d29yZH0gJHggW251bGxdIC0gSG9yaXpvbnRhbCBhbGlnbm1lbnQgdG8gdXNlLiBDYW4gYmUgYGxlZnRgLCBgcmlnaHRgLCBgY2VudGVyYCwgYGp1c3RpZnlgLCBvciBgc3BhY2VkYC4gT3IsIHNldCBpdCB0byBgbnVsbGAgKHRoZSBkZWZhdWx0KSB0byBub3Qgc2V0IGhvcml6b250YWwgYWxpZ25tZW50LlxuLy8vIEBwYXJhbSB7S2V5d29yZH0gJHkgW251bGxdIC0gVmVydGljYWwgYWxpZ25tZW50IHRvIHVzZS4gQ2FuIGJlIGB0b3BgLCBgYm90dG9tYCwgYG1pZGRsZWAsIG9yIGBzdHJldGNoYC4gT3IsIHNldCBpdCB0byBgbnVsbGAgKHRoZSBkZWZhdWx0KSB0byBub3Qgc2V0IHZlcnRpY2FsIGFsaWdubWVudC5cbkBtaXhpbiBmbGV4LWFsaWduKCR4OiBudWxsLCAkeTogbnVsbCkge1xuICBAaWYgJHgge1xuICAgIEBpZiBtYXAtaGFzLWtleSgkLXpmLWZsZXgtanVzdGlmeSwgJHgpIHtcbiAgICAgICR4OiBtYXAtZ2V0KCQtemYtZmxleC1qdXN0aWZ5LCAkeCk7XG4gICAgfVxuICAgIEBlbHNlIHtcbiAgICAgIEB3YXJuICdmbGV4LWdyaWQtcm93LWFsaWduKCk6ICN7JHh9IGlzIG5vdCBhIHZhbGlkIHZhbHVlIGZvciBob3Jpem9udGFsIGFsaWdubWVudC4gVXNlIGxlZnQsIHJpZ2h0LCBjZW50ZXIsIGp1c3RpZnksIG9yIHNwYWNlZC4nXG4gICAgfVxuICB9XG5cbiAgQGlmICR5IHtcbiAgICBAaWYgbWFwLWhhcy1rZXkoJC16Zi1mbGV4LWFsaWduLCAkeSkge1xuICAgICAgJHk6IG1hcC1nZXQoJC16Zi1mbGV4LWFsaWduLCAkeSk7XG4gICAgfVxuICAgIEBlbHNlIHtcbiAgICAgIEB3YXJuICdmbGV4LWdyaWQtcm93LWFsaWduKCk6ICN7JHl9IGlzIG5vdCBhIHZhbGlkIHZhbHVlIGZvciB2ZXJ0aWNhbCBhbGlnbm1lbnQuIFVzZSB0b3AsIGJvdHRvbSwgbWlkZGxlLCBvciBzdHJldGNoLidcbiAgICB9XG4gIH1cblxuICBqdXN0aWZ5LWNvbnRlbnQ6ICR4O1xuICBhbGlnbi1pdGVtczogJHk7XG59XG5cbi8vLyBWZXJ0aWNhbGx5IGFsaWduIGEgc2luZ2xlIGNvbHVtbiB3aXRoaW4gYSBmbGV4IHJvdy4gQXBwbHkgdGhpcyBtaXhpbiB0byBhIGZsZXggY29sdW1uLlxuLy8vXG4vLy8gQHBhcmFtIHtLZXl3b3JkfSAkeSBbbnVsbF0gLSBWZXJ0aWNhbCBhbGlnbm1lbnQgdG8gdXNlLiBDYW4gYmUgYHRvcGAsIGBib3R0b21gLCBgbWlkZGxlYCwgb3IgYHN0cmV0Y2hgLiBPciwgc2V0IGl0IHRvIGBudWxsYCAodGhlIGRlZmF1bHQpIHRvIG5vdCBzZXQgdmVydGljYWwgYWxpZ25tZW50LlxuQG1peGluIGZsZXgtYWxpZ24tc2VsZigkeTogbnVsbCkge1xuICBAaWYgJHkge1xuICAgIEBpZiBtYXAtaGFzLWtleSgkLXpmLWZsZXgtYWxpZ24sICR5KSB7XG4gICAgICAkeTogbWFwLWdldCgkLXpmLWZsZXgtYWxpZ24sICR5KTtcbiAgICB9XG4gICAgQGVsc2Uge1xuICAgICAgQHdhcm4gJ2ZsZXgtZ3JpZC1jb2x1bW4tYWxpZ24oKTogI3skeX0gaXMgbm90IGEgdmFsaWQgdmFsdWUgZm9yIGFsaWdubWVudC4gVXNlIHRvcCwgYm90dG9tLCBtaWRkbGUsIG9yIHN0cmV0Y2guJ1xuICAgIH1cbiAgfVxuXG4gIGFsaWduLXNlbGY6ICR5O1xufVxuXG4vLy8gQ2hhbmdlcyB0aGUgc291cmNlIG9yZGVyIG9mIGEgZmxleCBjaGlsZC4gQ2hpbGRyZW4gd2l0aCBsb3dlciBudW1iZXJzIGFwcGVhciBmaXJzdCBpbiB0aGUgbGF5b3V0LlxuLy8vIEBwYXJhbSB7TnVtYmVyfSAkb3JkZXIgWzBdIC0gT3JkZXIgbnVtYmVyIHRvIGFwcGx5LlxuQG1peGluIGZsZXgtb3JkZXIoJG9yZGVyOiAwKSB7XG4gIG9yZGVyOiAkb3JkZXI7XG59XG4iLCIvLyBGb3VuZGF0aW9uIGZvciBTaXRlcyBieSBaVVJCXG4vLyBmb3VuZGF0aW9uLnp1cmIuY29tXG4vLyBMaWNlbnNlZCB1bmRlciBNSVQgT3BlbiBTb3VyY2VcblxuLy8vL1xuLy8vIEBncm91cCBicmVha3BvaW50c1xuLy8vL1xuXG4vLyBzY3NzLWxpbnQ6ZGlzYWJsZSBaZXJvVW5pdFxuXG4vLy8gQSBsaXN0IG9mIG5hbWVkIGJyZWFrcG9pbnRzLiBZb3UgY2FuIHVzZSB0aGVzZSB3aXRoIHRoZSBgYnJlYWtwb2ludCgpYCBtaXhpbiB0byBxdWlja2x5IGNyZWF0ZSBtZWRpYSBxdWVyaWVzLlxuLy8vIEB0eXBlIE1hcFxuJGJyZWFrcG9pbnRzOiAoXG4gIHNtYWxsOiAwLFxuICBtZWRpdW06IDY0MHB4LFxuICBsYXJnZTogMTAyNHB4LFxuICB4bGFyZ2U6IDEyMDBweCxcbiAgeHhsYXJnZTogMTQ0MHB4LFxuKSAhZGVmYXVsdDtcblxuJC16Zi16ZXJvLWJyZWFrcG9pbnQ6IHNtYWxsICFkZWZhdWx0O1xuXG5AaWYgbnRoKG1hcC12YWx1ZXMoJGJyZWFrcG9pbnRzKSwxKSAhPSAwIHtcbiAgQGVycm9yICdZb3VyIHNtYWxsZXN0IGJyZWFrcG9pbnQgKGRlZmluZWQgaW4gJGJyZWFrcG9pbnRzKSBtdXN0IGJlIHNldCB0byBcIjBcIi4nO1xufSBAZWxzZSB7XG4gICQtemYtemVyby1icmVha3BvaW50OiBudGgobWFwLWtleXMoJGJyZWFrcG9pbnRzKSwxKTtcbn1cblxuLy8vIEFsbCBvZiB0aGUgbmFtZXMgaW4gdGhpcyBsaXN0IHdpbGwgYmUgb3V0cHV0IGFzIGNsYXNzZXMgaW4geW91ciBDU1MsIGxpa2UgYC5zbWFsbC0xMmAsIGAubWVkaXVtLTZgLCBhbmQgc28gb24uIEVhY2ggdmFsdWUgaW4gdGhpcyBsaXN0IG11c3QgYWxzbyBiZSBpbiB0aGUgYCRicmVha3BvaW50c2AgbWFwLlxuLy8vIEB0eXBlIExpc3RcbiRicmVha3BvaW50LWNsYXNzZXM6IChzbWFsbCBtZWRpdW0gbGFyZ2UpICFkZWZhdWx0O1xuXG4vLy8gR2VuZXJhdGVzIGEgbWVkaWEgcXVlcnkgc3RyaW5nIG1hdGNoaW5nIHRoZSBpbnB1dCB2YWx1ZS4gUmVmZXIgdG8gdGhlIGRvY3VtZW50YXRpb24gZm9yIHRoZSBgYnJlYWtwb2ludCgpYCBtaXhpbiB0byBzZWUgd2hhdCB0aGUgcG9zc2libGUgaW5wdXRzIGFyZS5cbi8vL1xuLy8vIEBwYXJhbSB7S2V5d29yZHxOdW1iZXJ9ICR2YWwgW3NtYWxsXSAtIEJyZWFrcG9pbnQgbmFtZSwgb3IgcHgsIHJlbSwgb3IgZW0gdmFsdWUgdG8gcHJvY2Vzcy5cbkBmdW5jdGlvbiBicmVha3BvaW50KCR2YWw6ICQtemYtemVyby1icmVha3BvaW50KSB7XG4gIC8vIFNpemUgb3Iga2V5d29yZFxuICAkYnA6IG50aCgkdmFsLCAxKTtcbiAgLy8gVmFsdWUgZm9yIG1heC13aWR0aCBtZWRpYSBxdWVyaWVzXG4gICRicC1tYXg6IDA7XG4gIC8vIERpcmVjdGlvbiBvZiBtZWRpYSBxdWVyeSAodXAsIGRvd24sIG9yIG9ubHkpXG4gICRkaXI6IGlmKGxlbmd0aCgkdmFsKSA+IDEsIG50aCgkdmFsLCAyKSwgdXApO1xuICAvLyBFdmVudHVhbCBvdXRwdXRcbiAgJHN0cjogJyc7XG4gIC8vIElzIGl0IGEgbmFtZWQgbWVkaWEgcXVlcnk/XG4gICRuYW1lZDogZmFsc2U7XG5cbiAgLy8gT3JpZW50YXRpb24gbWVkaWEgcXVlcmllcyBoYXZlIGEgdW5pcXVlIHN5bnRheFxuICBAaWYgJGJwID09ICdsYW5kc2NhcGUnIG9yICRicCA9PSAncG9ydHJhaXQnIHtcbiAgICBAcmV0dXJuICcob3JpZW50YXRpb246ICN7JGJwfSknO1xuICB9XG4gIEBlbHNlIGlmICRicCA9PSAncmV0aW5hJyB7XG4gICAgQHJldHVybiAnKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSc7XG4gIH1cblxuICAvLyBUcnkgdG8gcHVsbCBhIG5hbWVkIGJyZWFrcG9pbnQgb3V0IG9mIHRoZSAkYnJlYWtwb2ludHMgbWFwXG4gIEBpZiB0eXBlLW9mKCRicCkgPT0gJ3N0cmluZycge1xuICAgIEBpZiBtYXAtaGFzLWtleSgkYnJlYWtwb2ludHMsICRicCkge1xuICAgICAgQGlmICRkaXIgPT0gJ29ubHknIG9yICRkaXIgPT0gJ2Rvd24nIHtcbiAgICAgICAgJGJwLW1heDogLXpmLW1hcC1uZXh0KCRicmVha3BvaW50cywgJGJwKTtcbiAgICAgIH1cblxuICAgICAgJGJwOiBtYXAtZ2V0KCRicmVha3BvaW50cywgJGJwKTtcbiAgICAgICRuYW1lZDogdHJ1ZTtcbiAgICB9XG4gICAgQGVsc2Uge1xuICAgICAgJGJwOiAwO1xuICAgICAgQHdhcm4gJ2JyZWFrcG9pbnQoKTogXCIjeyR2YWx9XCIgaXMgbm90IGRlZmluZWQgaW4geW91ciAkYnJlYWtwb2ludHMgc2V0dGluZy4nO1xuICAgIH1cbiAgfVxuXG4gIC8vIENvbnZlcnQgYW55IHBpeGVsLCByZW0sIG9yIHVuaXRsZXNzIHZhbHVlIHRvIGVtXG4gICRicDogLXpmLWJwLXRvLWVtKCRicCk7XG4gIEBpZiAkYnAtbWF4IHtcbiAgICAkYnAtbWF4OiAtemYtYnAtdG8tZW0oJGJwLW1heCkgLSAoMS8xNik7XG4gIH1cblxuICAvLyBDb25kaXRpb25zIHRvIHNraXAgbWVkaWEgcXVlcnkgY3JlYXRpb25cbiAgLy8gLSBJdCdzIGEgbmFtZWQgYnJlYWtwb2ludCB0aGF0IHJlc29sdmVkIHRvIFwiMCBkb3duXCIgb3IgXCIwIHVwXCJcbiAgLy8gLSBJdCdzIGEgbnVtZXJpYyBicmVha3BvaW50IHRoYXQgcmVzb2x2ZWQgdG8gXCIwIFwiICsgYW55dGhpbmdcbiAgQGlmICRicCA+IDBlbSBvciAkZGlyID09ICdvbmx5JyBvciAkZGlyID09ICdkb3duJyB7XG4gICAgLy8gYG9ubHlgIHJhbmdlcyB1c2UgdGhlIGZvcm1hdCBgKG1pbi13aWR0aDogbikgYW5kIChtYXgtd2lkdGg6IG4pYFxuICAgIEBpZiAkZGlyID09ICdvbmx5JyB7XG4gICAgICAvLyBPbmx5IG5hbWVkIG1lZGlhIHF1ZXJpZXMgY2FuIGhhdmUgYW4gXCJvbmx5XCIgcmFuZ2VcbiAgICAgIEBpZiAkbmFtZWQgPT0gdHJ1ZSB7XG4gICAgICAgIC8vIE9ubHkgdXNlIFwibWluLXdpZHRoXCIgaWYgdGhlIGZsb29yIGlzIGdyZWF0ZXIgdGhhbiAwXG4gICAgICAgIEBpZiAkYnAgPiAwZW0ge1xuICAgICAgICAgICRzdHI6ICRzdHIgKyAnKG1pbi13aWR0aDogI3skYnB9KSc7XG5cbiAgICAgICAgICAvLyBPbmx5IGFkZCBcImFuZFwiIHRvIHRoZSBtZWRpYSBxdWVyeSBpZiB0aGVyZSdzIGEgY2VpbGluZ1xuICAgICAgICAgIEBpZiAkYnAtbWF4ICE9IG51bGwge1xuICAgICAgICAgICAgJHN0cjogJHN0ciArICcgYW5kICc7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gT25seSB1c2UgXCJtYXgtd2lkdGhcIiBpZiB0aGVyZSdzIGEgY2VpbGluZ1xuICAgICAgICBAaWYgJGJwLW1heCAhPSBudWxsIHtcbiAgICAgICAgICAkc3RyOiAkc3RyICsgJyhtYXgtd2lkdGg6ICN7JGJwLW1heH0pJztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgQGVsc2Uge1xuICAgICAgICBAd2FybiAnYnJlYWtwb2ludCgpOiBPbmx5IG5hbWVkIG1lZGlhIHF1ZXJpZXMgY2FuIGhhdmUgYW4gYG9ubHlgIHJhbmdlLic7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gYGRvd25gIHJhbmdlcyB1c2UgdGhlIGZvcm1hdCBgKG1heC13aWR0aDogbilgXG4gICAgQGVsc2UgaWYgJGRpciA9PSAnZG93bicge1xuICAgICAgJG1heDogaWYoJG5hbWVkLCAkYnAtbWF4LCAkYnApO1xuXG4gICAgICAvLyBTa2lwIG1lZGlhIHF1ZXJ5IGNyZWF0aW9uIGlmIGlucHV0IHZhbHVlIGlzIGV4YWN0bHkgXCIwIGRvd25cIixcbiAgICAgIC8vIHVubGVzcyB0aGUgZnVuY3Rpb24gd2FzIGNhbGxlZCBhcyBcInNtYWxsIGRvd25cIiwgaW4gd2hpY2ggY2FzZSBpdCdzIGp1c3QgXCJzbWFsbCBvbmx5XCJcbiAgICAgIEBpZiAkbmFtZWQgb3IgJGJwID4gMGVtIHtcbiAgICAgICAgQGlmICRtYXggIT0gbnVsbCB7XG4gICAgICAgICAgJHN0cjogJHN0ciArICcobWF4LXdpZHRoOiAjeyRtYXh9KSc7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBgdXBgIHJhbmdlcyB1c2UgdGhlIGZvcm1hdCBgKG1pbi13aWR0aDogbilgXG4gICAgQGVsc2UgaWYgJGJwID4gMGVtIHtcbiAgICAgICRzdHI6ICRzdHIgKyAnKG1pbi13aWR0aDogI3skYnB9KSc7XG4gICAgfVxuICB9XG5cbiAgQHJldHVybiAkc3RyO1xufVxuXG4vLy8gV3JhcHMgYSBtZWRpYSBxdWVyeSBhcm91bmQgdGhlIGNvbnRlbnQgeW91IHB1dCBpbnNpZGUgdGhlIG1peGluLiBUaGlzIG1peGluIGFjY2VwdHMgYSBudW1iZXIgb2YgdmFsdWVzOlxuLy8vICAtIElmIGEgc3RyaW5nIGlzIHBhc3NlZCwgdGhlIG1peGluIHdpbGwgbG9vayBmb3IgaXQgaW4gdGhlIGAkYnJlYWtwb2ludHNgIG1hcCwgYW5kIHVzZSBhIG1lZGlhIHF1ZXJ5IHRoZXJlLlxuLy8vICAtIElmIGEgcGl4ZWwgdmFsdWUgaXMgcGFzc2VkLCBpdCB3aWxsIGJlIGNvbnZlcnRlZCB0byBhbiBlbSB2YWx1ZSB1c2luZyBgJGdsb2JhbC1mb250LXNpemVgIGFzIHRoZSBiYXNlLlxuLy8vICAtIElmIGEgcmVtIHZhbHVlIGlzIHBhc3NlZCwgdGhlIHVuaXQgd2lsbCBiZSBjaGFuZ2VkIHRvIGVtLlxuLy8vICAtIElmIGFuIGVtIHZhbHVlIGlzIHBhc3NlZCwgdGhlIHZhbHVlIHdpbGwgYmUgdXNlZCBhcy1pcy5cbi8vL1xuLy8vIEBwYXJhbSB7S2V5d29yZHxOdW1iZXJ9ICR2YWx1ZSAtIEJyZWFrcG9pbnQgbmFtZSwgb3IgcHgsIHJlbSwgb3IgZW0gdmFsdWUgdG8gcHJvY2Vzcy5cbi8vL1xuLy8vIEBvdXRwdXQgSWYgdGhlIGJyZWFrcG9pbnQgaXMgXCIwcHggYW5kIGxhcmdlclwiLCBvdXRwdXRzIHRoZSBjb250ZW50IGFzLWlzLiBPdGhlcndpc2UsIG91dHB1dHMgdGhlIGNvbnRlbnQgd3JhcHBlZCBpbiBhIG1lZGlhIHF1ZXJ5LlxuQG1peGluIGJyZWFrcG9pbnQoJHZhbHVlKSB7XG4gICRzdHI6IGJyZWFrcG9pbnQoJHZhbHVlKTtcblxuICAvLyBJZiAkc3RyIGlzIHN0aWxsIGFuIGVtcHR5IHN0cmluZywgbm8gbWVkaWEgcXVlcnkgaXMgbmVlZGVkXG4gIEBpZiAkc3RyID09ICcnIHtcbiAgICBAY29udGVudDtcbiAgfVxuXG4gIC8vIE90aGVyd2lzZSwgd3JhcCB0aGUgY29udGVudCBpbiBhIG1lZGlhIHF1ZXJ5XG4gIEBlbHNlIHtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAjeyRzdHJ9IHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfVxufVxuXG4vLy8gQ29udmVycyB0aGUgYnJlYWtwb2ludHMgbWFwIHRvIGEgVVJMLWVuY29kZWQgc3RyaW5nLCBsaWtlIHRoaXM6IGBrZXkxPXZhbHVlMSZrZXkyPXZhbHVlMmAuIFRoZSB2YWx1ZSBpcyB0aGVuIGRyb3BwZWQgaW50byB0aGUgQ1NTIGZvciBhIHNwZWNpYWwgYDxtZXRhPmAgdGFnLCB3aGljaCBpcyByZWFkIGJ5IHRoZSBGb3VuZGF0aW9uIEphdmFTY3JpcHQuIFRoaXMgaXMgaG93IHdlIHRyYW5zZmVyIHZhbHVlcyBmcm9tIFNhc3MgdG8gSmF2YVNjcmlwdCwgc28gdGhleSBjYW4gYmUgZGVmaW5lZCBpbiBvbmUgcGxhY2UuXG4vLy8gQGFjY2VzcyBwcml2YXRlXG4vLy9cbi8vLyBAcGFyYW0ge01hcH0gJG1hcCAtIE1hcCB0byBjb252ZXJ0LlxuLy8vXG4vLy8gQHJldHVybnMge1N0cmluZ30gQSBzdHJpbmcgY29udGFpbmluZyB0aGUgbWFwJ3MgY29udGVudHMuXG5AZnVuY3Rpb24gLXpmLWJwLXNlcmlhbGl6ZSgkbWFwKSB7XG4gICRzdHI6ICcnO1xuICBAZWFjaCAka2V5LCAkdmFsdWUgaW4gJG1hcCB7XG4gICAgJHN0cjogJHN0ciArICRrZXkgKyAnPScgKyAtemYtYnAtdG8tZW0oJHZhbHVlKSArICcmJztcbiAgfVxuICAkc3RyOiBzdHItc2xpY2UoJHN0ciwgMSwgLTIpO1xuXG4gIEByZXR1cm4gJHN0cjtcbn1cblxuLy8vIEZpbmQgdGhlIG5leHQga2V5IGluIGEgbWFwLlxuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuLy8vXG4vLy8gQHBhcmFtIHtNYXB9ICRtYXAgLSBNYXAgdG8gdHJhdmVyc2UuXG4vLy8gQHBhcmFtIHtNaXhlZH0gJGtleSAtIEtleSB0byB1c2UgYXMgYSBzdGFydGluZyBwb2ludC5cbi8vL1xuLy8vIEByZXR1cm5zIHtNaXhlZH0gVGhlIHZhbHVlIGZvciB0aGUga2V5IGFmdGVyIGAka2V5YCwgaWYgYCRrZXlgIHdhcyBmb3VuZC4gSWYgYCRrZXlgIHdhcyBub3QgZm91bmQsIG9yIGAka2V5YCB3YXMgdGhlIGxhc3QgdmFsdWUgaW4gdGhlIG1hcCwgcmV0dXJucyBgbnVsbGAuXG5AZnVuY3Rpb24gLXpmLW1hcC1uZXh0KCRtYXAsICRrZXkpIHtcbiAgLy8gU3RvcmUgdGhlIHZhbHVlcyBvZiB0aGUgbWFwIGFzIGEgbGlzdCwgc28gd2UgY2FuIGFjY2VzcyB0aGVtIHdpdGggbnRoXG4gICR2YWx1ZXM6IG1hcC12YWx1ZXMoJG1hcCk7XG5cbiAgLy8gR2hldHRvIGZvciBsb29wXG4gICRpOiAxO1xuICAkZm91bmQ6IGZhbHNlO1xuICBAZWFjaCAkdmFsIGluIG1hcC1rZXlzKCRtYXApIHtcbiAgICBAaWYgJGZvdW5kID09IGZhbHNlIHtcbiAgICAgIEBpZiAoJGtleSA9PSAkdmFsKSB7XG4gICAgICAgICRmb3VuZDogdHJ1ZTtcbiAgICAgIH1cbiAgICAgICRpOiAkaSArIDE7XG4gICAgfVxuICB9XG5cbiAgLy8gSWYgdGhlIGtleSBkb2Vzbid0IGV4aXN0LCBvciBpdCdzIHRoZSBsYXN0IGtleSBpbiB0aGUgbWFwLCByZXR1cm4gbnVsbFxuICBAaWYgJGkgPiBsZW5ndGgoJG1hcCkge1xuICAgIEByZXR1cm4gbnVsbDtcbiAgfVxuICAvLyBPdGhlcndpc2UsIHJldHVybiB0aGUgdmFsdWVcbiAgQGVsc2Uge1xuICAgIEByZXR1cm4gbnRoKCR2YWx1ZXMsICRpKTtcbiAgfVxufVxuXG4vLy8gR2V0IGEgdmFsdWUgZm9yIGEgYnJlYWtwb2ludCBmcm9tIGEgcmVzcG9uc2l2ZSBjb25maWcgbWFwLiBJZiB0aGUgY29uZmlnIG1hcCBoYXMgdGhlIGtleSBgJHZhbHVlYCwgdGhlIGV4YWN0IGJyZWFrcG9pbnQgdmFsdWUgaXMgcmV0dXJuZWQuIElmIHRoZSBjb25maWcgbWFwIGRvZXMgKm5vdCogaGF2ZSB0aGUgYnJlYWtwb2ludCwgdGhlIHZhbHVlIG1hdGNoaW5nIHRoZSBuZXh0IGxvd2VzdCBicmVha3BvaW50IGluIHRoZSBjb25maWcgbWFwIGlzIHJldHVybmVkLlxuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuLy8vXG4vLy8gQHBhcmFtIHtNYXB9ICRtYXAgLSBJbnB1dCBjb25maWcgbWFwLlxuLy8vIEBwYXJhbSB7S2V5d29yZH0gJHZhbHVlIC0gQnJlYWtwb2ludCBuYW1lIHRvIHVzZS5cbi8vL1xuLy8vIEByZXR1cm4ge01peGVkfSBUaGUgY29ycmVzcG9uZGluZyBicmVha3BvaW50IHZhbHVlLlxuQGZ1bmN0aW9uIC16Zi1nZXQtYnAtdmFsKCRtYXAsICR2YWx1ZSkge1xuICAvLyBDaGVjayBpZiB0aGUgYnJlYWtwb2ludCBuYW1lIGV4aXN0cyBnbG9iYWxseVxuICBAaWYgbm90IG1hcC1oYXMta2V5KCRicmVha3BvaW50cywgJHZhbHVlKSB7XG4gICAgQHJldHVybiBudWxsO1xuICB9XG4gIC8vIENoZWNrIGlmIHRoZSBicmVha3BvaW50IG5hbWUgZXhpc3RzIGluIHRoZSBsb2NhbCBjb25maWcgbWFwXG4gIEBlbHNlIGlmIG1hcC1oYXMta2V5KCRtYXAsICR2YWx1ZSkge1xuICAgIC8vIElmIGl0IGRvZXMsIGp1c3QgcmV0dXJuIHRoZSB2YWx1ZVxuICAgIEByZXR1cm4gbWFwLWdldCgkbWFwLCAkdmFsdWUpO1xuICB9XG4gIC8vIE90aGVyd2lzZSwgZmluZCB0aGUgbmV4dCBsb3dlc3QgYnJlYWtwb2ludCBhbmQgcmV0dXJuIHRoYXQgdmFsdWVcbiAgQGVsc2Uge1xuICAgICRhbmNob3I6IG51bGw7XG4gICAgJGZvdW5kOiBmYWxzZTtcblxuICAgIEBlYWNoICRrZXksICR2YWwgaW4gJGJyZWFrcG9pbnRzIHtcbiAgICAgIEBpZiBub3QgJGZvdW5kIHtcbiAgICAgICAgQGlmIG1hcC1oYXMta2V5KCRtYXAsICRrZXkpIHtcbiAgICAgICAgICAkYW5jaG9yOiAka2V5O1xuICAgICAgICB9XG4gICAgICAgIEBpZiAka2V5ID09ICR2YWx1ZSB7XG4gICAgICAgICAgJGZvdW5kOiB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgQHJldHVybiBtYXAtZ2V0KCRtYXAsICRhbmNob3IpO1xuICB9XG59XG5cbi8vIExlZ2FjeSBicmVha3BvaW50IHZhcmlhYmxlc1xuLy8gVGhlc2Ugd2lsbCBiZSByZW1vdmVkIGluIDYuM1xuJHNtYWxsLXVwOiBudWxsO1xuJHNtYWxsLW9ubHk6IG51bGw7XG4kbWVkaXVtLXVwOiBudWxsO1xuJG1lZGl1bS1vbmx5OiBudWxsO1xuJGxhcmdlLXVwOiBudWxsO1xuJGxhcmdlLW9ubHk6IG51bGw7XG4keGxhcmdlLXVwOiBudWxsO1xuJHhsYXJnZS1vbmx5OiBudWxsO1xuJHh4bGFyZ2UtdXA6IG51bGw7XG4keHhsYXJnZS1vbmx5OiBudWxsO1xuXG5AaWYgbWFwLWhhcy1rZXkoJGJyZWFrcG9pbnRzLCBzbWFsbCkge1xuICAkc21hbGwtdXA6IHNjcmVlbjtcbiAgJHNtYWxsLW9ubHk6IHVucXVvdGUoJ3NjcmVlbiBhbmQgI3ticmVha3BvaW50KHNtYWxsIG9ubHkpfScpO1xufVxuXG5AaWYgbWFwLWhhcy1rZXkoJGJyZWFrcG9pbnRzLCBtZWRpdW0pIHtcbiAgJG1lZGl1bS11cDogdW5xdW90ZSgnc2NyZWVuIGFuZCAje2JyZWFrcG9pbnQobWVkaXVtKX0nKTtcbiAgJG1lZGl1bS1vbmx5OiB1bnF1b3RlKCdzY3JlZW4gYW5kICN7YnJlYWtwb2ludChtZWRpdW0gb25seSl9Jyk7XG59XG5cbkBpZiBtYXAtaGFzLWtleSgkYnJlYWtwb2ludHMsIGxhcmdlKSB7XG4gICRsYXJnZS11cDogdW5xdW90ZSgnc2NyZWVuIGFuZCAje2JyZWFrcG9pbnQobGFyZ2UpfScpO1xuICAkbGFyZ2Utb25seTogdW5xdW90ZSgnc2NyZWVuIGFuZCAje2JyZWFrcG9pbnQobGFyZ2Ugb25seSl9Jyk7XG59XG5cbkBpZiBtYXAtaGFzLWtleSgkYnJlYWtwb2ludHMsIHhsYXJnZSkge1xuICAkeGxhcmdlLXVwOiB1bnF1b3RlKCdzY3JlZW4gYW5kICN7YnJlYWtwb2ludCh4bGFyZ2UpfScpO1xuICAkeGxhcmdlLW9ubHk6IHVucXVvdGUoJ3NjcmVlbiBhbmQgI3ticmVha3BvaW50KHhsYXJnZSBvbmx5KX0nKTtcbn1cblxuQGlmIG1hcC1oYXMta2V5KCRicmVha3BvaW50cywgeHhsYXJnZSkge1xuICAkeHhsYXJnZS11cDogdW5xdW90ZSgnc2NyZWVuIGFuZCAje2JyZWFrcG9pbnQoeHhsYXJnZSl9Jyk7XG59XG4iLCIvLyBGb3VuZGF0aW9uIGZvciBTaXRlcyBieSBaVVJCXG4vLyBmb3VuZGF0aW9uLnp1cmIuY29tXG4vLyBMaWNlbnNlZCB1bmRlciBNSVQgT3BlbiBTb3VyY2VcblxuLy8vL1xuLy8vIEBncm91cCBmdW5jdGlvbnNcbi8vLy9cblxuLy8vIENyZWF0ZXMgYSBDU1MgdHJpYW5nbGUsIHdoaWNoIGNhbiBiZSB1c2VkIGZvciBkcm9wZG93biBhcnJvd3MsIGRyb3Bkb3duIHBpcHMsIGFuZCBtb3JlLiBVc2UgdGhpcyBtaXhpbiBpbnNpZGUgYSBgJjo6YmVmb3JlYCBvciBgJjo6YWZ0ZXJgIHNlbGVjdG9yLCB0byBhdHRhY2ggdGhlIHRyaWFuZ2xlIHRvIGFuIGV4aXN0aW5nIGVsZW1lbnQuXG4vLy9cbi8vLyBAcGFyYW0ge051bWJlcn0gJHRyaWFuZ2xlLXNpemUgLSBXaWR0aCBvZiB0aGUgdHJpYW5nbGUuXG4vLy8gQHBhcmFtIHtDb2xvcn0gJHRyaWFuZ2xlLWNvbG9yIC0gQ29sb3Igb2YgdGhlIHRyaWFuZ2xlLlxuLy8vIEBwYXJhbSB7S2V5d29yZH0gJHRyaWFuZ2xlLWRpcmVjdGlvbiAtIERpcmVjdGlvbiB0aGUgdHJpYW5nbGUgcG9pbnRzLiBDYW4gYmUgYHVwYCwgYHJpZ2h0YCwgYGRvd25gLCBvciBgbGVmdGAuXG5AbWl4aW4gY3NzLXRyaWFuZ2xlKFxuICAkdHJpYW5nbGUtc2l6ZSxcbiAgJHRyaWFuZ2xlLWNvbG9yLFxuICAkdHJpYW5nbGUtZGlyZWN0aW9uXG4pIHtcbiAgY29udGVudDogJyc7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMDtcbiAgaGVpZ2h0OiAwO1xuICBib3JkZXI6IGluc2V0ICR0cmlhbmdsZS1zaXplO1xuXG4gIEBpZiAoJHRyaWFuZ2xlLWRpcmVjdGlvbiA9PSBkb3duKSB7XG4gICAgYm9yZGVyLWNvbG9yOiAkdHJpYW5nbGUtY29sb3IgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyLXRvcC1zdHlsZTogc29saWQ7XG4gICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMDtcbiAgfVxuICBAaWYgKCR0cmlhbmdsZS1kaXJlY3Rpb24gPT0gdXApIHtcbiAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50ICR0cmlhbmdsZS1jb2xvcjtcbiAgICBib3JkZXItYm90dG9tLXN0eWxlOiBzb2xpZDtcbiAgICBib3JkZXItdG9wLXdpZHRoOiAwO1xuICB9XG4gIEBpZiAoJHRyaWFuZ2xlLWRpcmVjdGlvbiA9PSByaWdodCkge1xuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgJHRyaWFuZ2xlLWNvbG9yO1xuICAgIGJvcmRlci1sZWZ0LXN0eWxlOiBzb2xpZDtcbiAgICBib3JkZXItcmlnaHQtd2lkdGg6IDA7XG4gIH1cbiAgQGlmICgkdHJpYW5nbGUtZGlyZWN0aW9uID09IGxlZnQpIHtcbiAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50ICR0cmlhbmdsZS1jb2xvciB0cmFuc3BhcmVudCB0cmFuc3BhcmVudDtcbiAgICBib3JkZXItcmlnaHQtc3R5bGU6IHNvbGlkO1xuICAgIGJvcmRlci1sZWZ0LXdpZHRoOiAwO1xuICB9XG59XG5cbi8vLyBDcmVhdGVzIGEgbWVudSBpY29uIHdpdGggYSBzZXQgd2lkdGgsIGhlaWdodCwgbnVtYmVyIG9mIGJhcnMsIGFuZCBjb2xvcnMuIFRoZSBtaXhpbiB1c2VzIHRoZSBoZWlnaHQgb2YgdGhlIGljb24gYW5kIHRoZSB3ZWlnaHQgb2YgdGhlIGJhcnMgdG8gZGV0ZXJtaW5lIHNwYWNpbmcuIDxkaXYgY2xhc3M9XCJkb2NzLWV4YW1wbGUtYnVyZ2VyXCI+PC9kaXY+XG4vLy9cbi8vLyBAcGFyYW0ge0NvbG9yfSAkY29sb3IgWyRibGFja10gLSBDb2xvciB0byB1c2UgZm9yIHRoZSBpY29uLlxuLy8vIEBwYXJhbSB7Q29sb3J9ICRjb2xvci1ob3ZlciBbJGRhcmstZ3JheV0gLSBDb2xvciB0byB1c2Ugd2hlbiB0aGUgaWNvbiBpcyBob3ZlcmVkIG92ZXIuXG4vLy8gQHBhcmFtIHtOdW1iZXJ9ICR3aWR0aCBbMjBweF0gLSBXaWR0aCBvZiB0aGUgaWNvbi5cbi8vLyBAcGFyYW0ge051bWJlcn0gJGhlaWdodCBbMTZweF0gLSBIZWlnaHQgb2YgdGhlIGljb24uXG4vLy8gQHBhcmFtIHtOdW1iZXJ9ICR3ZWlnaHQgWzJweF0gLSBIZWlnaHQgb2YgaW5kaXZpZHVhbCBiYXJzIGluIHRoZSBpY29uLlxuLy8vIEBwYXJhbSB7TnVtYmVyfSAkYmFycyBbM10gLSBOdW1iZXIgb2YgYmFycyBpbiB0aGUgaWNvbi5cbkBtaXhpbiBoYW1idXJnZXIoXG4gICRjb2xvcjogJGJsYWNrLFxuICAkY29sb3ItaG92ZXI6ICRkYXJrLWdyYXksXG4gICR3aWR0aDogMjBweCxcbiAgJGhlaWdodDogMTZweCxcbiAgJHdlaWdodDogMnB4LFxuICAkYmFyczogM1xuKSB7XG4gIC8vIGJveC1zaGFkb3cgQ1NTIG91dHB1dFxuICAkc2hhZG93OiAoKTtcbiAgJGhvdmVyLXNoYWRvdzogKCk7XG5cbiAgLy8gU3BhY2luZyBiZXR3ZWVuIGJhcnMgaXMgY2FsY3VsYXRlZCBiYXNlZCBvbiB0aGUgdG90YWwgaGVpZ2h0IG9mIHRoZSBpY29uIGFuZCB0aGUgd2VpZ2h0IG9mIGVhY2ggYmFyXG4gICRzcGFjaW5nOiBmbG9vcigoJGhlaWdodCAtICgkd2VpZ2h0ICogJGJhcnMpKSAvICgkYmFycyAtIDEpKTtcblxuICAvLyBJY29uIGNvbnRhaW5lclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB3aWR0aDogJHdpZHRoO1xuICBoZWlnaHQ6ICRoZWlnaHQ7XG5cbiAgLy8gSWNvbiBiYXJzXG4gICY6OmFmdGVyIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAkd2VpZ2h0O1xuICAgIGJhY2tncm91bmQ6ICRjb2xvcjtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcblxuICAgIEBmb3IgJGkgZnJvbSAyIHRocm91Z2ggJGJhcnMge1xuICAgICAgJG9mZnNldDogKCR3ZWlnaHQgKyAkc3BhY2luZykgKiAoJGkgLSAxKTtcbiAgICAgICRzaGFkb3c6IGFwcGVuZCgkc2hhZG93LCAwICRvZmZzZXQgMCAkY29sb3IsIGNvbW1hKTtcbiAgICB9XG5cbiAgICBib3gtc2hhZG93OiAkc2hhZG93O1xuICB9XG5cbiAgLy8gSG92ZXIgc3RhdGVcbiAgQGlmICRjb2xvci1ob3ZlciB7XG4gICAgLy8gR2VuZXJhdGUgQ1NTXG4gICAgQGZvciAkaSBmcm9tIDIgdGhyb3VnaCAkYmFycyB7XG4gICAgICAkb2Zmc2V0OiAoJHdlaWdodCArICRzcGFjaW5nKSAqICgkaSAtIDEpO1xuICAgICAgJGhvdmVyLXNoYWRvdzogYXBwZW5kKCRob3Zlci1zaGFkb3csIDAgJG9mZnNldCAwICRjb2xvci1ob3ZlciwgY29tbWEpO1xuICAgIH1cblxuICAgICY6aG92ZXI6OmFmdGVyIHtcbiAgICAgIGJhY2tncm91bmQ6ICRjb2xvci1ob3ZlcjtcbiAgICAgIGJveC1zaGFkb3c6ICRob3Zlci1zaGFkb3c7XG4gICAgfVxuICB9XG59XG5cbi8vLyBBZGRzIGEgZG93bndhcmQtZmFjaW5nIHRyaWFuZ2xlIGFzIGEgYmFja2dyb3VuZCBpbWFnZSB0byBhbiBlbGVtZW50LiBUaGUgaW1hZ2UgaXMgZm9ybWF0dGVkIGFzIGFuIFNWRywgbWFraW5nIGl0IGVhc3kgdG8gY2hhbmdlIHRoZSBjb2xvci4gQmVjYXVzZSBJbnRlcm5ldCBFeHBsb3JlciBkb2Vzbid0IHN1cHBvcnQgZW5jb2RlZCBTVkdzIGFzIGJhY2tncm91bmQgaW1hZ2VzLCBhIFBORyBmYWxsYmFjayBpcyBhbHNvIGluY2x1ZGVkLlxuLy8vIFRoZXJlIGFyZSB0d28gUE5HIGZhbGxiYWNrczogYSBibGFjayB0cmlhbmdsZSBhbmQgYSB3aGl0ZSB0cmlhbmdsZS4gVGhlIG9uZSB1c2VkIGRlcGVuZHMgb24gdGhlIGxpZ2h0bmVzcyBvZiB0aGUgaW5wdXQgY29sb3IuXG4vLy9cbi8vLyBAcGFyYW0ge0NvbG9yfSAkY29sb3IgWyRibGFja10gLSBDb2xvciB0byB1c2UgZm9yIHRoZSB0cmlhbmdsZS5cbkBtaXhpbiBiYWNrZ3JvdW5kLXRyaWFuZ2xlKCRjb2xvcjogJGJsYWNrKSB7XG4gICRyZ2I6ICdyZ2IlMjgje3JlZCgkY29sb3IpfSwgI3tncmVlbigkY29sb3IpfSwgI3tibHVlKCRjb2xvcil9JTI5JztcblxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2RhdGE6aW1hZ2Uvc3ZnK3htbDt1dGY4LDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjMyXCIgaGVpZ2h0PVwiMjRcIiB2aWV3Qm94PVwiMCAwIDMyIDI0XCI+PHBvbHlnb24gcG9pbnRzPVwiMCwwIDMyLDAgMTYsMjRcIiBzdHlsZT1cImZpbGw6ICN7JHJnYn1cIj48L3BvbHlnb24+PC9zdmc+Jyk7XG5cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDowXFwwKSB7XG4gICAgQGlmIGxpZ2h0bmVzcygkY29sb3IpIDwgNjAlIHtcbiAgICAgIC8vIFdoaXRlIHRyaWFuZ2xlXG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2RhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQ0FBQUFBWUNBWUFBQUNiVS84MEFBQUFHWFJGV0hSVGIyWjBkMkZ5WlFCQlpHOWlaU0JKYldGblpWSmxZV1I1Y2NsbFBBQUFBSXBKUkVGVWVOckVrY2tOZ0RBTUJCZlJrRXQwT2JSQkJkc0dYVURnbVFmSzRYaEgybThjelFBQXkyN1IzdHN3NFFmZTJ4OHVPTzZvWUxiNkdsT29yM0dGK3N3VVJBT21VSitSd3RFSnM5V3ZUR0VZeEJYcUkxTVFBWmhDZlVRS1J6RE1WaitUd3JBSVY2anZTVUVrWUFyMUxTa2N5VEJiL1YrS1lmWDd4QWV1c3Ezc0xEdEdIM2tFR0FDUFdJZmxOWmZoUlFBQUFBQkpSVTVFcmtKZ2dnPT0nKTtcbiAgICB9XG4gICAgQGVsc2Uge1xuICAgICAgLy8gQmxhY2sgdHJpYW5nbGVcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFDQUFBQUFZQ0FZQUFBQ2JVLzgwQUFBQUdYUkZXSFJUYjJaMGQyRnlaUUJCWkc5aVpTQkpiV0ZuWlZKbFlXUjVjY2xsUEFBQUFNQkpSRUZVZU5yRWxsc09oQ0FNUlZzekM5SWx6VTdLQ21WSFRKc29NV1lNVXRweXY5QmdidVhRQjVaU2RnQllZWTR5Y2dCaXZrOEtZRnNRTWZNaVRUQlA0bzNuVXpDS3pPYWJMSmJMeTIvZzMxZXZHa0FnaW5SNC9aZWdLSDVxWDNiSkNzY0EzdDB4M2tnTzV0UUZ5aGhGZjUweFJxRkxieU1VTkpRemd5akdTL3dnQ3B2S3FrUkJwdVdyRTRWOWQrMUU0ZFBVWHFJZzEwN1NRT0UvMkRSUXhNd1REeWdJSW5WREVUOVQzbENvai82ai9WQ21HalpPbDJsS3BaOEFBd0RRUDd6SWltREdGUUFBQUFCSlJVNUVya0pnZ2c9PScpO1xuICAgIH1cbiAgfVxufVxuXG4vLy8gQXBwbGllcyB0aGUgbWljcm8gY2xlYXJmaXggaGFjayBwb3B1bGFyaXplZCBieSBOaWNvbGFzIEdhbGxhZ2hlci4gSW5jbHVkZSB0aGlzIG1peGluIG9uIGEgY29udGFpbmVyIGlmIGl0cyBjaGlsZHJlbiBhcmUgYWxsIGZsb2F0ZWQsIHRvIGdpdmUgdGhlIGNvbnRhaW5lciBhIHByb3BlciBoZWlnaHQuXG4vLy8gVGhlIGNsZWFyZml4IGlzIGF1Z21lbnRlZCB3aXRoIHNwZWNpZmljIHN0eWxlcyB0byBwcmV2ZW50IGJvcmRlcnMgaW4gZmxleGJveCBlbnZpcm9ubWVudHNcbi8vLyBAbGluayBodHRwOi8vbmljb2xhc2dhbGxhZ2hlci5jb20vbWljcm8tY2xlYXJmaXgtaGFjay8gTWljcm8gQ2xlYXJmaXggSGFja1xuLy8vIEBsaW5rIGh0dHA6Ly9kYW5pc2FkZXNpZ25lci5jb20vYmxvZy9mbGV4Ym94LWNsZWFyLWZpeC1wc2V1ZG8tZWxlbWVudHMvIEZsZXhib3ggZml4XG5AbWl4aW4gY2xlYXJmaXgge1xuICAmOjpiZWZvcmUsXG4gICY6OmFmdGVyIHtcbiAgICBjb250ZW50OiAnICc7XG4gICAgZGlzcGxheTogdGFibGU7XG4gICAgQGlmICRnbG9iYWwtZmxleGJveCB7XG4gICAgICBmbGV4LWJhc2lzOiAwO1xuICAgICAgb3JkZXI6IDE7XG4gICAgfVxuICB9XG5cbiAgJjo6YWZ0ZXIge1xuICAgIGNsZWFyOiBib3RoO1xuICB9XG59XG5cbi8vLyBBZGRzIENTUyBmb3IgYSBcInF1YW50aXR5IHF1ZXJ5XCIgc2VsZWN0b3IgdGhhdCBhdXRvbWF0aWNhbGx5IHNpemVzIGVsZW1lbnRzIGJhc2VkIG9uIGhvdyBtYW55IHRoZXJlIGFyZSBpbnNpZGUgYSBjb250YWluZXIuXG4vLy8gQGxpbmsgaHR0cDovL2FsaXN0YXBhcnQuY29tL2FydGljbGUvcXVhbnRpdHktcXVlcmllcy1mb3ItY3NzIFF1YW50aXR5IFF1ZXJpZXMgZm9yIENTU1xuLy8vXG4vLy8gQHBhcmFtIHtOdW1iZXJ9ICRtYXggLSBNYXhpbXVtIG51bWJlciBvZiBpdGVtcyB0byBkZXRlY3QuIFRoZSBoaWdoZXIgdGhpcyBudW1iZXIgaXMsIHRoZSBtb3JlIENTUyB0aGF0J3MgcmVxdWlyZWQgdG8gY292ZXIgZWFjaCBudW1iZXIgb2YgaXRlbXMuXG4vLy8gQHBhcmFtIHtLZXl3b3JkfSAkZWxlbSBbbGldIC0gVGFnIHRvIHVzZSBmb3Igc2libGluZyBzZWxlY3RvcnMuXG5AbWl4aW4gYXV0by13aWR0aCgkbWF4LCAkZWxlbTogbGkpIHtcbiAgQGZvciAkaSBmcm9tIDIgdGhyb3VnaCAkbWF4IHtcbiAgICAmOm50aC1sYXN0LWNoaWxkKCN7JGl9KTpmaXJzdC1jaGlsZCxcbiAgICAmOm50aC1sYXN0LWNoaWxkKCN7JGl9KTpmaXJzdC1jaGlsZCB+ICN7JGVsZW19IHtcbiAgICAgIHdpZHRoOiBwZXJjZW50YWdlKDEgLyAkaSk7XG4gICAgfVxuICB9XG59XG5cbi8vLyBSZW1vdmVzIHRoZSBmb2N1cyByaW5nIGFyb3VuZCBhbiBlbGVtZW50IHdoZW4gYSBtb3VzZSBpbnB1dCBpcyBkZXRlY3RlZC5cbkBtaXhpbiBkaXNhYmxlLW1vdXNlLW91dGxpbmUge1xuICBbZGF0YS13aGF0aW5wdXQ9J21vdXNlJ10gJiB7XG4gICAgb3V0bGluZTogMDtcbiAgfVxufVxuXG4vLy8gTWFrZXMgYW4gZWxlbWVudCB2aXN1YWxseSBoaWRkZW4sIGJ1dCBzdGlsbCBhY2Nlc3NpYmxlIHRvIGtleWJvYXJkcyBhbmQgYXNzaXN0aXZlIGRldmljZXMuXG4vLy8gQGxpbmsgaHR0cDovL3Nub29rLmNhL2FyY2hpdmVzL2h0bWxfYW5kX2Nzcy9oaWRpbmctY29udGVudC1mb3ItYWNjZXNzaWJpbGl0eSBIaWRpbmcgQ29udGVudCBmb3IgQWNjZXNzaWJpbGl0eVxuQG1peGluIGVsZW1lbnQtaW52aXNpYmxlIHtcbiAgcG9zaXRpb246IGFic29sdXRlICFpbXBvcnRhbnQ7XG4gIHdpZHRoOiAxcHg7XG4gIGhlaWdodDogMXB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBjbGlwOiByZWN0KDAsIDAsIDAsIDApO1xufVxuXG4vLy8gUmV2ZXJzZXMgdGhlIENTUyBvdXRwdXQgY3JlYXRlZCBieSB0aGUgYGVsZW1lbnQtaW52aXNpYmxlKClgIG1peGluLlxuQG1peGluIGVsZW1lbnQtaW52aXNpYmxlLW9mZiB7XG4gIHBvc2l0aW9uOiBzdGF0aWMgIWltcG9ydGFudDtcbiAgaGVpZ2h0OiBhdXRvO1xuICB3aWR0aDogYXV0bztcbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIGNsaXA6IGF1dG87XG59XG5cbi8vLyBWZXJ0aWNhbGx5IGNlbnRlcnMgdGhlIGVsZW1lbnQgaW5zaWRlIG9mIGl0cyBmaXJzdCBub24tc3RhdGljIHBhcmVudCxcbi8vLyBAbGluayBodHRwOi8vd3d3LnNpdGVwb2ludC5jb20vY2VudGVyaW5nLXdpdGgtc2Fzcy8gQ2VudGVyaW5nIFdpdGggU2Fzc1xuQG1peGluIHZlcnRpY2FsLWNlbnRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbn1cblxuLy8vIEhvcml6b250YWxseSBjZW50ZXJzIHRoZSBlbGVtZW50IGluc2lkZSBvZiBpdHMgZmlyc3Qgbm9uLXN0YXRpYyBwYXJlbnQsXG4vLy8gQGxpbmsgaHR0cDovL3d3dy5zaXRlcG9pbnQuY29tL2NlbnRlcmluZy13aXRoLXNhc3MvIENlbnRlcmluZyBXaXRoIFNhc3NcbkBtaXhpbiBob3Jpem9udGFsLWNlbnRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG59XG5cbi8vLyBBYnNvbHV0ZWx5IGNlbnRlcnMgdGhlIGVsZW1lbnQgaW5zaWRlIG9mIGl0cyBmaXJzdCBub24tc3RhdGljIHBhcmVudCxcbi8vLyBAbGluayBodHRwOi8vd3d3LnNpdGVwb2ludC5jb20vY2VudGVyaW5nLXdpdGgtc2Fzcy8gQ2VudGVyaW5nIFdpdGggU2Fzc1xuQG1peGluIGFic29sdXRlLWNlbnRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG59XG5cbi8vLyBJdGVyYXRlcyB0aHJvdWdoIGJyZWFrcG9pbnRzIGRlZmluZWQgaW4gYCRicmVha3BvaW50LWNsYXNzZXNgIGFuZCBwcmludHMgdGhlIENTUyBpbnNpZGUgdGhlIG1peGluIGF0IGVhY2ggYnJlYWtwb2ludCdzIG1lZGlhIHF1ZXJ5LiBVc2UgdGhpcyB3aXRoIHRoZSBncmlkLCBvciBhbnkgb3RoZXIgY29tcG9uZW50IHRoYXQgaGFzIHJlc3BvbnNpdmUgY2xhc3Nlcy5cbi8vL1xuLy8vIEBwYXJhbSB7Qm9vbGVhbn0gJHNtYWxsIFt0cnVlXSAtIElmIGBmYWxzZWAsIHRoZSBtaXhpbiB3aWxsIHNraXAgdGhlIGBzbWFsbGAgYnJlYWtwb2ludC4gVXNlIHRoaXMgd2l0aCBjb21wb25lbnRzIHRoYXQgZG9uJ3QgcHJlZml4IGNsYXNzZXMgd2l0aCBgc21hbGwtYCwgb25seSBgbWVkaXVtLWAgYW5kIHVwLlxuQG1peGluIC16Zi1lYWNoLWJyZWFrcG9pbnQoJHNtYWxsOiB0cnVlKSB7XG4gICRtYXA6ICRicmVha3BvaW50LWNsYXNzZXM7XG5cbiAgQGlmIG5vdCAkc21hbGwge1xuICAgICRtYXA6IG1hcC1yZW1vdmUoJG1hcCwgJC16Zi16ZXJvLWJyZWFrcG9pbnQpO1xuICB9XG5cbiAgQGVhY2ggJHNpemUgaW4gJG1hcCB7XG4gICAgJC16Zi1zaXplOiAkc2l6ZSAhZ2xvYmFsO1xuXG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludCgkc2l6ZSkge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9XG59XG4iLCIvLyBGb3VuZGF0aW9uIGZvciBTaXRlcyBieSBaVVJCXG4vLyBmb3VuZGF0aW9uLnp1cmIuY29tXG4vLyBMaWNlbnNlZCB1bmRlciBNSVQgT3BlbiBTb3VyY2VcblxuLy8gc2Nzcy1saW50OmRpc2FibGUgQ29sb3JWYXJpYWJsZSwgUXVhbGlmeWluZ0VsZW1lbnQsIFZlbmRvclByZWZpeFxuXG4vLy8vXG4vLy8gQGdyb3VwIGdsb2JhbFxuLy8vL1xuXG4vLy8gRm9udCBzaXplIGF0dHJpYnV0ZSBhcHBsaWVkIHRvIGA8aHRtbD5gIGFuZCBgPGJvZHk+YC4gV2UgdXNlIDEwMCUgYnkgZGVmYXVsdCBzbyB0aGUgdmFsdWUgaXMgaW5oZXJpdGVkIGZyb20gdGhlIHVzZXIncyBicm93c2VyIHNldHRpbmdzLlxuLy8vIEB0eXBlIE51bWJlclxuJGdsb2JhbC1mb250LXNpemU6IDEwMCUgIWRlZmF1bHQ7XG5cbi8vLyBHbG9iYWwgd2lkdGggb2YgeW91ciBzaXRlLiBVc2VkIGJ5IHRoZSBncmlkIHRvIGRldGVybWluZSByb3cgd2lkdGguXG4vLy8gQHR5cGUgTnVtYmVyXG4kZ2xvYmFsLXdpZHRoOiAxMDAlICFkZWZhdWx0O1xuXG4vLy8gRGVmYXVsdCBsaW5lIGhlaWdodCBmb3IgYWxsIHR5cGUuIGAkZ2xvYmFsLWxpbmVoZWlnaHRgIGlzIDI0cHggd2hpbGUgYCRnbG9iYWwtZm9udC1zaXplYCBpcyAxNnB4XG4vLy8gQHR5cGUgTnVtYmVyXG4kZ2xvYmFsLWxpbmVoZWlnaHQ6IDEuNSAhZGVmYXVsdDtcblxuLy8vIFByaW1hcnkgY29sb3IgZm9yIGludGVyYWN0aXZlIGNvbXBvbmVudHMgbGlrZSBsaW5rcyBhbmQgYnV0dG9ucy5cbi8vLyBAdHlwZSBDb2xvclxuJHByaW1hcnktY29sb3I6ICMyMTk5ZTggIWRlZmF1bHQ7XG5cbi8vLyBTZWNvbmRhcnkgY29sb3IsIHVzZWQgd2l0aCBjb21wb25lbnRzIHRoYXQgc3VwcG9ydCB0aGUgYC5zZWNvbmRhcnlgIGNsYXNzLlxuLy8vIEB0eXBlIENvbG9yXG4kc2Vjb25kYXJ5LWNvbG9yOiAjNzc3ICFkZWZhdWx0O1xuXG4vLy8gQ29sb3IgdG8gaW5kaWNhdGUgYSBwb3NpdGl2ZSBzdGF0dXMgb3IgYWN0aW9uLCB1c2VkIHdpdGggdGhlIGAuc3VjY2Vzc2AgY2xhc3MuXG4vLy8gQHR5cGUgQ29sb3JcbiRzdWNjZXNzLWNvbG9yOiAjM2FkYjc2ICFkZWZhdWx0O1xuXG4vLy8gQ29sb3IgdG8gaW5kaWNhdGUgYSBjYXV0aW9uIHN0YXR1cyBvciBhY3Rpb24sIHVzZWQgd2l0aCB0aGUgYC53YXJuaW5nYCBjbGFzcy5cbi8vLyBAdHlwZSBDb2xvclxuJHdhcm5pbmctY29sb3I6ICNmZmFlMDAgIWRlZmF1bHQ7XG5cbi8vLyBDb2xvciB0byBpbmRpY2F0ZSBhIG5lZ2F0aXZlIHN0YXR1cyBvciBhY3Rpb24sIHVzZWQgd2l0aCB0aGUgYC5hbGVydGAgY2xhc3MuXG4vLy8gQHR5cGUgQ29sb3JcbiRhbGVydC1jb2xvcjogI2VjNTg0MCAhZGVmYXVsdDtcblxuLy8vIENvbG9yIHVzZWQgZm9yIGxpZ2h0IGdyYXkgVUkgaXRlbXMuXG4vLy8gQHR5cGUgQ29sb3JcbiRsaWdodC1ncmF5OiAjZTZlNmU2ICFkZWZhdWx0O1xuXG4vLy8gQ29sb3IgdXNlZCBmb3IgbWVkaXVtIGdyYXkgVUkgaXRlbXMuXG4vLy8gQHR5cGUgQ29sb3JcbiRtZWRpdW0tZ3JheTogI2NhY2FjYSAhZGVmYXVsdDtcblxuLy8vIENvbG9yIHVzZWQgZm9yIGRhcmsgZ3JheSBVSSBpdGVtcy5cbi8vLyBAdHlwZSBDb2xvclxuJGRhcmstZ3JheTogIzhhOGE4YSAhZGVmYXVsdDtcblxuLy8vIENvbG9yIHVzZWQgZm9yIGJsYWNrIHVpIGl0ZW1zLlxuLy8vIEB0eXBlIENvbG9yXG4kYmxhY2s6ICMwYTBhMGEgIWRlZmF1bHQ7XG5cbi8vLyBDb2xvciB1c2VkIGZvciB3aGl0ZSB1aSBpdGVtcy5cbi8vLyBAdHlwZSBDb2xvclxuJHdoaXRlOiAjZmVmZWZlICFkZWZhdWx0O1xuXG4vLy8gQmFja2dyb3VuZCBjb2xvciBvZiB0aGUgYm9keS5cbi8vLyBAdHlwZSBDb2xvclxuJGJvZHktYmFja2dyb3VuZDogJHdoaXRlICFkZWZhdWx0O1xuXG4vLy8gVGV4dCBjb2xvciBvZiB0aGUgYm9keS5cbi8vLyBAdHlwZSBDb2xvclxuJGJvZHktZm9udC1jb2xvcjogJGJsYWNrICFkZWZhdWx0O1xuXG4vLy8gRm9udCBzdGFjayBvZiB0aGUgYm9keS5cbi8vLyBAdHlwZSBMaXN0XG4kYm9keS1mb250LWZhbWlseTogJ0hlbHZldGljYSBOZXVlJywgSGVsdmV0aWNhLCBSb2JvdG8sIEFyaWFsLCBzYW5zLXNlcmlmICFkZWZhdWx0O1xuXG4vLy8gU2V0IHRvIGB0cnVlYCB0byBlbmFibGUgYW50aWFsaWFzZWQgdHlwZSwgdXNpbmcgdGhlIGAtd2Via2l0LWZvbnQtc21vb3RoaW5nYCBhbmQgYC1tb3otb3N4LWZvbnQtc21vb3RoaW5nYCBDU1MgcHJvcGVydGllcy5cbi8vLyBAdHlwZSBCb29sZWFuXG4kYm9keS1hbnRpYWxpYXNlZDogdHJ1ZSAhZGVmYXVsdDtcblxuLy8vIEdsb2JhbCB2YWx1ZSB1c2VkIGZvciBtYXJnaW4gb24gY29tcG9uZW50cy5cbi8vLyBAdHlwZSBOdW1iZXJcbiRnbG9iYWwtbWFyZ2luOiAxcmVtICFkZWZhdWx0O1xuXG4vLy8gR2xvYmFsIHZhbHVlIHVzZWQgZm9yIHBhZGRpbmcgb24gY29tcG9uZW50cy5cbi8vLyBAdHlwZSBOdW1iZXJcbiRnbG9iYWwtcGFkZGluZzogMXJlbSAhZGVmYXVsdDtcblxuLy8vIEdsb2JhbCBmb250IHdlaWdodCB1c2VkIGZvciBub3JtYWwgdHlwZS5cbi8vLyBAdHlwZSBLZXl3b3JkIHwgTnVtYmVyXG4kZ2xvYmFsLXdlaWdodC1ub3JtYWw6IG5vcm1hbCAhZGVmYXVsdDtcblxuLy8vIEdsb2JhbCBmb250IHdlaWdodCB1c2VkIGZvciBib2xkIHR5cGUuXG4vLy8gQHR5cGUgS2V5d29yZCB8IE51bWJlclxuJGdsb2JhbC13ZWlnaHQtYm9sZDogYm9sZCAhZGVmYXVsdDtcblxuLy8vIEdsb2JhbCB2YWx1ZSB1c2VkIGZvciBhbGwgZWxlbWVudHMgdGhhdCBoYXZlIGEgYm9yZGVyIHJhZGl1cy5cbi8vLyBAdHlwZSBOdW1iZXJcbiRnbG9iYWwtcmFkaXVzOiAwICFkZWZhdWx0O1xuXG4vLy8gU2V0cyB0aGUgdGV4dCBkaXJlY3Rpb24gb2YgdGhlIENTUy4gQ2FuIGJlIGVpdGhlciBgbHRyYCBvciBgcnRsYC5cbiRnbG9iYWwtdGV4dC1kaXJlY3Rpb246IGx0ciAhZGVmYXVsdDtcblxuLy8gSW50ZXJuYWwgdmFyaWFibGVzIHVzZWQgZm9yIHRleHQgZGlyZWN0aW9uXG4kZ2xvYmFsLWxlZnQ6IGlmKCRnbG9iYWwtdGV4dC1kaXJlY3Rpb24gPT0gcnRsLCByaWdodCwgbGVmdCk7XG4kZ2xvYmFsLXJpZ2h0OiBpZigkZ2xvYmFsLXRleHQtZGlyZWN0aW9uID09IHJ0bCwgbGVmdCwgcmlnaHQpO1xuXG4vLyBJbnRlcm5hbCBtYXAgdXNlZCB0byBpdGVyYXRlIHRocm91Z2ggY29sb3JzLCB0byBnZW5lcmF0ZSBDU1MgY2xhc3NlcyB3aXRoIGxlc3MgY29kZVxuJGZvdW5kYXRpb24tY29sb3JzOiAoXG4gICAgICAgIHByaW1hcnk6ICRwcmltYXJ5LWNvbG9yLFxuICAgICAgICBzZWNvbmRhcnk6ICRzZWNvbmRhcnktY29sb3IsXG4gICAgICAgIHN1Y2Nlc3M6ICRzdWNjZXNzLWNvbG9yLFxuICAgICAgICBhbGVydDogJGFsZXJ0LWNvbG9yLFxuICAgICAgICB3YXJuaW5nOiAkd2FybmluZy1jb2xvcixcbikgIWRlZmF1bHQ7XG5cbkBtaXhpbiBmb3VuZGF0aW9uLWdsb2JhbC1zdHlsZXMge1xuICBAaW5jbHVkZSAtemYtbm9ybWFsaXplO1xuXG4gIC8vIFRoZXNlIHN0eWxlcyBhcmUgYXBwbGllZCB0byBhIDxtZXRhPiB0YWcsIHdoaWNoIGlzIHJlYWQgYnkgdGhlIEZvdW5kYXRpb24gSmF2YVNjcmlwdFxuICAuZm91bmRhdGlvbi1tcSB7XG4gICAgZm9udC1mYW1pbHk6ICcjey16Zi1icC1zZXJpYWxpemUoJGJyZWFrcG9pbnRzKX0nO1xuICB9XG5cbiAgaHRtbCB7XG4gICAgZm9udC1zaXplOiAkZ2xvYmFsLWZvbnQtc2l6ZTtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIGhlaWdodDogMTAwJTtcbiAgfVxuXG4gIC8vIFNldCBib3gtc2l6aW5nIGdsb2JhbGx5IHRvIGhhbmRsZSBwYWRkaW5nIGFuZCBib3JkZXIgd2lkdGhzXG4gICosXG4gICo6YmVmb3JlLFxuICAqOmFmdGVyIHtcbiAgICBib3gtc2l6aW5nOiBpbmhlcml0O1xuICB9XG5cbiAgLy8gRGVmYXVsdCBib2R5IHN0eWxlc1xuICBib2R5IHtcbiAgICBwYWRkaW5nOiAwO1xuICAgIG1hcmdpbjogMDtcbiAgICBmb250LWZhbWlseTogJGJvZHktZm9udC1mYW1pbHk7XG4gICAgZm9udC13ZWlnaHQ6ICRnbG9iYWwtd2VpZ2h0LW5vcm1hbDtcbiAgICBsaW5lLWhlaWdodDogJGdsb2JhbC1saW5laGVpZ2h0O1xuICAgIGNvbG9yOiAkYm9keS1mb250LWNvbG9yO1xuICAgIGJhY2tncm91bmQ6ICRib2R5LWJhY2tncm91bmQ7XG4gICAgb3ZlcmZsb3cteDogaGlkZGVuO1xuICAgIGhlaWdodDogMTAwJTtcblxuICAgIEBpZiAoJGJvZHktYW50aWFsaWFzZWQpIHtcbiAgICAgIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICAgICAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcbiAgICB9XG4gIH1cblxuICBpbWcge1xuICAgIC8vIEdyaWQgZGVmYXVsdHMgdG8gZ2V0IGltYWdlcyBhbmQgZW1iZWRzIHRvIHdvcmsgcHJvcGVybHlcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIC1tcy1pbnRlcnBvbGF0aW9uLW1vZGU6IGJpY3ViaWM7XG5cbiAgICAvLyBHZXQgcmlkIG9mIGdhcCB1bmRlciBpbWFnZXMgYnkgbWFraW5nIHRoZW0gZGlzcGxheTogaW5saW5lLWJsb2NrOyBieSBkZWZhdWx0XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIH1cblxuICAvLyBNYWtlIHN1cmUgdGV4dGFyZWEgdGFrZXMgb24gaGVpZ2h0IGF1dG9tYXRpY2FsbHlcbiAgdGV4dGFyZWEge1xuICAgIGhlaWdodDogYXV0bztcbiAgICBtaW4taGVpZ2h0OiA1MHB4O1xuICAgIGJvcmRlci1yYWRpdXM6ICRnbG9iYWwtcmFkaXVzO1xuICB9XG5cbiAgLy8gTWFrZSBzZWxlY3QgZWxlbWVudHMgYXJlIDEwMCUgd2lkdGggYnkgZGVmYXVsdFxuICBzZWxlY3Qge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJvcmRlci1yYWRpdXM6ICRnbG9iYWwtcmFkaXVzO1xuICB9XG5cbiAgLy8gU3R5bGVzIEdvb2dsZSBNYXBzIGFuZCBNYXBRdWVzdCBlbWJlZHMgcHJvcGVybHlcbiAgLy8gc2Nzcy1saW50OmRpc2FibGUgSWRTZWxlY3RvclxuICAjbWFwX2NhbnZhcyxcbiAgLm1hcF9jYW52YXMsXG4gIC5tcWEtZGlzcGxheSB7XG4gICAgaW1nLFxuICAgIGVtYmVkLFxuICAgIG9iamVjdCB7XG4gICAgICBtYXgtd2lkdGg6IG5vbmUgIWltcG9ydGFudDtcbiAgICB9XG4gIH1cblxuICAvLyBSZXNldCA8YnV0dG9uPiBzdHlsZXMgY3JlYXRlZCBieSBtb3N0IGJyb3dzZXJzXG4gIGJ1dHRvbiB7XG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICAgIC1tb3otYXBwZWFyYW5jZTogbm9uZTtcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIGJvcmRlcjogMDtcbiAgICBib3JkZXItcmFkaXVzOiAkZ2xvYmFsLXJhZGl1cztcbiAgICBsaW5lLWhlaWdodDogMTtcbiAgfVxuXG4gIC8vIEludGVybmFsIGNsYXNzZXMgdG8gc2hvdy9oaWRlIGVsZW1lbnRzIGluIEphdmFTY3JpcHRcbiAgLmlzLXZpc2libGUge1xuICAgIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7XG4gIH1cblxuICAuaXMtaGlkZGVuIHtcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG4gIH1cbn1cblxuLy8vIExvYWRzIG5vcm1hbGl6ZS5jc3MuXG4vLy8gQGFjY2VzcyBwcml2YXRlXG5AbWl4aW4gLXpmLW5vcm1hbGl6ZSB7XG4gIC8qISBub3JtYWxpemUuY3NzIHYzLjAuMyB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cblxuICAvKipcbiAgICogMS4gU2V0IGRlZmF1bHQgZm9udCBmYW1pbHkgdG8gc2Fucy1zZXJpZi5cbiAgICogMi4gUHJldmVudCBpT1MgYW5kIElFIHRleHQgc2l6ZSBhZGp1c3QgYWZ0ZXIgZGV2aWNlIG9yaWVudGF0aW9uIGNoYW5nZSxcbiAgICogICAgd2l0aG91dCBkaXNhYmxpbmcgdXNlciB6b29tLlxuICAgKi9cblxuICBodG1sIHtcbiAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsgLyogMSAqL1xuICAgIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG4gICAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG4gIH1cblxuICAvKipcbiAgICogUmVtb3ZlIGRlZmF1bHQgbWFyZ2luLlxuICAgKi9cblxuICBib2R5IHtcbiAgICBtYXJnaW46IDA7XG4gIH1cblxuICAvKiBIVE1MNSBkaXNwbGF5IGRlZmluaXRpb25zXG4gICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICAvKipcbiAgICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGFueSBIVE1MNSBlbGVtZW50IGluIElFIDgvOS5cbiAgICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGBkZXRhaWxzYCBvciBgc3VtbWFyeWAgaW4gSUUgMTAvMTFcbiAgICogYW5kIEZpcmVmb3guXG4gICAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBgbWFpbmAgaW4gSUUgMTEuXG4gICAqL1xuXG4gIGFydGljbGUsXG4gIGFzaWRlLFxuICBkZXRhaWxzLFxuICBmaWdjYXB0aW9uLFxuICBmaWd1cmUsXG4gIGZvb3RlcixcbiAgaGVhZGVyLFxuICBtYWluLFxuICBtZW51LFxuICBuYXYsXG4gIHNlY3Rpb24sXG4gIHN1bW1hcnkge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG5cbiAgLyoqXG4gICAqIDEuIENvcnJlY3QgYGlubGluZS1ibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBpbiBJRSA4LzkuXG4gICAqIDIuIE5vcm1hbGl6ZSB2ZXJ0aWNhbCBhbGlnbm1lbnQgb2YgYHByb2dyZXNzYCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAgICovXG5cbiAgYXVkaW8sXG4gIGNhbnZhcyxcbiAgcHJvZ3Jlc3MsXG4gIHZpZGVvIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IC8qIDEgKi9cbiAgICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IC8qIDIgKi9cbiAgfVxuXG4gIC8qKlxuICAgKiBQcmV2ZW50IG1vZGVybiBicm93c2VycyBmcm9tIGRpc3BsYXlpbmcgYGF1ZGlvYCB3aXRob3V0IGNvbnRyb2xzLlxuICAgKiBSZW1vdmUgZXhjZXNzIGhlaWdodCBpbiBpT1MgNSBkZXZpY2VzLlxuICAgKi9cblxuICBhdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgaGVpZ2h0OiAwO1xuICB9XG5cbiAgLyoqXG4gICAqIEFkZHJlc3MgYFtoaWRkZW5dYCBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS8xMC5cbiAgICogSGlkZSB0aGUgYHRlbXBsYXRlYCBlbGVtZW50IGluIElFIDgvOS8xMC8xMSwgU2FmYXJpLCBhbmQgRmlyZWZveCA8IDIyLlxuICAgKi9cblxuICBbaGlkZGVuXSxcbiAgdGVtcGxhdGUge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cblxuICAvKiBMaW5rc1xuICAgICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbiAgLyoqXG4gICAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIGNvbG9yIGZyb20gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICAgKi9cblxuICBhIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgfVxuXG4gIC8qKlxuICAgKiBJbXByb3ZlIHJlYWRhYmlsaXR5IG9mIGZvY3VzZWQgZWxlbWVudHMgd2hlbiB0aGV5IGFyZSBhbHNvIGluIGFuXG4gICAqIGFjdGl2ZS9ob3ZlciBzdGF0ZS5cbiAgICovXG5cbiAgYTphY3RpdmUsXG4gIGE6aG92ZXIge1xuICAgIG91dGxpbmU6IDA7XG4gIH1cblxuICAvKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbiAgLyoqXG4gICAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkvMTAvMTEsIFNhZmFyaSwgYW5kIENocm9tZS5cbiAgICovXG5cbiAgYWJiclt0aXRsZV0ge1xuICAgIGJvcmRlci1ib3R0b206IDFweCBkb3R0ZWQ7XG4gIH1cblxuICAvKipcbiAgICogQWRkcmVzcyBzdHlsZSBzZXQgdG8gYGJvbGRlcmAgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICAgKi9cblxuICBiLFxuICBzdHJvbmcge1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICB9XG5cbiAgLyoqXG4gICAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBTYWZhcmkgYW5kIENocm9tZS5cbiAgICovXG5cbiAgZGZuIHtcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIH1cblxuICAvKipcbiAgICogQWRkcmVzcyB2YXJpYWJsZSBgaDFgIGZvbnQtc2l6ZSBhbmQgbWFyZ2luIHdpdGhpbiBgc2VjdGlvbmAgYW5kIGBhcnRpY2xlYFxuICAgKiBjb250ZXh0cyBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gICAqL1xuXG4gIGgxIHtcbiAgICBmb250LXNpemU6IDJlbTtcbiAgICBtYXJnaW46IDAuNjdlbSAwO1xuICB9XG5cbiAgLyoqXG4gICAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkuXG4gICAqL1xuXG4gIG1hcmsge1xuICAgIGJhY2tncm91bmQ6ICNmZjA7XG4gICAgY29sb3I6ICMwMDA7XG4gIH1cblxuICAvKipcbiAgICogQWRkcmVzcyBpbmNvbnNpc3RlbnQgYW5kIHZhcmlhYmxlIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gICAqL1xuXG4gIHNtYWxsIHtcbiAgICBmb250LXNpemU6IDgwJTtcbiAgfVxuXG4gIC8qKlxuICAgKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBhZmZlY3RpbmcgYGxpbmUtaGVpZ2h0YCBpbiBhbGwgYnJvd3NlcnMuXG4gICAqL1xuXG4gIHN1YixcbiAgc3VwIHtcbiAgICBmb250LXNpemU6IDc1JTtcbiAgICBsaW5lLWhlaWdodDogMDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xuICB9XG5cbiAgc3VwIHtcbiAgICB0b3A6IC0wLjVlbTtcbiAgfVxuXG4gIHN1YiB7XG4gICAgYm90dG9tOiAtMC4yNWVtO1xuICB9XG5cbiAgLyogRW1iZWRkZWQgY29udGVudFxuICAgICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbiAgLyoqXG4gICAqIFJlbW92ZSBib3JkZXIgd2hlbiBpbnNpZGUgYGFgIGVsZW1lbnQgaW4gSUUgOC85LzEwLlxuICAgKi9cblxuICBpbWcge1xuICAgIGJvcmRlcjogMDtcbiAgfVxuXG4gIC8qKlxuICAgKiBDb3JyZWN0IG92ZXJmbG93IG5vdCBoaWRkZW4gaW4gSUUgOS8xMC8xMS5cbiAgICovXG5cbiAgc3ZnOm5vdCg6cm9vdCkge1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gIH1cblxuICAvKiBHcm91cGluZyBjb250ZW50XG4gICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICAvKipcbiAgICogQWRkcmVzcyBtYXJnaW4gbm90IHByZXNlbnQgaW4gSUUgOC85IGFuZCBTYWZhcmkuXG4gICAqL1xuXG4gIGZpZ3VyZSB7XG4gICAgbWFyZ2luOiAxZW0gNDBweDtcbiAgfVxuXG4gIC8qKlxuICAgKiBBZGRyZXNzIGRpZmZlcmVuY2VzIGJldHdlZW4gRmlyZWZveCBhbmQgb3RoZXIgYnJvd3NlcnMuXG4gICAqL1xuXG4gIGhyIHtcbiAgICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgICBoZWlnaHQ6IDA7XG4gIH1cblxuICAvKipcbiAgICogQ29udGFpbiBvdmVyZmxvdyBpbiBhbGwgYnJvd3NlcnMuXG4gICAqL1xuXG4gIHByZSB7XG4gICAgb3ZlcmZsb3c6IGF1dG87XG4gIH1cblxuICAvKipcbiAgICogQWRkcmVzcyBvZGQgYGVtYC11bml0IGZvbnQgc2l6ZSByZW5kZXJpbmcgaW4gYWxsIGJyb3dzZXJzLlxuICAgKi9cblxuICBjb2RlLFxuICBrYmQsXG4gIHByZSxcbiAgc2FtcCB7XG4gICAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICAgIGZvbnQtc2l6ZTogMWVtO1xuICB9XG5cbiAgLyogRm9ybXNcbiAgICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4gIC8qKlxuICAgKiBLbm93biBsaW1pdGF0aW9uOiBieSBkZWZhdWx0LCBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYIGFsbG93IHZlcnkgbGltaXRlZFxuICAgKiBzdHlsaW5nIG9mIGBzZWxlY3RgLCB1bmxlc3MgYSBgYm9yZGVyYCBwcm9wZXJ0eSBpcyBzZXQuXG4gICAqL1xuXG4gIC8qKlxuICAgKiAxLiBDb3JyZWN0IGNvbG9yIG5vdCBiZWluZyBpbmhlcml0ZWQuXG4gICAqICAgIEtub3duIGlzc3VlOiBhZmZlY3RzIGNvbG9yIG9mIGRpc2FibGVkIGVsZW1lbnRzLlxuICAgKiAyLiBDb3JyZWN0IGZvbnQgcHJvcGVydGllcyBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICAgKiAzLiBBZGRyZXNzIG1hcmdpbnMgc2V0IGRpZmZlcmVudGx5IGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAgICovXG5cbiAgYnV0dG9uLFxuICBpbnB1dCxcbiAgb3B0Z3JvdXAsXG4gIHNlbGVjdCxcbiAgdGV4dGFyZWEge1xuICAgIGNvbG9yOiBpbmhlcml0OyAvKiAxICovXG4gICAgZm9udDogaW5oZXJpdDsgLyogMiAqL1xuICAgIG1hcmdpbjogMDsgLyogMyAqL1xuICB9XG5cbiAgLyoqXG4gICAqIEFkZHJlc3MgYG92ZXJmbG93YCBzZXQgdG8gYGhpZGRlbmAgaW4gSUUgOC85LzEwLzExLlxuICAgKi9cblxuICBidXR0b24ge1xuICAgIG92ZXJmbG93OiB2aXNpYmxlO1xuICB9XG5cbiAgLyoqXG4gICAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGB0ZXh0LXRyYW5zZm9ybWAgaW5oZXJpdGFuY2UgZm9yIGBidXR0b25gIGFuZCBgc2VsZWN0YC5cbiAgICogQWxsIG90aGVyIGZvcm0gY29udHJvbCBlbGVtZW50cyBkbyBub3QgaW5oZXJpdCBgdGV4dC10cmFuc2Zvcm1gIHZhbHVlcy5cbiAgICogQ29ycmVjdCBgYnV0dG9uYCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LCBJRSA4LzkvMTAvMTEsIGFuZCBPcGVyYS5cbiAgICogQ29ycmVjdCBgc2VsZWN0YCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LlxuICAgKi9cblxuICBidXR0b24sXG4gIHNlbGVjdCB7XG4gICAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG4gIH1cblxuICAvKipcbiAgICogMS4gQXZvaWQgdGhlIFdlYktpdCBidWcgaW4gQW5kcm9pZCA0LjAuKiB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2BcbiAgICogICAgYW5kIGB2aWRlb2AgY29udHJvbHMuXG4gICAqIDIuIENvcnJlY3QgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSBgaW5wdXRgIHR5cGVzIGluIGlPUy5cbiAgICogMy4gSW1wcm92ZSB1c2FiaWxpdHkgYW5kIGNvbnNpc3RlbmN5IG9mIGN1cnNvciBzdHlsZSBiZXR3ZWVuIGltYWdlLXR5cGVcbiAgICogICAgYGlucHV0YCBhbmQgb3RoZXJzLlxuICAgKi9cblxuICBidXR0b24sXG4gIGh0bWwgaW5wdXRbdHlwZT1cImJ1dHRvblwiXSwgLyogMSAqL1xuICBpbnB1dFt0eXBlPVwicmVzZXRcIl0sXG4gIGlucHV0W3R5cGU9XCJzdWJtaXRcIl0ge1xuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAyICovXG4gICAgY3Vyc29yOiBwb2ludGVyOyAvKiAzICovXG4gIH1cblxuICAvKipcbiAgICogUmUtc2V0IGRlZmF1bHQgY3Vyc29yIGZvciBkaXNhYmxlZCBlbGVtZW50cy5cbiAgICovXG5cbiAgYnV0dG9uW2Rpc2FibGVkXSxcbiAgaHRtbCBpbnB1dFtkaXNhYmxlZF0ge1xuICAgIGN1cnNvcjogZGVmYXVsdDtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgYm9yZGVyIGluIEZpcmVmb3ggNCsuXG4gICAqL1xuXG4gIGJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcbiAgaW5wdXQ6Oi1tb3otZm9jdXMtaW5uZXIge1xuICAgIGJvcmRlcjogMDtcbiAgICBwYWRkaW5nOiAwO1xuICB9XG5cbiAgLyoqXG4gICAqIEFkZHJlc3MgRmlyZWZveCA0KyBzZXR0aW5nIGBsaW5lLWhlaWdodGAgb24gYGlucHV0YCB1c2luZyBgIWltcG9ydGFudGAgaW5cbiAgICogdGhlIFVBIHN0eWxlc2hlZXQuXG4gICAqL1xuXG4gIGlucHV0IHtcbiAgICBsaW5lLWhlaWdodDogbm9ybWFsO1xuICB9XG5cbiAgLyoqXG4gICAqIEl0J3MgcmVjb21tZW5kZWQgdGhhdCB5b3UgZG9uJ3QgYXR0ZW1wdCB0byBzdHlsZSB0aGVzZSBlbGVtZW50cy5cbiAgICogRmlyZWZveCdzIGltcGxlbWVudGF0aW9uIGRvZXNuJ3QgcmVzcGVjdCBib3gtc2l6aW5nLCBwYWRkaW5nLCBvciB3aWR0aC5cbiAgICpcbiAgICogMS4gQWRkcmVzcyBib3ggc2l6aW5nIHNldCB0byBgY29udGVudC1ib3hgIGluIElFIDgvOS8xMC5cbiAgICogMi4gUmVtb3ZlIGV4Y2VzcyBwYWRkaW5nIGluIElFIDgvOS8xMC5cbiAgICovXG5cbiAgaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdLFxuICBpbnB1dFt0eXBlPVwicmFkaW9cIl0ge1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgICBwYWRkaW5nOiAwOyAvKiAyICovXG4gIH1cblxuICAvKipcbiAgICogRml4IHRoZSBjdXJzb3Igc3R5bGUgZm9yIENocm9tZSdzIGluY3JlbWVudC9kZWNyZW1lbnQgYnV0dG9ucy4gRm9yIGNlcnRhaW5cbiAgICogYGZvbnQtc2l6ZWAgdmFsdWVzIG9mIHRoZSBgaW5wdXRgLCBpdCBjYXVzZXMgdGhlIGN1cnNvciBzdHlsZSBvZiB0aGVcbiAgICogZGVjcmVtZW50IGJ1dHRvbiB0byBjaGFuZ2UgZnJvbSBgZGVmYXVsdGAgdG8gYHRleHRgLlxuICAgKi9cblxuICBpbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuICBpbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgICBoZWlnaHQ6IGF1dG87XG4gIH1cblxuICAvKipcbiAgICogMS4gQWRkcmVzcyBgYXBwZWFyYW5jZWAgc2V0IHRvIGBzZWFyY2hmaWVsZGAgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gICAqIDIuIEFkZHJlc3MgYGJveC1zaXppbmdgIHNldCB0byBgYm9yZGVyLWJveGAgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gICAqL1xuXG4gIGlucHV0W3R5cGU9XCJzZWFyY2hcIl0ge1xuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXG4gICAgYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIDIgKi9cbiAgfVxuXG4gIC8qKlxuICAgKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgc2VhcmNoIGNhbmNlbCBidXR0b24gaW4gU2FmYXJpIGFuZCBDaHJvbWUgb24gT1MgWC5cbiAgICogU2FmYXJpIChidXQgbm90IENocm9tZSkgY2xpcHMgdGhlIGNhbmNlbCBidXR0b24gd2hlbiB0aGUgc2VhcmNoIGlucHV0IGhhc1xuICAgKiBwYWRkaW5nIChhbmQgYHRleHRmaWVsZGAgYXBwZWFyYW5jZSkuXG4gICAqL1xuXG4gIGlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG4gIGlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBEZWZpbmUgY29uc2lzdGVudCBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcuXG4gICAqIFtOT1RFXSBXZSBkb24ndCBlbmFibGUgdGhpcyBydWxlc2V0IGluIEZvdW5kYXRpb24sIGJlY2F1c2Ugd2Ugd2FudCB0aGUgPGZpZWxkc2V0PiBlbGVtZW50IHRvIGhhdmUgcGxhaW4gc3R5bGluZy5cbiAgICovXG5cbiAgLyogZmllbGRzZXQge1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgICAgIG1hcmdpbjogMCAycHg7XG4gICAgICBwYWRkaW5nOiAwLjM1ZW0gMC42MjVlbSAwLjc1ZW07XG4gIH0gKi9cblxuICAvKipcbiAgICogMS4gQ29ycmVjdCBgY29sb3JgIG5vdCBiZWluZyBpbmhlcml0ZWQgaW4gSUUgOC85LzEwLzExLlxuICAgKiAyLiBSZW1vdmUgcGFkZGluZyBzbyBwZW9wbGUgYXJlbid0IGNhdWdodCBvdXQgaWYgdGhleSB6ZXJvIG91dCBmaWVsZHNldHMuXG4gICAqL1xuXG4gIGxlZ2VuZCB7XG4gICAgYm9yZGVyOiAwOyAvKiAxICovXG4gICAgcGFkZGluZzogMDsgLyogMiAqL1xuICB9XG5cbiAgLyoqXG4gICAqIFJlbW92ZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSA4LzkvMTAvMTEuXG4gICAqL1xuXG4gIHRleHRhcmVhIHtcbiAgICBvdmVyZmxvdzogYXV0bztcbiAgfVxuXG4gIC8qKlxuICAgKiBEb24ndCBpbmhlcml0IHRoZSBgZm9udC13ZWlnaHRgIChhcHBsaWVkIGJ5IGEgcnVsZSBhYm92ZSkuXG4gICAqIE5PVEU6IHRoZSBkZWZhdWx0IGNhbm5vdCBzYWZlbHkgYmUgY2hhbmdlZCBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYLlxuICAgKi9cblxuICBvcHRncm91cCB7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIH1cblxuICAvKiBUYWJsZXNcbiAgICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4gIC8qKlxuICAgKiBSZW1vdmUgbW9zdCBzcGFjaW5nIGJldHdlZW4gdGFibGUgY2VsbHMuXG4gICAqL1xuXG4gIHRhYmxlIHtcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICAgIGJvcmRlci1zcGFjaW5nOiAwO1xuICB9XG5cbiAgdGQsXG4gIHRoIHtcbiAgICBwYWRkaW5nOiAwO1xuICB9XG59XG5cbmJvZHkge1xuICBvdmVyZmxvdy14OiBoaWRkZW47XG59XG5cbi5uby1qcyAucHJpbWFyeS1uYXYsXG4ubm8tanMgI2NvbnRlbnQge1xuICBvcGFjaXR5OiAwO1xufVxuXG4ud2YtbG9hZGluZyAucHJpbWFyeS1uYXYsXG4ud2YtbG9hZGluZyAjY29udGVudCB7XG4gIG9wYWNpdHk6IDA7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMjBweCk7XG4gIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTIwcHgpO1xuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMjBweCk7XG59XG5cbi5wcmltYXJ5LW5hdixcbiNjb250ZW50IHtcbiAgb3BhY2l0eTogMTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC40cyBlYXNlLWluLW91dCwgb3BhY2l0eSAuNHMgZWFzZS1pbi1vdXQ7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogLXdlYmtpdC10cmFuc2Zvcm0gLjRzIGVhc2UtaW4tb3V0LCBvcGFjaXR5IC40cyBlYXNlLWluLW91dDtcbn1cblxuLmljb24ge1xuICB3aWR0aDogMXJlbTtcbiAgaGVpZ2h0OiAxcmVtO1xufSIsIi8vICBGb3VuZGF0aW9uIGZvciBTaXRlcyBTZXR0aW5nc1xuLy8gIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vL1xuLy8gIFRhYmxlIG9mIENvbnRlbnRzOlxuLy9cbi8vICAgMS4gR2xvYmFsXG4vLyAgIDIuIEJyZWFrcG9pbnRzXG4vLyAgIDMuIFRoZSBHcmlkXG4vLyAgIDQuIEJhc2UgVHlwb2dyYXBoeVxuLy8gICA1LiBUeXBvZ3JhcGh5IEhlbHBlcnNcbi8vICAgNi4gQWJpZGVcbi8vICAgNy4gQWNjb3JkaW9uXG4vLyAgIDguIEFjY29yZGlvbiBNZW51XG4vLyAgIDkuIEJhZGdlXG4vLyAgMTAuIEJyZWFkY3J1bWJzXG4vLyAgMTEuIEJ1dHRvblxuLy8gIDEyLiBCdXR0b24gR3JvdXBcbi8vICAxMy4gQ2FsbG91dFxuLy8gIDE0LiBDbG9zZSBCdXR0b25cbi8vICAxNS4gRHJpbGxkb3duXG4vLyAgMTYuIERyb3Bkb3duXG4vLyAgMTcuIERyb3Bkb3duIE1lbnVcbi8vICAxOC4gRmxleCBWaWRlb1xuLy8gIDE5LiBGb3Jtc1xuLy8gIDIwLiBMYWJlbFxuLy8gIDIxLiBNZWRpYSBPYmplY3Rcbi8vICAyMi4gTWVudVxuLy8gIDIzLiBNZXRlclxuLy8gIDI0LiBPZmYtY2FudmFzXG4vLyAgMjUuIE9yYml0XG4vLyAgMjYuIFBhZ2luYXRpb25cbi8vICAyNy4gUHJvZ3Jlc3MgQmFyXG4vLyAgMjguIFJldmVhbFxuLy8gIDI5LiBTbGlkZXJcbi8vICAzMC4gU3dpdGNoXG4vLyAgMzEuIFRhYmxlXG4vLyAgMzIuIFRhYnNcbi8vICAzMy4gVGh1bWJuYWlsXG4vLyAgMzQuIFRpdGxlIEJhclxuLy8gIDM1LiBUb29sdGlwXG4vLyAgMzYuIFRvcCBCYXJcbkBpbXBvcnQgJy4uLy4uLy4uL25vZGVfbW9kdWxlcy9mb3VuZGF0aW9uLXNpdGVzL3Njc3MvdXRpbC91dGlsJztcblxuLy8gMS4gR2xvYmFsXG4vLyAtLS0tLS0tLS1cblxuJGdsb2JhbC10ZXh0LWRpcmVjdGlvbjogbHRyICFkZWZhdWx0O1xuJGdsb2JhbC1sZWZ0OiBpZigkZ2xvYmFsLXRleHQtZGlyZWN0aW9uID09IHJ0bCwgcmlnaHQsIGxlZnQpO1xuJGdsb2JhbC1yaWdodDogaWYoJGdsb2JhbC10ZXh0LWRpcmVjdGlvbiA9PSBydGwsIGxlZnQsIHJpZ2h0KTtcblxuJGdsb2JhbC1mb250LXNpemU6IDEwMCU7XG4kZ2xvYmFsLXdpZHRoOiA2NHJlbTtcbiRnbG9iYWwtbGluZWhlaWdodDogMS41O1xuJGZvdW5kYXRpb24tcGFsZXR0ZTogKFxuICBwcmltYXJ5OiAjZWY1MzUwLFxuICBzZWNvbmRhcnk6ICM3NzcsXG4gIHN1Y2Nlc3M6ICMzYWRiNzYsXG4gIHdhcm5pbmc6ICNmZmFlMDAsXG4gIGFsZXJ0OiAjZWM1ODQwLFxuKTtcbiRsaWdodC1ncmF5OiAjZTZlNmU2O1xuJG1lZGl1bS1ncmF5OiAjY2FjYWNhO1xuJGRhcmstZ3JheTogIzhhOGE4YTtcbiRibGFjazogIzBhMGEwYTtcbiR3aGl0ZTogI2ZlZmVmZTtcbiRib2R5LWJhY2tncm91bmQ6ICR3aGl0ZTtcbiRib2R5LWZvbnQtY29sb3I6ICMzMzM7XG4kYm9keS1mb250LWZhbWlseTogJ3ByZW50b24nLCBIZWx2ZXRpY2EsIFJvYm90bywgQXJpYWwsIHNhbnMtc2VyaWY7XG4kYm9keS1hbnRpYWxpYXNlZDogdHJ1ZTtcbiRnbG9iYWwtbWFyZ2luOiAxcmVtO1xuJGdsb2JhbC1wYWRkaW5nOiAxcmVtO1xuJGdsb2JhbC13ZWlnaHQtbm9ybWFsOiBub3JtYWw7XG4kZ2xvYmFsLXdlaWdodC1ib2xkOiBib2xkO1xuJGdsb2JhbC1yYWRpdXM6IDA7XG4kZ2xvYmFsLXRleHQtZGlyZWN0aW9uOiBsdHI7XG4kZ2xvYmFsLWZsZXhib3g6IHRydWU7XG4kcHJpbnQtdHJhbnNwYXJlbnQtYmFja2dyb3VuZHM6IHRydWU7XG5cbkBpbmNsdWRlIGFkZC1mb3VuZGF0aW9uLWNvbG9ycztcblxuLy8gMi4gQnJlYWtwb2ludHNcbi8vIC0tLS0tLS0tLS0tLS0tXG5cbiRicmVha3BvaW50czogKFxuICBzbWFsbDogMCxcbiAgbWVkaXVtOiA2NDBweCxcbiAgbGFyZ2U6IDEwMjRweCxcbiAgeGxhcmdlOiAxMjAwcHgsXG4gIHh4bGFyZ2U6IDE0NDBweCxcbik7XG4kYnJlYWtwb2ludC1jbGFzc2VzOiAoc21hbGwgbWVkaXVtIGxhcmdlIHhsYXJnZSB4eGxhcmdlKTtcblxuLy8gMy4gVGhlIEdyaWRcbi8vIC0tLS0tLS0tLS0tXG5cbiRncmlkLXJvdy13aWR0aDogJGdsb2JhbC13aWR0aDtcbiRncmlkLWNvbHVtbi1jb3VudDogMTI7XG4kZ3JpZC1jb2x1bW4tZ3V0dGVyOiAoXG4gIHNtYWxsOiAyMHB4LFxuICBtZWRpdW06IDMwcHgsXG4pO1xuJGdyaWQtY29sdW1uLWFsaWduLWVkZ2U6IHRydWU7XG4kYmxvY2stZ3JpZC1tYXg6IDg7XG5cbi8vIDQuIEJhc2UgVHlwb2dyYXBoeVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiRoZWFkZXItZm9udC1mYW1pbHk6ICdtb25hcmNoYScsIEhlbHZldGljYSwgUm9ib3RvLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiRoZWFkZXItZm9udC13ZWlnaHQ6IDMwMDtcbiRoZWFkZXItZm9udC1zdHlsZTogbm9ybWFsO1xuJGZvbnQtZmFtaWx5LW1vbm9zcGFjZTogQ29uc29sYXMsICdMaWJlcmF0aW9uIE1vbm8nLCBDb3VyaWVyLCBtb25vc3BhY2U7XG4kaGVhZGVyLXNpemVzOiAoXG4gIHNtYWxsOiAoXG4gICAgJ2gxJzogMjQsXG4gICAgJ2gyJzogMjAsXG4gICAgJ2gzJzogMTksXG4gICAgJ2g0JzogMTgsXG4gICAgJ2g1JzogMTcsXG4gICAgJ2g2JzogMTZcbiAgKSxcbiAgbWVkaXVtOiAoXG4gICAgJ2gxJzogNDgsXG4gICAgJ2gyJzogNDAsXG4gICAgJ2gzJzogMzEsXG4gICAgJ2g0JzogMjUsXG4gICAgJ2g1JzogMjAsXG4gICAgJ2g2JzogMTZcbiAgKSxcbik7XG4kaGVhZGVyLWNvbG9yOiBpbmhlcml0O1xuJGhlYWRlci1saW5laGVpZ2h0OiAxLjQ7XG4kaGVhZGVyLW1hcmdpbi1ib3R0b206IDAuNXJlbTtcbiRoZWFkZXItdGV4dC1yZW5kZXJpbmc6IG9wdGltaXplTGVnaWJpbGl0eTtcbiRzbWFsbC1mb250LXNpemU6IDgwJTtcbiRoZWFkZXItc21hbGwtZm9udC1jb2xvcjogJG1lZGl1bS1ncmF5O1xuJHBhcmFncmFwaC1saW5laGVpZ2h0OiAxLjY7XG4kcGFyYWdyYXBoLW1hcmdpbi1ib3R0b206IDFyZW07XG4kcGFyYWdyYXBoLXRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7XG4kY29kZS1jb2xvcjogJGJsYWNrO1xuJGNvZGUtZm9udC1mYW1pbHk6ICRmb250LWZhbWlseS1tb25vc3BhY2U7XG4kY29kZS1mb250LXdlaWdodDogJGdsb2JhbC13ZWlnaHQtbm9ybWFsO1xuJGNvZGUtYmFja2dyb3VuZDogJGxpZ2h0LWdyYXk7XG4kY29kZS1ib3JkZXI6IDFweCBzb2xpZCAkbWVkaXVtLWdyYXk7XG4kY29kZS1wYWRkaW5nOiByZW0tY2FsYygyIDUgMSk7XG4kYW5jaG9yLWNvbG9yOiAkcHJpbWFyeS1jb2xvcjtcbiRhbmNob3ItY29sb3ItaG92ZXI6IHNjYWxlLWNvbG9yKCRhbmNob3ItY29sb3IsICRsaWdodG5lc3M6IC0xNCUpO1xuJGFuY2hvci10ZXh0LWRlY29yYXRpb246IG5vbmU7XG4kYW5jaG9yLXRleHQtZGVjb3JhdGlvbi1ob3Zlcjogbm9uZTtcbiRoci13aWR0aDogJGdsb2JhbC13aWR0aDtcbiRoci1ib3JkZXI6IDFweCBzb2xpZCAkbWVkaXVtLWdyYXk7XG4kaHItbWFyZ2luOiByZW0tY2FsYygyMCkgYXV0bztcbiRsaXN0LWxpbmVoZWlnaHQ6ICRwYXJhZ3JhcGgtbGluZWhlaWdodDtcbiRsaXN0LW1hcmdpbi1ib3R0b206ICRwYXJhZ3JhcGgtbWFyZ2luLWJvdHRvbTtcbiRsaXN0LXN0eWxlLXR5cGU6IGRpc2M7XG4kbGlzdC1zdHlsZS1wb3NpdGlvbjogb3V0c2lkZTtcbiRsaXN0LXNpZGUtbWFyZ2luOiAxLjI1cmVtO1xuJGxpc3QtbmVzdGVkLXNpZGUtbWFyZ2luOiAxLjI1cmVtO1xuJGRlZm5saXN0LW1hcmdpbi1ib3R0b206IDFyZW07XG4kZGVmbmxpc3QtdGVybS13ZWlnaHQ6ICRnbG9iYWwtd2VpZ2h0LWJvbGQ7XG4kZGVmbmxpc3QtdGVybS1tYXJnaW4tYm90dG9tOiAwLjNyZW07XG4kYmxvY2txdW90ZS1jb2xvcjogJGRhcmstZ3JheTtcbiRibG9ja3F1b3RlLXBhZGRpbmc6IHJlbS1jYWxjKDkgMjAgMCAxOSk7XG4kYmxvY2txdW90ZS1ib3JkZXI6IDFweCBzb2xpZCAkbWVkaXVtLWdyYXk7XG4kY2l0ZS1mb250LXNpemU6IHJlbS1jYWxjKDEzKTtcbiRjaXRlLWNvbG9yOiAkYmxhY2s7XG4ka2V5c3Ryb2tlLWZvbnQ6ICRmb250LWZhbWlseS1tb25vc3BhY2U7XG4ka2V5c3Ryb2tlLWNvbG9yOiAkYmxhY2s7XG4ka2V5c3Ryb2tlLWJhY2tncm91bmQ6ICRsaWdodC1ncmF5O1xuJGtleXN0cm9rZS1wYWRkaW5nOiByZW0tY2FsYygyIDQgMCk7XG4ka2V5c3Ryb2tlLXJhZGl1czogJGdsb2JhbC1yYWRpdXM7XG4kYWJici11bmRlcmxpbmU6IDFweCBkb3R0ZWQgJGJsYWNrO1xuXG4vLyA1LiBUeXBvZ3JhcGh5IEhlbHBlcnNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4kbGVhZC1mb250LXNpemU6ICRnbG9iYWwtZm9udC1zaXplICogMS4yNTtcbiRsZWFkLWxpbmVoZWlnaHQ6IDEuNjtcbiRzdWJoZWFkZXItbGluZWhlaWdodDogMS40O1xuJHN1YmhlYWRlci1jb2xvcjogJGRhcmstZ3JheTtcbiRzdWJoZWFkZXItZm9udC13ZWlnaHQ6ICRnbG9iYWwtd2VpZ2h0LW5vcm1hbDtcbiRzdWJoZWFkZXItbWFyZ2luLXRvcDogMC4ycmVtO1xuJHN1YmhlYWRlci1tYXJnaW4tYm90dG9tOiAwLjVyZW07XG4kc3RhdC1mb250LXNpemU6IDIuNXJlbTtcblxuLy8gNi4gQWJpZGVcbi8vIC0tLS0tLS0tXG5cbiRhYmlkZS1pbnB1dHM6IHRydWU7XG4kYWJpZGUtbGFiZWxzOiB0cnVlO1xuJGlucHV0LWJhY2tncm91bmQtaW52YWxpZDogbWFwLWdldCgkZm91bmRhdGlvbi1wYWxldHRlLCBhbGVydCk7XG4kZm9ybS1sYWJlbC1jb2xvci1pbnZhbGlkOiBtYXAtZ2V0KCRmb3VuZGF0aW9uLXBhbGV0dGUsIGFsZXJ0KTtcbiRpbnB1dC1lcnJvci1jb2xvcjogbWFwLWdldCgkZm91bmRhdGlvbi1wYWxldHRlLCBhbGVydCk7XG4kaW5wdXQtZXJyb3ItZm9udC1zaXplOiByZW0tY2FsYygxMik7XG4kaW5wdXQtZXJyb3ItZm9udC13ZWlnaHQ6ICRnbG9iYWwtd2VpZ2h0LWJvbGQ7XG5cbi8vIDcuIEFjY29yZGlvblxuLy8gLS0tLS0tLS0tLS0tXG5cbiRhY2NvcmRpb24tYmFja2dyb3VuZDogJHdoaXRlO1xuJGFjY29yZGlvbi1wbHVzbWludXM6IHRydWU7XG4kYWNjb3JkaW9uLWl0ZW0tY29sb3I6IGZvcmVncm91bmQoJGFjY29yZGlvbi1iYWNrZ3JvdW5kLCAkcHJpbWFyeS1jb2xvcik7XG4kYWNjb3JkaW9uLWl0ZW0tYmFja2dyb3VuZC1ob3ZlcjogJGxpZ2h0LWdyYXk7XG4kYWNjb3JkaW9uLWl0ZW0tcGFkZGluZzogMS4yNXJlbSAxcmVtO1xuJGFjY29yZGlvbi1jb250ZW50LWJhY2tncm91bmQ6ICR3aGl0ZTtcbiRhY2NvcmRpb24tY29udGVudC1ib3JkZXI6IDFweCBzb2xpZCAkbGlnaHQtZ3JheTtcbiRhY2NvcmRpb24tY29udGVudC1jb2xvcjogZm9yZWdyb3VuZCgkYWNjb3JkaW9uLWJhY2tncm91bmQsICRwcmltYXJ5LWNvbG9yKTtcbiRhY2NvcmRpb24tY29udGVudC1wYWRkaW5nOiAxcmVtO1xuXG4vLyA4LiBBY2NvcmRpb24gTWVudVxuLy8gLS0tLS0tLS0tLS0tLS0tLS1cblxuJGFjY29yZGlvbm1lbnUtYXJyb3dzOiB0cnVlO1xuJGFjY29yZGlvbm1lbnUtYXJyb3ctY29sb3I6ICRwcmltYXJ5LWNvbG9yO1xuXG4vLyA5LiBCYWRnZVxuLy8gLS0tLS0tLS1cblxuJGJhZGdlLWJhY2tncm91bmQ6ICRwcmltYXJ5LWNvbG9yO1xuJGJhZGdlLWNvbG9yOiBmb3JlZ3JvdW5kKCRiYWRnZS1iYWNrZ3JvdW5kKTtcbiRiYWRnZS1wYWRkaW5nOiAwLjNlbTtcbiRiYWRnZS1taW53aWR0aDogMi4xZW07XG4kYmFkZ2UtZm9udC1zaXplOiAwLjZyZW07XG5cbi8vIDEwLiBCcmVhZGNydW1ic1xuLy8gLS0tLS0tLS0tLS0tLS0tXG5cbiRicmVhZGNydW1icy1tYXJnaW46IDAgMCAkZ2xvYmFsLW1hcmdpbiAwO1xuJGJyZWFkY3J1bWJzLWl0ZW0tZm9udC1zaXplOiByZW0tY2FsYygxMSk7XG4kYnJlYWRjcnVtYnMtaXRlbS1jb2xvcjogJHByaW1hcnktY29sb3I7XG4kYnJlYWRjcnVtYnMtaXRlbS1jb2xvci1jdXJyZW50OiAkYmxhY2s7XG4kYnJlYWRjcnVtYnMtaXRlbS1jb2xvci1kaXNhYmxlZDogJG1lZGl1bS1ncmF5O1xuJGJyZWFkY3J1bWJzLWl0ZW0tbWFyZ2luOiAwLjc1cmVtO1xuJGJyZWFkY3J1bWJzLWl0ZW0tdXBwZXJjYXNlOiB0cnVlO1xuJGJyZWFkY3J1bWJzLWl0ZW0tc2xhc2g6IHRydWU7XG5cbi8vIDExLiBCdXR0b25cbi8vIC0tLS0tLS0tLS1cblxuJGJ1dHRvbi1wYWRkaW5nOiAwLjg1ZW0gMWVtO1xuJGJ1dHRvbi1tYXJnaW46IDAgMCAkZ2xvYmFsLW1hcmdpbiAwO1xuJGJ1dHRvbi1maWxsOiBzb2xpZDtcbiRidXR0b24tYmFja2dyb3VuZDogJHByaW1hcnktY29sb3I7XG4kYnV0dG9uLWJhY2tncm91bmQtaG92ZXI6IHNjYWxlLWNvbG9yKCRidXR0b24tYmFja2dyb3VuZCwgJGxpZ2h0bmVzczogLTE1JSk7XG4kYnV0dG9uLWNvbG9yOiAkd2hpdGU7XG4kYnV0dG9uLWNvbG9yLWFsdDogJGJsYWNrO1xuJGJ1dHRvbi1yYWRpdXM6ICRnbG9iYWwtcmFkaXVzO1xuJGJ1dHRvbi1zaXplczogKFxuICAgICAgICB0aW55OiAwLjZyZW0sXG4gICAgICAgIHNtYWxsOiAwLjc1cmVtLFxuICAgICAgICBkZWZhdWx0OiAwLjlyZW0sXG4gICAgICAgIGxhcmdlOiAxLjI1cmVtLFxuKTtcbiRidXR0b24tb3BhY2l0eS1kaXNhYmxlZDogMC4yNTtcblxuLy8gMTIuIEJ1dHRvbiBHcm91cFxuLy8gLS0tLS0tLS0tLS0tLS0tLVxuXG4kYnV0dG9uZ3JvdXAtbWFyZ2luOiAxcmVtO1xuJGJ1dHRvbmdyb3VwLXNwYWNpbmc6IDFweDtcbiRidXR0b25ncm91cC1jaGlsZC1zZWxlY3RvcjogJy5idXR0b24nO1xuJGJ1dHRvbmdyb3VwLWV4cGFuZC1tYXg6IDY7XG5cbi8vIDEzLiBDYWxsb3V0XG4vLyAtLS0tLS0tLS0tLVxuXG4kY2FsbG91dC1iYWNrZ3JvdW5kOiAkd2hpdGU7XG4kY2FsbG91dC1iYWNrZ3JvdW5kLWZhZGU6IDg1JTtcbiRjYWxsb3V0LWJvcmRlcjogMXB4IHNvbGlkIHJnYmEoJGJsYWNrLCAwLjI1KTtcbiRjYWxsb3V0LW1hcmdpbjogMCAwIDFyZW0gMDtcbiRjYWxsb3V0LXBhZGRpbmc6IDFyZW07XG4kY2FsbG91dC1mb250LWNvbG9yOiAkYm9keS1mb250LWNvbG9yO1xuJGNhbGxvdXQtZm9udC1jb2xvci1hbHQ6ICRib2R5LWJhY2tncm91bmQ7XG4kY2FsbG91dC1yYWRpdXM6ICRnbG9iYWwtcmFkaXVzO1xuJGNhbGxvdXQtbGluay10aW50OiAzMCU7XG5cbi8vIDE0LiBDbG9zZSBCdXR0b25cbi8vIC0tLS0tLS0tLS0tLS0tLS1cblxuJGNsb3NlYnV0dG9uLXBvc2l0aW9uOiByaWdodCB0b3A7XG4kY2xvc2VidXR0b24tb2Zmc2V0LWhvcml6b250YWw6IDFyZW07XG4kY2xvc2VidXR0b24tb2Zmc2V0LXZlcnRpY2FsOiAwLjVyZW07XG4kY2xvc2VidXR0b24tc2l6ZTogMmVtO1xuJGNsb3NlYnV0dG9uLWxpbmVoZWlnaHQ6IDE7XG4kY2xvc2VidXR0b24tY29sb3I6ICRkYXJrLWdyYXk7XG4kY2xvc2VidXR0b24tY29sb3ItaG92ZXI6ICRibGFjaztcblxuLy8gMTUuIERyaWxsZG93blxuLy8gLS0tLS0tLS0tLS0tLVxuXG4kZHJpbGxkb3duLXRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjE1cyBsaW5lYXI7XG4kZHJpbGxkb3duLWFycm93czogdHJ1ZTtcbiRkcmlsbGRvd24tYXJyb3ctY29sb3I6ICRwcmltYXJ5LWNvbG9yO1xuJGRyaWxsZG93bi1iYWNrZ3JvdW5kOiAkd2hpdGU7XG5cbi8vIDE2LiBEcm9wZG93blxuLy8gLS0tLS0tLS0tLS0tXG5cbiRkcm9wZG93bi1wYWRkaW5nOiAxcmVtO1xuJGRyb3Bkb3duLWJvcmRlcjogMXB4IHNvbGlkICRtZWRpdW0tZ3JheTtcbiRkcm9wZG93bi1mb250LXNpemU6IDFyZW07XG4kZHJvcGRvd24td2lkdGg6IDMwMHB4O1xuJGRyb3Bkb3duLXJhZGl1czogJGdsb2JhbC1yYWRpdXM7XG4kZHJvcGRvd24tc2l6ZXM6IChcbiAgICAgICAgdGlueTogMTAwcHgsXG4gICAgICAgIHNtYWxsOiAyMDBweCxcbiAgICAgICAgbGFyZ2U6IDQwMHB4LFxuKTtcblxuLy8gMTcuIERyb3Bkb3duIE1lbnVcbi8vIC0tLS0tLS0tLS0tLS0tLS0tXG5cbiRkcm9wZG93bm1lbnUtYXJyb3dzOiB0cnVlO1xuJGRyb3Bkb3dubWVudS1hcnJvdy1jb2xvcjogJGFuY2hvci1jb2xvcjtcbiRkcm9wZG93bm1lbnUtbWluLXdpZHRoOiAyMDBweDtcbiRkcm9wZG93bm1lbnUtYmFja2dyb3VuZDogJHdoaXRlO1xuJGRyb3Bkb3dubWVudS1ib3JkZXI6IDFweCBzb2xpZCAkbWVkaXVtLWdyYXk7XG5cbi8vIDE4LiBGbGV4IFZpZGVvXG4vLyAtLS0tLS0tLS0tLS0tLVxuXG4kZmxleHZpZGVvLW1hcmdpbi1ib3R0b206IHJlbS1jYWxjKDE2KTtcbiRmbGV4dmlkZW8tcmF0aW86IDQgYnkgMztcbiRmbGV4dmlkZW8tcmF0aW8td2lkZXNjcmVlbjogMTYgYnkgOTtcblxuLy8gMTkuIEZvcm1zXG4vLyAtLS0tLS0tLS1cblxuJGZpZWxkc2V0LWJvcmRlcjogMXB4IHNvbGlkICRtZWRpdW0tZ3JheTtcbiRmaWVsZHNldC1wYWRkaW5nOiByZW0tY2FsYygyMCk7XG4kZmllbGRzZXQtbWFyZ2luOiByZW0tY2FsYygxOCAwKTtcbiRsZWdlbmQtcGFkZGluZzogcmVtLWNhbGMoMCAzKTtcbiRmb3JtLXNwYWNpbmc6IHJlbS1jYWxjKDE2KTtcbiRoZWxwdGV4dC1jb2xvcjogJGJsYWNrO1xuJGhlbHB0ZXh0LWZvbnQtc2l6ZTogcmVtLWNhbGMoMTMpO1xuJGhlbHB0ZXh0LWZvbnQtc3R5bGU6IGl0YWxpYztcbiRpbnB1dC1wcmVmaXgtY29sb3I6ICRibGFjaztcbiRpbnB1dC1wcmVmaXgtYmFja2dyb3VuZDogJGxpZ2h0LWdyYXk7XG4kaW5wdXQtcHJlZml4LWJvcmRlcjogMXB4IHNvbGlkICRtZWRpdW0tZ3JheTtcbiRpbnB1dC1wcmVmaXgtcGFkZGluZzogMXJlbTtcbiRmb3JtLWxhYmVsLWNvbG9yOiAkYmxhY2s7XG4kZm9ybS1sYWJlbC1mb250LXNpemU6IHJlbS1jYWxjKDE0KTtcbiRmb3JtLWxhYmVsLWZvbnQtd2VpZ2h0OiAkZ2xvYmFsLXdlaWdodC1ub3JtYWw7XG4kZm9ybS1sYWJlbC1saW5lLWhlaWdodDogMS44O1xuJHNlbGVjdC1iYWNrZ3JvdW5kOiAkd2hpdGU7XG4kc2VsZWN0LXRyaWFuZ2xlLWNvbG9yOiAkZGFyay1ncmF5O1xuJHNlbGVjdC1yYWRpdXM6ICRnbG9iYWwtcmFkaXVzO1xuJGlucHV0LWNvbG9yOiAkYmxhY2s7XG4kaW5wdXQtcGxhY2Vob2xkZXItY29sb3I6ICRtZWRpdW0tZ3JheTtcbiRpbnB1dC1mb250LWZhbWlseTogaW5oZXJpdDtcbiRpbnB1dC1mb250LXNpemU6IHJlbS1jYWxjKDE2KTtcbiRpbnB1dC1iYWNrZ3JvdW5kOiAkd2hpdGU7XG4kaW5wdXQtYmFja2dyb3VuZC1mb2N1czogJHdoaXRlO1xuJGlucHV0LWJhY2tncm91bmQtZGlzYWJsZWQ6ICRsaWdodC1ncmF5O1xuJGlucHV0LWJvcmRlcjogMXB4IHNvbGlkICRtZWRpdW0tZ3JheTtcbiRpbnB1dC1ib3JkZXItZm9jdXM6IDFweCBzb2xpZCAkZGFyay1ncmF5O1xuJGlucHV0LXNoYWRvdzogaW5zZXQgMCAxcHggMnB4IHJnYmEoJGJsYWNrLCAwLjEpO1xuJGlucHV0LXNoYWRvdy1mb2N1czogMCAwIDVweCAkbWVkaXVtLWdyYXk7XG4kaW5wdXQtY3Vyc29yLWRpc2FibGVkOiBub3QtYWxsb3dlZDtcbiRpbnB1dC10cmFuc2l0aW9uOiBib3gtc2hhZG93IDAuNXMsIGJvcmRlci1jb2xvciAwLjI1cyBlYXNlLWluLW91dDtcbiRpbnB1dC1udW1iZXItc3Bpbm5lcnM6IHRydWU7XG4kaW5wdXQtcmFkaXVzOiAkZ2xvYmFsLXJhZGl1cztcblxuLy8gMjAuIExhYmVsXG4vLyAtLS0tLS0tLS1cblxuJGxhYmVsLWJhY2tncm91bmQ6ICRwcmltYXJ5LWNvbG9yO1xuJGxhYmVsLWNvbG9yOiBmb3JlZ3JvdW5kKCRsYWJlbC1iYWNrZ3JvdW5kKTtcbiRsYWJlbC1mb250LXNpemU6IDAuOHJlbTtcbiRsYWJlbC1wYWRkaW5nOiAwLjMzMzMzcmVtIDAuNXJlbTtcbiRsYWJlbC1yYWRpdXM6ICRnbG9iYWwtcmFkaXVzO1xuXG4vLyAyMS4gTWVkaWEgT2JqZWN0XG4vLyAtLS0tLS0tLS0tLS0tLS0tXG5cbiRtZWRpYW9iamVjdC1tYXJnaW4tYm90dG9tOiAkZ2xvYmFsLW1hcmdpbjtcbiRtZWRpYW9iamVjdC1zZWN0aW9uLXBhZGRpbmc6ICRnbG9iYWwtcGFkZGluZztcbiRtZWRpYW9iamVjdC1pbWFnZS13aWR0aC1zdGFja2VkOiAxMDAlO1xuXG4vLyAyMi4gTWVudVxuLy8gLS0tLS0tLS1cblxuJG1lbnUtbWFyZ2luOiAwO1xuJG1lbnUtbWFyZ2luLW5lc3RlZDogMXJlbTtcbiRtZW51LWl0ZW0tcGFkZGluZzogMC43cmVtIDFyZW07XG4kbWVudS1pdGVtLWNvbG9yLWFjdGl2ZTogJHdoaXRlO1xuJG1lbnUtaXRlbS1iYWNrZ3JvdW5kLWFjdGl2ZTogbWFwLWdldCgkZm91bmRhdGlvbi1wYWxldHRlLCBwcmltYXJ5KTtcbiRtZW51LWljb24tc3BhY2luZzogMC4yNXJlbTtcblxuLy8gMjMuIE1ldGVyXG4vLyAtLS0tLS0tLS1cblxuJG1ldGVyLWhlaWdodDogMXJlbTtcbiRtZXRlci1yYWRpdXM6ICRnbG9iYWwtcmFkaXVzO1xuJG1ldGVyLWJhY2tncm91bmQ6ICRtZWRpdW0tZ3JheTtcbiRtZXRlci1maWxsLWdvb2Q6ICRzdWNjZXNzLWNvbG9yO1xuJG1ldGVyLWZpbGwtbWVkaXVtOiAkd2FybmluZy1jb2xvcjtcbiRtZXRlci1maWxsLWJhZDogJGFsZXJ0LWNvbG9yO1xuXG4vLyAyNC4gT2ZmLWNhbnZhc1xuLy8gLS0tLS0tLS0tLS0tLS1cblxuJG9mZmNhbnZhcy1zaXplOiAzMDBweDtcbiRvZmZjYW52YXMtYmFja2dyb3VuZDogI2Y1ZjVmNTtcbiRvZmZjYW52YXMtemluZGV4OiAtMTtcbiRvZmZjYW52YXMtdHJhbnNpdGlvbi1sZW5ndGg6IDAuNXM7XG4kb2ZmY2FudmFzLXRyYW5zaXRpb24tdGltaW5nOiBlYXNlO1xuJG9mZmNhbnZhcy1maXhlZC1yZXZlYWw6IHRydWU7XG4kb2ZmY2FudmFzLWV4aXQtYmFja2dyb3VuZDogcmdiYSgkd2hpdGUsIDAuMjUpO1xuJG1haW5jb250ZW50LWNsYXNzOiAnb2ZmLWNhbnZhcy1jb250ZW50JztcbiRtYWluY29udGVudC1zaGFkb3c6IDAgMCAxMHB4IHJnYmEoJGJsYWNrLCAwLjUpO1xuXG4vLyAyNS4gT3JiaXRcbi8vIC0tLS0tLS0tLVxuXG4kb3JiaXQtYnVsbGV0LWJhY2tncm91bmQ6ICRtZWRpdW0tZ3JheTtcbiRvcmJpdC1idWxsZXQtYmFja2dyb3VuZC1hY3RpdmU6ICRkYXJrLWdyYXk7XG4kb3JiaXQtYnVsbGV0LWRpYW1ldGVyOiAxLjJyZW07XG4kb3JiaXQtYnVsbGV0LW1hcmdpbjogMC4xcmVtO1xuJG9yYml0LWJ1bGxldC1tYXJnaW4tdG9wOiAwLjhyZW07XG4kb3JiaXQtYnVsbGV0LW1hcmdpbi1ib3R0b206IDAuOHJlbTtcbiRvcmJpdC1jYXB0aW9uLWJhY2tncm91bmQ6IHJnYmEoJGJsYWNrLCAwLjUpO1xuJG9yYml0LWNhcHRpb24tcGFkZGluZzogMXJlbTtcbiRvcmJpdC1jb250cm9sLWJhY2tncm91bmQtaG92ZXI6IHJnYmEoJGJsYWNrLCAwLjUpO1xuJG9yYml0LWNvbnRyb2wtcGFkZGluZzogMXJlbTtcbiRvcmJpdC1jb250cm9sLXppbmRleDogMTA7XG5cbi8vIDI2LiBQYWdpbmF0aW9uXG4vLyAtLS0tLS0tLS0tLS0tLVxuXG4kcGFnaW5hdGlvbi1mb250LXNpemU6IHJlbS1jYWxjKDE0KTtcbiRwYWdpbmF0aW9uLW1hcmdpbi1ib3R0b206ICRnbG9iYWwtbWFyZ2luO1xuJHBhZ2luYXRpb24taXRlbS1jb2xvcjogJGJsYWNrO1xuJHBhZ2luYXRpb24taXRlbS1wYWRkaW5nOiByZW0tY2FsYygzIDEwKTtcbiRwYWdpbmF0aW9uLWl0ZW0tc3BhY2luZzogcmVtLWNhbGMoMSk7XG4kcGFnaW5hdGlvbi1yYWRpdXM6ICRnbG9iYWwtcmFkaXVzO1xuJHBhZ2luYXRpb24taXRlbS1iYWNrZ3JvdW5kLWhvdmVyOiAkbGlnaHQtZ3JheTtcbiRwYWdpbmF0aW9uLWl0ZW0tYmFja2dyb3VuZC1jdXJyZW50OiAkcHJpbWFyeS1jb2xvcjtcbiRwYWdpbmF0aW9uLWl0ZW0tY29sb3ItY3VycmVudDogZm9yZWdyb3VuZCgkcGFnaW5hdGlvbi1pdGVtLWJhY2tncm91bmQtY3VycmVudCk7XG4kcGFnaW5hdGlvbi1pdGVtLWNvbG9yLWRpc2FibGVkOiAkbWVkaXVtLWdyYXk7XG4kcGFnaW5hdGlvbi1lbGxpcHNpcy1jb2xvcjogJGJsYWNrO1xuJHBhZ2luYXRpb24tbW9iaWxlLWl0ZW1zOiBmYWxzZTtcbiRwYWdpbmF0aW9uLWFycm93czogdHJ1ZTtcblxuLy8gMjcuIFByb2dyZXNzIEJhclxuLy8gLS0tLS0tLS0tLS0tLS0tLVxuXG4kcHJvZ3Jlc3MtaGVpZ2h0OiAxcmVtO1xuJHByb2dyZXNzLWJhY2tncm91bmQ6ICRtZWRpdW0tZ3JheTtcbiRwcm9ncmVzcy1tYXJnaW4tYm90dG9tOiAkZ2xvYmFsLW1hcmdpbjtcbiRwcm9ncmVzcy1tZXRlci1iYWNrZ3JvdW5kOiAkcHJpbWFyeS1jb2xvcjtcbiRwcm9ncmVzcy1yYWRpdXM6ICRnbG9iYWwtcmFkaXVzO1xuXG4vLyAyOC4gUmV2ZWFsXG4vLyAtLS0tLS0tLS0tXG5cbiRyZXZlYWwtYmFja2dyb3VuZDogJHdoaXRlO1xuJHJldmVhbC13aWR0aDogNjAwcHg7XG4kcmV2ZWFsLW1heC13aWR0aDogJGdsb2JhbC13aWR0aDtcbiRyZXZlYWwtcGFkZGluZzogJGdsb2JhbC1wYWRkaW5nO1xuJHJldmVhbC1ib3JkZXI6IDFweCBzb2xpZCAkbWVkaXVtLWdyYXk7XG4kcmV2ZWFsLXJhZGl1czogJGdsb2JhbC1yYWRpdXM7XG4kcmV2ZWFsLXppbmRleDogMTAwNTtcbiRyZXZlYWwtb3ZlcmxheS1iYWNrZ3JvdW5kOiByZ2JhKCRibGFjaywgMC40NSk7XG5cbi8vIDI5LiBTbGlkZXJcbi8vIC0tLS0tLS0tLS1cblxuJHNsaWRlci13aWR0aC12ZXJ0aWNhbDogMC41cmVtO1xuJHNsaWRlci10cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlLWluLW91dDtcbiRzbGlkZXItaGVpZ2h0OiAwLjVyZW07XG4kc2xpZGVyLWJhY2tncm91bmQ6ICRsaWdodC1ncmF5O1xuJHNsaWRlci1maWxsLWJhY2tncm91bmQ6ICRtZWRpdW0tZ3JheTtcbiRzbGlkZXItaGFuZGxlLWhlaWdodDogMS40cmVtO1xuJHNsaWRlci1oYW5kbGUtd2lkdGg6IDEuNHJlbTtcbiRzbGlkZXItaGFuZGxlLWJhY2tncm91bmQ6ICRwcmltYXJ5LWNvbG9yO1xuJHNsaWRlci1vcGFjaXR5LWRpc2FibGVkOiAwLjI1O1xuJHNsaWRlci1yYWRpdXM6ICRnbG9iYWwtcmFkaXVzO1xuXG4vLyAzMC4gU3dpdGNoXG4vLyAtLS0tLS0tLS0tXG5cbiRzd2l0Y2gtYmFja2dyb3VuZDogJG1lZGl1bS1ncmF5O1xuJHN3aXRjaC1iYWNrZ3JvdW5kLWFjdGl2ZTogJHByaW1hcnktY29sb3I7XG4kc3dpdGNoLWhlaWdodDogMnJlbTtcbiRzd2l0Y2gtaGVpZ2h0LXRpbnk6IDEuNXJlbTtcbiRzd2l0Y2gtaGVpZ2h0LXNtYWxsOiAxLjc1cmVtO1xuJHN3aXRjaC1oZWlnaHQtbGFyZ2U6IDIuNXJlbTtcbiRzd2l0Y2gtcmFkaXVzOiAkZ2xvYmFsLXJhZGl1cztcbiRzd2l0Y2gtbWFyZ2luOiAkZ2xvYmFsLW1hcmdpbjtcbiRzd2l0Y2gtcGFkZGxlLWJhY2tncm91bmQ6ICR3aGl0ZTtcbiRzd2l0Y2gtcGFkZGxlLW9mZnNldDogMC4yNXJlbTtcbiRzd2l0Y2gtcGFkZGxlLXJhZGl1czogJGdsb2JhbC1yYWRpdXM7XG4kc3dpdGNoLXBhZGRsZS10cmFuc2l0aW9uOiBhbGwgMC4yNXMgZWFzZS1vdXQ7XG5cbi8vIDMxLiBUYWJsZVxuLy8gLS0tLS0tLS0tXG5cbiR0YWJsZS1iYWNrZ3JvdW5kOiAkd2hpdGU7XG4kdGFibGUtY29sb3Itc2NhbGU6IDUlO1xuJHRhYmxlLWJvcmRlcjogMXB4IHNvbGlkIHNtYXJ0LXNjYWxlKCR0YWJsZS1iYWNrZ3JvdW5kLCAkdGFibGUtY29sb3Itc2NhbGUpO1xuJHRhYmxlLXBhZGRpbmc6IHJlbS1jYWxjKDggMTAgMTApO1xuJHRhYmxlLWhvdmVyLXNjYWxlOiAyJTtcbiR0YWJsZS1yb3ctaG92ZXI6IGRhcmtlbigkdGFibGUtYmFja2dyb3VuZCwgJHRhYmxlLWhvdmVyLXNjYWxlKTtcbiR0YWJsZS1yb3ctc3RyaXBlLWhvdmVyOiBkYXJrZW4oJHRhYmxlLWJhY2tncm91bmQsICR0YWJsZS1jb2xvci1zY2FsZSArICR0YWJsZS1ob3Zlci1zY2FsZSk7XG4kdGFibGUtc3RyaXBlZC1iYWNrZ3JvdW5kOiBzbWFydC1zY2FsZSgkdGFibGUtYmFja2dyb3VuZCwgJHRhYmxlLWNvbG9yLXNjYWxlKTtcbiR0YWJsZS1zdHJpcGU6IGV2ZW47XG4kdGFibGUtaGVhZC1iYWNrZ3JvdW5kOiBzbWFydC1zY2FsZSgkdGFibGUtYmFja2dyb3VuZCwgJHRhYmxlLWNvbG9yLXNjYWxlIC8gMik7XG4kdGFibGUtZm9vdC1iYWNrZ3JvdW5kOiBzbWFydC1zY2FsZSgkdGFibGUtYmFja2dyb3VuZCwgJHRhYmxlLWNvbG9yLXNjYWxlKTtcbiR0YWJsZS1oZWFkLWZvbnQtY29sb3I6ICRib2R5LWZvbnQtY29sb3I7XG4kc2hvdy1oZWFkZXItZm9yLXN0YWNrZWQ6IGZhbHNlO1xuXG4vLyAzMi4gVGFic1xuLy8gLS0tLS0tLS1cblxuJHRhYi1tYXJnaW46IDA7XG4kdGFiLWJhY2tncm91bmQ6ICR3aGl0ZTtcbiR0YWItYmFja2dyb3VuZC1hY3RpdmU6ICRsaWdodC1ncmF5O1xuJHRhYi1pdGVtLWZvbnQtc2l6ZTogcmVtLWNhbGMoMTIpO1xuJHRhYi1pdGVtLWJhY2tncm91bmQtaG92ZXI6ICR3aGl0ZTtcbiR0YWItaXRlbS1wYWRkaW5nOiAxLjI1cmVtIDEuNXJlbTtcbiR0YWItZXhwYW5kLW1heDogNjtcbiR0YWItY29udGVudC1iYWNrZ3JvdW5kOiAkd2hpdGU7XG4kdGFiLWNvbnRlbnQtYm9yZGVyOiAkbGlnaHQtZ3JheTtcbiR0YWItY29udGVudC1jb2xvcjogZm9yZWdyb3VuZCgkdGFiLWJhY2tncm91bmQsICRwcmltYXJ5LWNvbG9yKTtcbiR0YWItY29udGVudC1wYWRkaW5nOiAxcmVtO1xuXG4vLyAzMy4gVGh1bWJuYWlsXG4vLyAtLS0tLS0tLS0tLS0tXG5cbiR0aHVtYm5haWwtYm9yZGVyOiBzb2xpZCA0cHggJHdoaXRlO1xuJHRodW1ibmFpbC1tYXJnaW4tYm90dG9tOiAkZ2xvYmFsLW1hcmdpbjtcbiR0aHVtYm5haWwtc2hhZG93OiAwIDAgMCAxcHggcmdiYSgkYmxhY2ssIDAuMik7XG4kdGh1bWJuYWlsLXNoYWRvdy1ob3ZlcjogMCAwIDZweCAxcHggcmdiYSgkcHJpbWFyeS1jb2xvciwgMC41KTtcbiR0aHVtYm5haWwtdHJhbnNpdGlvbjogYm94LXNoYWRvdyAyMDBtcyBlYXNlLW91dDtcbiR0aHVtYm5haWwtcmFkaXVzOiAkZ2xvYmFsLXJhZGl1cztcblxuLy8gMzQuIFRpdGxlIEJhclxuLy8gLS0tLS0tLS0tLS0tLVxuXG4kdGl0bGViYXItYmFja2dyb3VuZDogJGJsYWNrO1xuJHRpdGxlYmFyLWNvbG9yOiAkd2hpdGU7XG4kdGl0bGViYXItcGFkZGluZzogMC41cmVtO1xuJHRpdGxlYmFyLXRleHQtZm9udC13ZWlnaHQ6IGJvbGQ7XG4kdGl0bGViYXItaWNvbi1jb2xvcjogJHdoaXRlO1xuJHRpdGxlYmFyLWljb24tY29sb3ItaG92ZXI6ICRtZWRpdW0tZ3JheTtcbiR0aXRsZWJhci1pY29uLXNwYWNpbmc6IDAuMjVyZW07XG5cbi8vIDM1LiBUb29sdGlwXG4vLyAtLS0tLS0tLS0tLVxuXG4kaGFzLXRpcC1mb250LXdlaWdodDogJGdsb2JhbC13ZWlnaHQtYm9sZDtcbiRoYXMtdGlwLWJvcmRlci1ib3R0b206IGRvdHRlZCAxcHggJGRhcmstZ3JheTtcbiR0b29sdGlwLWJhY2tncm91bmQtY29sb3I6ICRibGFjaztcbiR0b29sdGlwLWNvbG9yOiAkd2hpdGU7XG4kdG9vbHRpcC1wYWRkaW5nOiAwLjc1cmVtO1xuJHRvb2x0aXAtZm9udC1zaXplOiAkc21hbGwtZm9udC1zaXplO1xuJHRvb2x0aXAtcGlwLXdpZHRoOiAwLjc1cmVtO1xuJHRvb2x0aXAtcGlwLWhlaWdodDogJHRvb2x0aXAtcGlwLXdpZHRoICogMC44NjY7XG4kdG9vbHRpcC1yYWRpdXM6ICRnbG9iYWwtcmFkaXVzO1xuXG4vLyAzNi4gVG9wIEJhclxuLy8gLS0tLS0tLS0tLS1cblxuJHRvcGJhci1wYWRkaW5nOiAwLjVyZW07XG4kdG9wYmFyLWJhY2tncm91bmQ6ICRsaWdodC1ncmF5O1xuJHRvcGJhci1zdWJtZW51LWJhY2tncm91bmQ6ICR0b3BiYXItYmFja2dyb3VuZDtcbiR0b3BiYXItdGl0bGUtc3BhY2luZzogMXJlbTtcbiR0b3BiYXItaW5wdXQtd2lkdGg6IDIwMHB4O1xuJHRvcGJhci11bnN0YWNrLWJyZWFrcG9pbnQ6IG1lZGl1bTtcblxuIiwiLy8gRm91bmRhdGlvbiBmb3IgU2l0ZXMgYnkgWlVSQlxuLy8gZm91bmRhdGlvbi56dXJiLmNvbVxuLy8gTGljZW5zZWQgdW5kZXIgTUlUIE9wZW4gU291cmNlXG5cbi8vLy9cbi8vLyBAZ3JvdXAgZ3JpZFxuLy8vL1xuXG4vLy8gVGhlIG1heGltdW0gd2lkdGggb2YgYSByb3cuXG4vLy8gQHR5cGUgTnVtYmVyXG4kZ3JpZC1yb3ctd2lkdGg6ICRnbG9iYWwtd2lkdGggIWRlZmF1bHQ7XG5cbi8vLyBUaGUgZGVmYXVsdCBjb2x1bW4gY291bnQgb2YgYSBncmlkLiBDaGFuZ2luZyB0aGlzIHZhbHVlIGFmZmVjdHMgdGhlIGxvZ2ljIG9mIHRoZSBncmlkIG1peGlucywgYW5kIHRoZSBudW1iZXIgb2YgQ1NTIGNsYXNzZXMgb3V0cHV0LlxuLy8vIEB0eXBlIE51bWJlclxuJGdyaWQtY29sdW1uLWNvdW50OiAxMiAhZGVmYXVsdDtcblxuLy8vIFRoZSBhbW91bnQgb2Ygc3BhY2UgYmV0d2VlbiBjb2x1bW5zIGF0IGRpZmZlcmVudCBzY3JlZW4gc2l6ZXMuIFRvIHVzZSBqdXN0IG9uZSBzaXplLCBzZXQgdGhlIHZhcmlhYmxlIHRvIGEgbnVtYmVyIGluc3RlYWQgb2YgYSBtYXAuXG4vLy8gQHR5cGUgTWFwIHwgTGVuZ3RoXG4vLy8gQHNpbmNlIDYuMS4wXG4kZ3JpZC1jb2x1bW4tZ3V0dGVyOiAoXG4gIHNtYWxsOiAyMHB4LFxuICBtZWRpdW06IDMwcHgsXG4pICFkZWZhdWx0O1xuXG4vLy8gSWYgYHRydWVgLCB0aGUgbGFzdCBjb2x1bW4gaW4gYSByb3cgd2lsbCBhbGlnbiB0byB0aGUgb3Bwb3NpdGUgZWRnZSBvZiB0aGUgcm93LlxuLy8vIEB0eXBlIEJvb2xlYW5cbiRncmlkLWNvbHVtbi1hbGlnbi1lZGdlOiB0cnVlICFkZWZhdWx0O1xuXG4vLy8gVGhlIGhpZ2hlc3QgbnVtYmVyIG9mIGAueC11cGAgY2xhc3NlcyBhdmFpbGFibGUgd2hlbiB1c2luZyB0aGUgYmxvY2sgZ3JpZCBDU1MuXG4vLy8gQHR5cGUgTnVtYmVyXG4kYmxvY2stZ3JpZC1tYXg6IDggIWRlZmF1bHQ7XG5cbi8vIEludGVybmFsIHZhbHVlIHRvIHN0b3JlIHRoZSBlbmQgY29sdW1uIGZsb2F0IGRpcmVjdGlvblxuJC16Zi1lbmQtZmxvYXQ6IGlmKCRncmlkLWNvbHVtbi1hbGlnbi1lZGdlLCAkZ2xvYmFsLXJpZ2h0LCAkZ2xvYmFsLWxlZnQpO1xuXG4vLyBUaGUgbGFzdCBwaWVjZSB0byB0cmFuc2l0aW9uIHRoZSByZXNwb25zaXZlIGd1dHRlciBmZWF0dXJlXG4vLyBSZW1vdmUgdGhpcyBpbiA2LjNcbiRncmlkLWNvbHVtbi1yZXNwb25zaXZlLWd1dHRlcjogbnVsbCAhZGVmYXVsdDtcbkBpZiAkZ3JpZC1jb2x1bW4tcmVzcG9uc2l2ZS1ndXR0ZXIge1xuICAvLyBzY3NzLWxpbnQ6ZGlzYWJsZSBEZWJ1Z1N0YXRlbWVudFxuICBAd2FybiAnUmVuYW1lICRncmlkLWNvbHVtbi1yZXNwb25zaXZlLWd1dHRlciB0byAkZ3JpZC1jb2x1bW4tZ3V0dGVyIHRvIHJlbW92ZSB0aGlzIHdhcm5pbmcuJztcbiAgJGdyaWQtY29sdW1uLWd1dHRlcjogJGdyaWQtY29sdW1uLXJlc3BvbnNpdmUtZ3V0dGVyO1xufVxuXG4vLyBJZiBhIHNpbmdsZSB2YWx1ZSBpcyBwYXNzZWQgYXMgYSBndXR0ZXIsIGNvbnZlcnQgaXQgdG8gYSBtYXAgc28gdGhlIGNvZGUga25vd3Mgd2hhdCB0byBkbyB3aXRoIGl0XG5AaWYgdHlwZS1vZigkZ3JpZC1jb2x1bW4tZ3V0dGVyKSA9PSAnbnVtYmVyJyB7XG4gICRncmlkLWNvbHVtbi1ndXR0ZXI6IChcbiAgICBzbWFsbDogJGdyaWQtY29sdW1uLWd1dHRlcixcbiAgKTtcbn1cblxuQGltcG9ydCAncm93JztcbkBpbXBvcnQgJ2NvbHVtbic7XG5AaW1wb3J0ICdzaXplJztcbkBpbXBvcnQgJ3Bvc2l0aW9uJztcbkBpbXBvcnQgJ2d1dHRlcic7XG5AaW1wb3J0ICdjbGFzc2VzJztcbkBpbXBvcnQgJ2xheW91dCc7XG5cbkBpbXBvcnQgJ2ZsZXgtZ3JpZCc7XG4iLCIvLyBGb3VuZGF0aW9uIGZvciBTaXRlcyBieSBaVVJCXG4vLyBmb3VuZGF0aW9uLnp1cmIuY29tXG4vLyBMaWNlbnNlZCB1bmRlciBNSVQgT3BlbiBTb3VyY2VcblxuLy8vL1xuLy8vIEBncm91cCBncmlkXG4vLy8vXG5cbi8vLyBDaGFuZ2UgdGhlIGJlaGF2aW9yIG9mIGNvbHVtbnMgZGVmaW5lZCBpbnNpZGUgdGhpcyBtaXhpbiB0byB1c2UgYSBkaWZmZXJlbnQgY29sdW1uIGNvdW50LlxuLy8vIEBjb250ZW50XG4vLy9cbi8vLyBAcGFyYW0ge051bWJlcn0gJGNvbHVtbnMgLSBOdW1iZXIgb2YgY29sdW1ucyB0byB1c2UuXG4vLy8gQHBhcmFtIHtCb29sZWFufSAkcm9vdCBbZmFsc2VdXG4vLy8gICBJZiBgZmFsc2VgLCBzZWxlY3RvcnMgaW5zaWRlIHRoaXMgbWl4aW4gd2lsbCBuZXN0IGluc2lkZSB0aGUgcGFyZW50IHNlbGVjdG9yLlxuLy8vICAgSWYgYHRydWVgLCBzZWxlY3RvcnMgd2lsbCBub3QgbmVzdC5cbkBtaXhpbiBncmlkLWNvbnRleHQoXG4gICRjb2x1bW5zLFxuICAkcm9vdDogZmFsc2Vcbikge1xuICAvLyBTdG9yZSB0aGUgY3VycmVudCBjb2x1bW4gY291bnQgc28gaXQgY2FuIGJlIHJlLXNldCBsYXRlclxuICAkb2xkLWdyaWQtY29sdW1uLWNvdW50OiAkZ3JpZC1jb2x1bW4tY291bnQ7XG4gICRncmlkLWNvbHVtbi1jb3VudDogJGNvbHVtbnMgIWdsb2JhbDtcblxuICBAaWYgJHJvb3Qge1xuICAgIEBhdC1yb290IHsgQGNvbnRlbnQ7IH1cbiAgfVxuICBAZWxzZSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cblxuICAvLyBSZXN0b3JlIHRoZSBvbGQgY29sdW1uIGNvdW50XG4gICRncmlkLWNvbHVtbi1jb3VudDogJG9sZC1ncmlkLWNvbHVtbi1jb3VudDtcbn1cblxuLy8vIENyZWF0ZXMgYSBncmlkIHJvdy5cbi8vLyBAY29udGVudFxuLy8vXG4vLy8gQHBhcmFtIHtOdW1iZXJ9ICRjb2x1bW5zIFtudWxsXSAtIENvbHVtbiBjb3VudCBmb3IgdGhpcyByb3cuIGBudWxsYCB3aWxsIHVzZSB0aGUgZGVmYXVsdCBjb2x1bW4gY291bnQuXG4vLy8gQHBhcmFtIHtLZXl3b3Jkc30gJGJlaGF2aW9yIFtudWxsXVxuLy8vICAgTW9kaWZpY2F0aW9ucyB0byB0aGUgZGVmYXVsdCBncmlkIHN0eWxlcy4gYG5lc3RgIGluZGljYXRlcyB0aGUgcm93IHdpbGwgYmUgcGxhY2VkIGluc2lkZSBhbm90aGVyIHJvdy4gYGNvbGxhcHNlYCBpbmRpY2F0ZXMgdGhhdCB0aGUgY29sdW1ucyBpbnNpZGUgdGhpcyByb3cgd2lsbCBub3QgaGF2ZSBwYWRkaW5nLiBgbmVzdCBjb2xsYXBzZWAgY29tYmluZXMgYm90aCBiZWhhdmlvcnMuXG4vLy8gQHBhcmFtIHtOdW1iZXJ9ICR3aWR0aCBbJGdyaWQtcm93LXdpZHRoXSAtIE1heGltdW0gd2lkdGggb2YgdGhlIHJvdy5cbi8vLyBAcGFyYW0ge0Jvb2xlYW59ICRjZiBbdHJ1ZV0gLSBXaGV0aGVyIG9yIG5vdCB0byBpbmNsdWRlIGEgY2xlYXJmaXguXG4vLy8gQHBhcmFtIHtOdW1iZXJ9ICRndXR0ZXIgWyRncmlkLWNvbHVtbi1ndXR0ZXJdIC0gR3V0dGVyIHRvIHVzZSB3aGVuIGludmVydGluZyBtYXJnaW5zLCBpbiBjYXNlIHRoZSByb3cgaXMgbmVzdGVkLlxuQG1peGluIGdyaWQtcm93KFxuICAkY29sdW1uczogbnVsbCxcbiAgJGJlaGF2aW9yOiBudWxsLFxuICAkd2lkdGg6ICRncmlkLXJvdy13aWR0aCxcbiAgJGNmOiB0cnVlLFxuICAkZ3V0dGVyOiAkZ3JpZC1jb2x1bW4tZ3V0dGVyXG4pIHtcbiAgJG1hcmdpbjogYXV0bztcblxuICBAaWYgaW5kZXgoJGJlaGF2aW9yLCBuZXN0KSAhPSBudWxsIHtcbiAgICBAaW5jbHVkZSBncmlkLXJvdy1uZXN0KCRndXR0ZXIpO1xuXG4gICAgQGlmIGluZGV4KCRiZWhhdmlvciwgY29sbGFwc2UpICE9IG51bGwge1xuICAgICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgfVxuICB9XG4gIEBlbHNlIHtcbiAgICBtYXgtd2lkdGg6ICR3aWR0aDtcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIH1cblxuICBAaWYgJGNmIHtcbiAgICBAaW5jbHVkZSBjbGVhcmZpeDtcbiAgfVxuXG4gIEBpZiAkY29sdW1ucyAhPSBudWxsIHtcbiAgICBAaW5jbHVkZSBncmlkLWNvbnRleHQoJGNvbHVtbnMpIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfVxufVxuXG4vLy8gSW52ZXJ0cyB0aGUgbWFyZ2lucyBvZiBhIHJvdyB0byBuZXN0IGl0IGluc2lkZSBvZiBhIGNvbHVtbi5cbi8vL1xuLy8vIEBwYXJhbSB7TWFwfG51bGx9ICRndXR0ZXIgW251bGxdIC0gR3V0dGVyIHZhbHVlIHRvIHVzZSB3aGVuIGludmVydGluZyB0aGUgbWFyZ2lucy4gU2V0IHRvIGBudWxsYCB0byByZWZlciB0byB0aGUgcmVzcG9uc2l2ZSBndXR0ZXIgc2V0dGluZ3MuXG5AbWl4aW4gZ3JpZC1yb3ctbmVzdCgkZ3V0dGVyOiAkZ3JpZC1jb2x1bW4tZ3V0dGVyKSB7XG4gIEBpZiB0eXBlLW9mKCRndXR0ZXIpID09ICdudW1iZXInIHtcbiAgICAkZ3V0dGVyOiAoJC16Zi16ZXJvLWJyZWFrcG9pbnQ6ICRndXR0ZXIpO1xuICB9XG5cbiAgQGVhY2ggJGJyZWFrcG9pbnQsICR2YWx1ZSBpbiAkZ3V0dGVyIHtcbiAgICAkbWFyZ2luOiByZW0tY2FsYygkdmFsdWUpIC8gMiAqIC0xO1xuICAgIG1heC13aWR0aDogbm9uZTtcblxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJGJyZWFrcG9pbnQpIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAkbWFyZ2luO1xuICAgICAgbWFyZ2luLXJpZ2h0OiAkbWFyZ2luO1xuICAgIH1cbiAgfVxufVxuIiwiLy8gRm91bmRhdGlvbiBmb3IgU2l0ZXMgYnkgWlVSQlxuLy8gZm91bmRhdGlvbi56dXJiLmNvbVxuLy8gTGljZW5zZWQgdW5kZXIgTUlUIE9wZW4gU291cmNlXG5cbi8vLy9cbi8vLyBAZ3JvdXAgZ3JpZFxuLy8vL1xuXG4vLy8gQ2FsY3VsYXRlcyB0aGUgd2lkdGggb2YgYSBjb2x1bW4gYmFzZWQgb24gYSBudW1iZXIgb2YgZmFjdG9ycy5cbi8vL1xuLy8vIEBwYXJhbSB7TnVtYmVyfExpc3R9ICRjb2x1bW5zXG4vLy8gICBXaWR0aCBvZiB0aGUgY29sdW1uLiBBY2NlcHRzIG11bHRpcGxlIHZhbHVlczpcbi8vLyAgIC0gQSBwZXJjZW50YWdlIHZhbHVlIHdpbGwgbWFrZSB0aGUgY29sdW1uIHRoYXQgZXhhY3Qgc2l6ZS5cbi8vLyAgIC0gQSBzaW5nbGUgZGlnaXQgd2lsbCBtYWtlIHRoZSBjb2x1bW4gc3BhbiB0aGF0IG51bWJlciBvZiBjb2x1bW5zIHdpZGUsIHRha2luZyBpbnRvIGFjY291bnQgdGhlIGNvbHVtbiBjb3VudCBvZiB0aGUgcGFyZW50IHJvdy5cbi8vLyAgIC0gQSBzdHJpbmcgb2YgdGhlIGZvcm1hdCBcInggb2YgeVwiIHdpbGwgbWFrZSBhIGNvbHVtbiB0aGF0IGlzICp4KiBjb2x1bW5zIHdpZGUsIGFzc3VtaW5nICp5KiB0b3RhbCBjb2x1bW5zIGZvciB0aGUgcGFyZW50LlxuLy8vXG4vLy8gQHJldHVybnMge051bWJlcn0gQSBjYWxjdWxhdGVkIHBlcmNlbnRhZ2UgdmFsdWUuXG5AZnVuY3Rpb24gZ3JpZC1jb2x1bW4oJGNvbHVtbnMpIHtcbiAgJHdpZHRoOiAwJTtcblxuICAvLyBQYXJzaW5nIHBlcmNlbnRzLCBkZWNpbWFscywgYW5kIGNvbHVtbiBjb3VudHNcbiAgQGlmIHR5cGUtb2YoJGNvbHVtbnMpID09ICdudW1iZXInIHtcbiAgICBAaWYgdW5pdCgkY29sdW1ucykgPT0gJyUnIHtcbiAgICAgICR3aWR0aDogJGNvbHVtbnM7XG4gICAgfVxuICAgIEBlbHNlIGlmICRjb2x1bW5zIDwgMSB7XG4gICAgICAkd2lkdGg6IHBlcmNlbnRhZ2UoJGNvbHVtbnMpO1xuICAgIH1cbiAgICBAZWxzZSB7XG4gICAgICAkd2lkdGg6IHBlcmNlbnRhZ2UoJGNvbHVtbnMgLyAkZ3JpZC1jb2x1bW4tY291bnQpO1xuICAgIH1cbiAgfVxuXG4gIC8vIFBhcnNpbmcgXCJuIG9mIG5cIiBleHByZXNzaW9uc1xuICBAZWxzZSBpZiB0eXBlLW9mKCRjb2x1bW5zKSA9PSAnbGlzdCcge1xuICAgIEBpZiBsZW5ndGgoJGNvbHVtbnMpICE9IDMge1xuICAgICAgQGVycm9yICdXcm9uZyBzeW50YXggZm9yIGdyaWQtY29sdW1uKCkuIFVzZSB0aGUgZm9ybWF0IFwibiBvZiBuXCIuJztcbiAgICB9XG4gICAgQGVsc2Uge1xuICAgICAgJHdpZHRoOiBwZXJjZW50YWdlKG50aCgkY29sdW1ucywgMSkgLyBudGgoJGNvbHVtbnMsIDMpKTtcbiAgICB9XG4gIH1cblxuICAvLyBBbnl0aGluZyBlbHNlIGlzIGluY29ycmVjdFxuICBAZWxzZSB7XG4gICAgQGVycm9yICdXcm9uZyBzeW50YXggZm9yIGdyaWQtY29sdW1uKCkuIFVzZSBhIG51bWJlciwgZGVjaW1hbCwgcGVyY2VudGFnZSwgb3IgXCJuIG9mIG5cIi4nO1xuICB9XG5cbiAgQHJldHVybiAkd2lkdGg7XG59XG5cbi8vLyBDcmVhdGVzIGEgZ3JpZCBjb2x1bW4uXG4vLy9cbi8vLyBAcGFyYW0ge01peGVkfSAkY29sdW1ucyBbJGdyaWQtY29sdW1uLWNvdW50XSAtIFdpZHRoIG9mIHRoZSBjb2x1bW4uIFJlZmVyIHRvIHRoZSBgZ3JpZC1jb2x1bW4oKWAgZnVuY3Rpb24gdG8gc2VlIHBvc3NpYmxlIHZhbHVlcy5cbi8vLyBAcGFyYW0ge051bWJlcn0gJGd1dHRlciBbJGdyaWQtY29sdW1uLWd1dHRlcl0gLSBTcGFjaW5nIGJldHdlZW4gY29sdW1ucy5cbkBtaXhpbiBncmlkLWNvbHVtbihcbiAgJGNvbHVtbnM6ICRncmlkLWNvbHVtbi1jb3VudCxcbiAgJGd1dHRlcjogJGdyaWQtY29sdW1uLWd1dHRlclxuKSB7XG4gIEBpbmNsdWRlIGdyaWQtY29sdW1uLXNpemUoJGNvbHVtbnMpO1xuICBmbG9hdDogJGdsb2JhbC1sZWZ0O1xuXG4gIC8vIEd1dHRlcnNcbiAgQGlmIHR5cGUtb2YoJGd1dHRlcikgPT0gJ21hcCcge1xuICAgIEBlYWNoICRicmVha3BvaW50LCAkdmFsdWUgaW4gJGd1dHRlciB7XG4gICAgICAkcGFkZGluZzogcmVtLWNhbGMoJHZhbHVlKSAvIDI7XG5cbiAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJGJyZWFrcG9pbnQpIHtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAkcGFkZGluZztcbiAgICAgICAgcGFkZGluZy1yaWdodDogJHBhZGRpbmc7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIEBlbHNlIGlmIHR5cGUtb2YoJGd1dHRlcikgPT0gJ251bWJlcicgYW5kIHN0cmlwLXVuaXQoJGd1dHRlcikgPiAwIHtcbiAgICAkcGFkZGluZzogcmVtLWNhbGMoJGd1dHRlcikgLyAyO1xuICAgIHBhZGRpbmctbGVmdDogJHBhZGRpbmc7XG4gICAgcGFkZGluZy1yaWdodDogJHBhZGRpbmc7XG4gIH1cblxuICAvLyBMYXN0IGNvbHVtbiBhbGlnbm1lbnRcbiAgQGlmICRncmlkLWNvbHVtbi1hbGlnbi1lZGdlIHtcbiAgICAmOmxhc3QtY2hpbGQ6bm90KDpmaXJzdC1jaGlsZCkge1xuICAgICAgZmxvYXQ6ICRnbG9iYWwtcmlnaHQ7XG4gICAgfVxuICB9XG59XG5cbi8vLyBDcmVhdGVzIGEgZ3JpZCBjb2x1bW4gcm93LiBUaGlzIGlzIHRoZSBlcXVpdmFsZW50IG9mIGFkZGluZyBgLnJvd2AgYW5kIGAuY29sdW1uYCB0byB0aGUgc2FtZSBlbGVtZW50LlxuLy8vXG4vLy8gQHBhcmFtIHtOdW1iZXJ9ICRndXR0ZXIgWyRncmlkLWNvbHVtbi1ndXR0ZXJdIC0gV2lkdGggb2YgdGhlIGd1dHRlcnMgb24gZWl0aGVyIHNpZGUgb2YgdGhlIGNvbHVtbiByb3cuXG5AbWl4aW4gZ3JpZC1jb2x1bW4tcm93KFxuICAkZ3V0dGVyOiAkZ3JpZC1jb2x1bW4tZ3V0dGVyXG4pIHtcbiAgQGluY2x1ZGUgZ3JpZC1yb3c7XG4gIEBpbmNsdWRlIGdyaWQtY29sdW1uKCRndXR0ZXI6ICRndXR0ZXIpO1xuXG4gICYsXG4gICY6bGFzdC1jaGlsZCB7XG4gICAgZmxvYXQ6IG5vbmU7XG4gIH1cbn1cblxuLy8vIFNob3J0aGFuZCBmb3IgYGdyaWQtY29sdW1uKClgLlxuLy8vIEBhbGlhcyBncmlkLWNvbHVtblxuQGZ1bmN0aW9uIGdyaWQtY29sKFxuICAkY29sdW1uczogJGdyaWQtY29sdW1uLWNvdW50XG4pIHtcbiAgQHJldHVybiBncmlkLWNvbHVtbigkY29sdW1ucyk7XG59XG5cbi8vLyBTaG9ydGhhbmQgZm9yIGBncmlkLWNvbHVtbigpYC5cbi8vLyBAYWxpYXMgZ3JpZC1jb2x1bW5cbkBtaXhpbiBncmlkLWNvbChcbiAgJGNvbHVtbnM6ICRncmlkLWNvbHVtbi1jb3VudCxcbiAgJGd1dHRlcjogJGdyaWQtY29sdW1uLWd1dHRlclxuKSB7XG4gIEBpbmNsdWRlIGdyaWQtY29sdW1uKCRjb2x1bW5zLCAkZ3V0dGVyKTtcbn1cblxuLy8vIFNob3J0aGFuZCBmb3IgYGdyaWQtY29sdW1uLXJvdygpYC5cbi8vLyBAYWxpYXMgZ3JpZC1jb2x1bW4tcm93XG5AbWl4aW4gZ3JpZC1jb2wtcm93KFxuICAkZ3V0dGVyOiAkZ3JpZC1jb2x1bW4tZ3V0dGVyXG4pIHtcbiAgQGluY2x1ZGUgZ3JpZC1jb2x1bW4tcm93KCRndXR0ZXIpO1xufVxuIiwiLy8gRm91bmRhdGlvbiBmb3IgU2l0ZXMgYnkgWlVSQlxuLy8gZm91bmRhdGlvbi56dXJiLmNvbVxuLy8gTGljZW5zZWQgdW5kZXIgTUlUIE9wZW4gU291cmNlXG5cbi8vLy9cbi8vLyBAZ3JvdXAgZ3JpZFxuLy8vL1xuXG4vLy8gU2V0IHRoZSB3aWR0aCBvZiBhIGdyaWQgY29sdW1uLlxuLy8vXG4vLy8gQHBhcmFtIHtOdW1iZXJ8TGlzdH0gJHdpZHRoIFskZ3JpZC1jb2x1bW4tY291bnRdIC0gV2lkdGggdG8gbWFrZSB0aGUgY29sdW1uLiBZb3UgY2FuIHBhc3MgaW4gYW55IHZhbHVlIGFjY2VwdGVkIGJ5IHRoZSBgZ3JpZC1jb2x1bW4oKWAgZnVuY3Rpb24sIHN1Y2ggYXMgYDZgLCBgNTAlYCwgb3IgYDEgb2YgMmAuXG5AbWl4aW4gZ3JpZC1jb2x1bW4tc2l6ZShcbiAgJGNvbHVtbnM6ICRncmlkLWNvbHVtbi1jb3VudFxuKSB7XG4gIHdpZHRoOiBncmlkLWNvbHVtbigkY29sdW1ucyk7XG59XG5cbi8vLyBTaG9ydGhhbmQgZm9yIGBncmlkLWNvbHVtbi1zaXplKClgLlxuLy8vIEBhbGlhcyBncmlkLWNvbHVtbi1zaXplXG5AbWl4aW4gZ3JpZC1jb2wtc2l6ZShcbiAgJGNvbHVtbnM6ICRncmlkLWNvbHVtbi1jb3VudFxuKSB7XG4gIEBpbmNsdWRlIGdyaWQtY29sdW1uLXNpemUoJGNvbHVtbnMpO1xufVxuIiwiLy8gRm91bmRhdGlvbiBmb3IgU2l0ZXMgYnkgWlVSQlxuLy8gZm91bmRhdGlvbi56dXJiLmNvbVxuLy8gTGljZW5zZWQgdW5kZXIgTUlUIE9wZW4gU291cmNlXG5cbi8vLy9cbi8vLyBAZ3JvdXAgZ3JpZFxuLy8vL1xuXG4vLy8gUmVwb3NpdGlvbiBhIGNvbHVtbi5cbi8vL1xuLy8vIEBwYXJhbSB7TnVtYmVyfSAkcG9zaXRpb24gLSBEaXJlY3Rpb24gYW5kIGFtb3VudCB0byBtb3ZlLiBUaGUgY29sdW1uIHdpbGwgbW92ZSBlcXVhbCB0byB0aGUgd2lkdGggb2YgdGhlIGNvbHVtbiBjb3VudCBzcGVjaWZpZWQuIEEgcG9zaXRpdmUgbnVtYmVyIHdpbGwgcHVzaCB0aGUgY29sdW1uIHRvIHRoZSByaWdodCwgd2hpbGUgYSBuZWdhdGl2ZSBudW1iZXIgd2lsbCBwdWxsIGl0IHRvIHRoZSBsZWZ0LlxuQG1peGluIGdyaWQtY29sdW1uLXBvc2l0aW9uKCRwb3NpdGlvbikge1xuICBAaWYgdHlwZS1vZigkcG9zaXRpb24pID09ICdudW1iZXInIHtcbiAgICAkb2Zmc2V0OiBwZXJjZW50YWdlKCRwb3NpdGlvbiAvICRncmlkLWNvbHVtbi1jb3VudCk7XG5cbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgI3skZ2xvYmFsLWxlZnR9OiAkb2Zmc2V0O1xuICB9XG4gIEBlbHNlIGlmICRwb3NpdGlvbiA9PSBjZW50ZXIge1xuICAgIGZsb2F0OiBub25lO1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgfVxuICBAZWxzZSB7XG4gICAgQHdhcm4gJ1dyb25nIHN5bnRheCBmb3IgZ3JpZC1jb2x1bW4tcG9zaXRpb24oKS4gRW50ZXIgYSBwb3NpdGl2ZSBvciBuZWdhdGl2ZSBudW1iZXIsIG9yIGNlbnRlci4nO1xuICB9XG59XG5cbi8vLyBSZXNldCBhIHBvc2l0aW9uIGRlZmluaXRpb24uXG5AbWl4aW4gZ3JpZC1jb2x1bW4tdW5wb3NpdGlvbiB7XG4gIHBvc2l0aW9uOiBzdGF0aWM7XG4gIG1hcmdpbi1sZWZ0OiAwO1xuICBtYXJnaW4tcmlnaHQ6IDA7XG4gIGZsb2F0OiBsZWZ0O1xufVxuXG4vLy8gT2Zmc2V0cyBhIGNvbHVtbiB0byB0aGUgcmlnaHQgYnkgYCRuYCBjb2x1bW5zLlxuLy8vIEBwYXJhbSB7TnVtYmVyfExpc3R9ICRuIC0gV2lkdGggdG8gb2Zmc2V0IGJ5LiBZb3UgY2FuIHBhc3MgaW4gYW55IHZhbHVlIGFjY2VwdGVkIGJ5IHRoZSBgZ3JpZC1jb2x1bW4oKWAgbWl4aW4sIHN1Y2ggYXMgYDZgLCBgNTAlYCwgb3IgYDEgb2YgMmAuXG5AbWl4aW4gZ3JpZC1jb2x1bW4tb2Zmc2V0KCRuKSB7XG4gIG1hcmdpbi0jeyRnbG9iYWwtbGVmdH06IGdyaWQtY29sdW1uKCRuKTtcbn1cblxuLy8vIERpc2FibGUgdGhlIGRlZmF1bHQgYmVoYXZpb3Igb2YgdGhlIGxhc3QgY29sdW1uIGluIGEgcm93IGFsaWduaW5nIHRvIHRoZSBvcHBvc2l0ZSBlZGdlLlxuQG1peGluIGdyaWQtY29sdW1uLWVuZCB7XG4gIC8vIFRoaXMgZXh0cmEgc3BlY2lmaWNpdHkgaXMgcmVxdWlyZWQgZm9yIHRoZSBwcm9wZXJ0eSB0byBiZSBhcHBsaWVkXG4gICY6bGFzdC1jaGlsZDpsYXN0LWNoaWxkIHtcbiAgICBmbG9hdDogJGdsb2JhbC1sZWZ0O1xuICB9XG59XG5cbi8vLyBTaG9ydGhhbmQgZm9yIGBncmlkLWNvbHVtbi1wb3NpdGlvbigpYC5cbi8vLyBAYWxpYXMgZ3JpZC1jb2x1bW4tcG9zaXRpb25cbkBtaXhpbiBncmlkLWNvbC1wb3MoJHBvc2l0aW9uKSB7XG4gIEBpbmNsdWRlIGdyaWQtY29sdW1uLXBvc2l0aW9uKCRwb3NpdGlvbik7XG59XG5cbi8vLyBTaG9ydGhhbmQgZm9yIGBncmlkLWNvbHVtbi11bnBvc2l0aW9uKClgLlxuLy8vIEBhbGlhcyBncmlkLWNvbHVtbi11bnBvc2l0aW9uXG5AbWl4aW4gZ3JpZC1jb2wtdW5wb3Mge1xuICBAaW5jbHVkZSBncmlkLWNvbHVtbi11bnBvc2l0aW9uO1xufVxuXG4vLy8gU2hvcnRoYW5kIGZvciBgZ3JpZC1jb2x1bW4tb2Zmc2V0KClgLlxuLy8vIEBhbGlhcyBncmlkLWNvbHVtbi1vZmZzZXRcbkBtaXhpbiBncmlkLWNvbC1vZmYoJG4pIHtcbiAgQGluY2x1ZGUgZ3JpZC1jb2x1bW4tb2Zmc2V0KCRuKTtcbn1cblxuLy8vIFNob3J0aGFuZCBmb3IgYGdyaWQtY29sdW1uLWVuZCgpYC5cbi8vLyBAYWxpYXMgZ3JpZC1jb2x1bW4tZW5kXG5AbWl4aW4gZ3JpZC1jb2wtZW5kIHtcbiAgQGluY2x1ZGUgZ3JpZC1jb2x1bW4tZW5kO1xufVxuIiwiLy8gRm91bmRhdGlvbiBmb3IgU2l0ZXMgYnkgWlVSQlxuLy8gZm91bmRhdGlvbi56dXJiLmNvbVxuLy8gTGljZW5zZWQgdW5kZXIgTUlUIE9wZW4gU291cmNlXG5cbi8vLy9cbi8vLyBAZ3JvdXAgZ3JpZFxuLy8vL1xuXG4vLy8gQ29sbGFwc2UgdGhlIGd1dHRlcnMgb24gYSBjb2x1bW4gYnkgcmVtb3ZpbmcgdGhlIHBhZGRpbmcuICoqTm90ZToqKiBvbmx5IHVzZSB0aGlzIG1peGluIHdpdGhpbiBhIGJyZWFrcG9pbnQuIFRvIGNvbGxhcHNlIGEgY29sdW1uJ3MgZ3V0dGVycyBvbiBhbGwgc2NyZWVuIHNpemVzLCB1c2UgdGhlIGAkZ3V0dGVyYCBwYXJhbWV0ZXIgb2YgdGhlIGBncmlkLWNvbHVtbigpYCBtaXhpbiBpbnN0ZWFkLlxuQG1peGluIGdyaWQtY29sdW1uLWNvbGxhcHNlIHtcbiAgcGFkZGluZy1sZWZ0OiAwO1xuICBwYWRkaW5nLXJpZ2h0OiAwO1xufVxuXG4vLy8gVW4tY29sbGFwc2UgdGhlIGd1dHRlcnMgb24gYSBjb2x1bW4gYnkgcmUtYWRkaW5nIHRoZSBwYWRkaW5nLlxuLy8vXG4vLy8gQHBhcmFtIHtOdW1iZXJ9ICRndXR0ZXIgWyRncmlkLWNvbHVtbi1ndXR0ZXJdIC0gU3BhY2luZyBiZXR3ZWVuIGNvbHVtbnMuXG5AbWl4aW4gZ3JpZC1jb2x1bW4tdW5jb2xsYXBzZSgkZ3V0dGVyOiAkZ3JpZC1jb2x1bW4tZ3V0dGVyKSB7XG4gICRndXR0ZXI6IHJlbS1jYWxjKCRndXR0ZXIpIC8gMjtcbiAgcGFkZGluZy1sZWZ0OiAkZ3V0dGVyO1xuICBwYWRkaW5nLXJpZ2h0OiAkZ3V0dGVyO1xufVxuXG4vLy8gU2hvcnRoYW5kIGZvciBgZ3JpZC1jb2x1bW4tY29sbGFwc2UoKWAuXG4vLy8gQGFsaWFzIGdyaWQtY29sdW1uLWNvbGxhcHNlXG5AbWl4aW4gZ3JpZC1jb2wtY29sbGFwc2Uge1xuICBAaW5jbHVkZSBncmlkLWNvbHVtbi1jb2xsYXBzZTtcbn1cblxuLy8vIFNob3J0aGFuZCBmb3IgYGdyaWQtY29sdW1uLXVuY29sbGFwc2UoKWAuXG4vLy8gQGFsaWFzIGdyaWQtY29sdW1uLXVuY29sbGFwc2VcbkBtaXhpbiBncmlkLWNvbC11bmNvbGxhcHNlKCRndXR0ZXI6ICRncmlkLWNvbHVtbi1ndXR0ZXIpIHtcbiAgQGluY2x1ZGUgZ3JpZC1jb2x1bW4tdW5jb2xsYXBzZSgkZ3V0dGVyKTtcbn1cbiIsIi8vIEZvdW5kYXRpb24gZm9yIFNpdGVzIGJ5IFpVUkJcbi8vIGZvdW5kYXRpb24uenVyYi5jb21cbi8vIExpY2Vuc2VkIHVuZGVyIE1JVCBPcGVuIFNvdXJjZVxuXG4vLy8vXG4vLy8gQGdyb3VwIGdyaWRcbi8vLy9cblxuLy8vIE91dHB1dHMgQ1NTIGNsYXNzZXMgZm9yIHRoZSBncmlkLlxuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuQG1peGluIGZvdW5kYXRpb24tZ3JpZChcbiAgJHJvdzogJ3JvdycsXG4gICRjb2x1bW46ICdjb2x1bW4nLFxuICAkY29sdW1uLXJvdzogJ2NvbHVtbi1yb3cnLFxuICAkcHVzaDogJ3B1c2gnLFxuICAkcHVsbDogJ3B1bGwnLFxuICAkY2VudGVyOiAnY2VudGVyZWQnLFxuICAkdW5jZW50ZXI6ICd1bmNlbnRlcmVkJyxcbiAgJGNvbGxhcHNlOiAnY29sbGFwc2UnLFxuICAkdW5jb2xsYXBzZTogJ3VuY29sbGFwc2UnLFxuICAkb2Zmc2V0OiAnb2Zmc2V0JyxcbiAgJGVuZDogJ2VuZCcsXG4gICRleHBhbmRlZDogJ2V4cGFuZGVkJ1xuKSB7XG4gIC8vIFJvd1xuICAuI3skcm93fSB7XG4gICAgQGluY2x1ZGUgZ3JpZC1yb3c7XG5cbiAgICAvLyBDb2xsYXBzaW5nXG4gICAgJi4jeyRjb2xsYXBzZX0ge1xuICAgICAgPiAuI3skY29sdW1ufSB7XG4gICAgICAgIEBpbmNsdWRlIGdyaWQtY29sLWNvbGxhcHNlO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIE5lc3RpbmdcbiAgICAmICYge1xuICAgICAgQGluY2x1ZGUgZ3JpZC1yb3ctbmVzdCgkZ3JpZC1jb2x1bW4tZ3V0dGVyKTtcblxuICAgICAgJi4jeyRjb2xsYXBzZX0ge1xuICAgICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIEV4cGFuZGVkIChmdWxsLXdpZHRoKSByb3dcbiAgICAmLiN7JGV4cGFuZGVkfSB7XG4gICAgICBtYXgtd2lkdGg6IG5vbmU7XG5cbiAgICAgIC4jeyRyb3d9IHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgICAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvLyBDb2x1bW5cbiAgLiN7JGNvbHVtbn0ge1xuICAgIEBpbmNsdWRlIGdyaWQtY29sO1xuXG4gICAgQGlmICRncmlkLWNvbHVtbi1hbGlnbi1lZGdlIHtcbiAgICAgICYuI3skZW5kfSB7XG4gICAgICAgIEBpbmNsdWRlIGdyaWQtY29sLWVuZDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvLyBDb2x1bW4gcm93XG4gIC8vIFRoZSBkb3VibGUgLnJvdyBjbGFzcyBpcyBuZWVkZWQgdG8gYnVtcCB1cCB0aGUgc3BlY2lmaWNpdHlcbiAgLiN7JGNvbHVtbn0uI3skcm93fS4jeyRyb3d9IHtcbiAgICBmbG9hdDogbm9uZTtcblxuICAgIC8vIFRvIHByb3Blcmx5IG5lc3QgYSBjb2x1bW4gcm93LCBwYWRkaW5nIGFuZCBtYXJnaW4gaXMgcmVtb3ZlZFxuICAgIC4jeyRyb3d9ICYge1xuICAgICAgcGFkZGluZy1sZWZ0OiAwO1xuICAgICAgcGFkZGluZy1yaWdodDogMDtcbiAgICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIH1cbiAgfVxuXG4gIEBpbmNsdWRlIC16Zi1lYWNoLWJyZWFrcG9pbnQge1xuICAgIEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggJGdyaWQtY29sdW1uLWNvdW50IHtcbiAgICAgIC8vIENvbHVtbiB3aWR0aFxuICAgICAgLiN7JC16Zi1zaXplfS0jeyRpfSB7XG4gICAgICAgIEBpbmNsdWRlIGdyaWQtY29sLXNpemUoJGkpO1xuICAgICAgfVxuXG4gICAgICAvLyBTb3VyY2Ugb3JkZXJpbmdcbiAgICAgIEBpZiAkaSA8ICRncmlkLWNvbHVtbi1jb3VudCB7XG4gICAgICAgIC4jeyQtemYtc2l6ZX0tI3skcHVzaH0tI3skaX0ge1xuICAgICAgICAgIEBpbmNsdWRlIGdyaWQtY29sLXBvcygkaSk7XG4gICAgICAgIH1cblxuICAgICAgICAuI3skLXpmLXNpemV9LSN7JHB1bGx9LSN7JGl9IHtcbiAgICAgICAgICBAaW5jbHVkZSBncmlkLWNvbC1wb3MoLSRpKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBPZmZzZXRzXG4gICAgICAkbzogJGkgLSAxO1xuXG4gICAgICAuI3skLXpmLXNpemV9LSN7JG9mZnNldH0tI3skb30ge1xuICAgICAgICBAaW5jbHVkZSBncmlkLWNvbC1vZmYoJG8pO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIEJsb2NrIGdyaWRcbiAgICBAZm9yICRpIGZyb20gMSB0aHJvdWdoICRibG9jay1ncmlkLW1heCB7XG4gICAgICAuI3skLXpmLXNpemV9LXVwLSN7JGl9IHtcbiAgICAgICAgQGluY2x1ZGUgZ3JpZC1sYXlvdXQoJGksIFwiLiN7JGNvbHVtbn1cIik7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gUmVzcG9uc2l2ZSBjb2xsYXBzaW5nXG4gICAgLiN7JC16Zi1zaXplfS0jeyRjb2xsYXBzZX0ge1xuICAgICAgPiAuI3skY29sdW1ufSB7IEBpbmNsdWRlIGdyaWQtY29sLWNvbGxhcHNlOyB9XG5cbiAgICAgIC4jeyRyb3d9IHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAuI3skLXpmLXNpemV9LSN7JHVuY29sbGFwc2V9IHtcbiAgICAgICRndXR0ZXI6IC16Zi1nZXQtYnAtdmFsKCRncmlkLWNvbHVtbi1ndXR0ZXIsICQtemYtc2l6ZSk7XG5cbiAgICAgID4gLiN7JGNvbHVtbn0geyBAaW5jbHVkZSBncmlkLWNvbC11bmNvbGxhcHNlKCRndXR0ZXIpOyB9XG4gICAgfVxuXG4gICAgLy8gUG9zaXRpb25pbmdcbiAgICAuI3skLXpmLXNpemV9LSN7JGNlbnRlcn0ge1xuICAgICAgQGluY2x1ZGUgZ3JpZC1jb2wtcG9zKGNlbnRlcik7XG4gICAgfVxuXG4gICAgLy8gR3V0dGVyIGFkanVzdG1lbnRcbiAgICAuI3skLXpmLXNpemV9LSN7JHVuY2VudGVyfSxcbiAgICAuI3skLXpmLXNpemV9LSN7JHB1c2h9LTAsXG4gICAgLiN7JC16Zi1zaXplfS0jeyRwdWxsfS0wIHtcbiAgICAgIEBpbmNsdWRlIGdyaWQtY29sLXVucG9zO1xuICAgIH1cbiAgfVxuXG4gIEBpZiAkY29sdW1uID09ICdjb2x1bW4nIHtcbiAgICAuY29sdW1ucyB7XG4gICAgICAvLyBzY3NzLWxpbnQ6ZGlzYWJsZSBQbGFjZWhvbGRlckluRXh0ZW5kXG4gICAgICBAZXh0ZW5kIC5jb2x1bW47XG4gICAgfVxuICB9XG59XG4iLCIvLyBGb3VuZGF0aW9uIGZvciBTaXRlcyBieSBaVVJCXG4vLyBmb3VuZGF0aW9uLnp1cmIuY29tXG4vLyBMaWNlbnNlZCB1bmRlciBNSVQgT3BlbiBTb3VyY2VcblxuLy8vL1xuLy8vIEBncm91cCBncmlkXG4vLy8vXG5cbi8vLyBTaXplcyBjaGlsZCBlbGVtZW50cyBzbyB0aGF0IGAkbmAgbnVtYmVyIG9mIGl0ZW1zIGFwcGVhciBvbiBlYWNoIHJvdy5cbi8vL1xuLy8vIEBwYXJhbSB7TnVtYmVyfSAkbiAtIE51bWJlciBvZiBlbGVtZW50cyB0byBkaXNwbGF5IHBlciByb3cuXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRzZWxlY3RvciBbJy5jb2x1bW4nXSAtIFNlbGVjdG9yKHMpIHRvIHVzZSBmb3IgY2hpbGQgZWxlbWVudHMuXG5AbWl4aW4gZ3JpZC1sYXlvdXQoXG4gICRuLFxuICAkc2VsZWN0b3I6ICcuY29sdW1uJ1xuKSB7XG4gICYgPiAjeyRzZWxlY3Rvcn0ge1xuICAgIHdpZHRoOiBwZXJjZW50YWdlKDEvJG4pO1xuICAgIGZsb2F0OiAkZ2xvYmFsLWxlZnQ7XG5cbiAgICAmOm50aC1vZi10eXBlKDFuKSB7XG4gICAgICBjbGVhcjogbm9uZTtcbiAgICB9XG5cbiAgICAmOm50aC1vZi10eXBlKCN7JG59bisxKSB7XG4gICAgICBjbGVhcjogYm90aDtcbiAgICB9XG5cbiAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgfVxuICB9XG59XG5cbi8vLyBBZGRzIGV4dHJhIENTUyB0byBibG9jayBncmlkIGNoaWxkcmVuIHNvIHRoZSBsYXN0IGl0ZW1zIGluIHRoZSByb3cgY2VudGVyIGF1dG9tYXRpY2FsbHkuIEFwcGx5IHRoaXMgdG8gdGhlIGNvbHVtbnMsIG5vdCB0aGUgcm93LlxuLy8vXG4vLy8gQHBhcmFtIHtOdW1iZXJ9ICRuIC0gTnVtYmVyIG9mIGl0ZW1zIHRoYXQgYXBwZWFyIGluIGVhY2ggcm93LlxuQG1peGluIGdyaWQtbGF5b3V0LWNlbnRlci1sYXN0KCRuKSB7XG4gIEBmb3IgJGkgZnJvbSAxIHRvICRuIHtcbiAgICBAaWYgJGkgPT0gMSB7XG4gICAgICAmOm50aC1jaGlsZCgjeyRufW4rMSk6bGFzdC1jaGlsZCB7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAoMTAwIC0gMTAwLyRuICogJGkpIC8gMiAqIDElO1xuICAgICAgfVxuICAgIH1cbiAgICBAZWxzZSB7XG4gICAgICAmOm50aC1jaGlsZCgjeyRufW4rMSk6bnRoLWxhc3QtY2hpbGQoI3skaX0pIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6ICgxMDAgLSAxMDAvJG4gKiAkaSkgLyAyICogMSU7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCIvLyBGb3VuZGF0aW9uIGZvciBTaXRlcyBieSBaVVJCXG4vLyBmb3VuZGF0aW9uLnp1cmIuY29tXG4vLyBMaWNlbnNlZCB1bmRlciBNSVQgT3BlbiBTb3VyY2VcblxuLy8vL1xuLy8vIEBncm91cCBmbGV4LWdyaWRcbi8vLy9cblxuLy8vIENyZWF0ZXMgYSBjb250YWluZXIgZm9yIGEgZmxleCBncmlkIHJvdy5cbi8vL1xuLy8vIEBwYXJhbSB7S2V5d29yZHxMaXN0fSAkYmVoYXZpb3IgW251bGxdXG4vLy8gICBNb2RpZmljYXRpb25zIHRvIHRoZSBkZWZhdWx0IGdyaWQgc3R5bGVzLiBgbmVzdGAgaW5kaWNhdGVzIHRoZSByb3cgd2lsbCBiZSBwbGFjZWQgaW5zaWRlIGFub3RoZXIgcm93LiBgY29sbGFwc2VgIGluZGljYXRlcyB0aGF0IHRoZSBjb2x1bW5zIGluc2lkZSB0aGlzIHJvdyB3aWxsIG5vdCBoYXZlIHBhZGRpbmcuIGBuZXN0IGNvbGxhcHNlYCBjb21iaW5lcyBib3RoIGJlaGF2aW9ycy5cbi8vLyBAcGFyYW0ge051bWJlcn0gJHdpZHRoIFskZ3JpZC1yb3ctd2lkdGhdIC0gTWF4aW11bSB3aWR0aCBvZiB0aGUgcm93LlxuLy8vIEBwYXJhbSB7TnVtYmVyfSAkY29sdW1ucyBbbnVsbF0gLSBOdW1iZXIgb2YgY29sdW1ucyB0byB1c2UgZm9yIHRoaXMgcm93LiBJZiBzZXQgdG8gYG51bGxgICh0aGUgZGVmYXVsdCksIHRoZSBnbG9iYWwgY29sdW1uIGNvdW50IHdpbGwgYmUgdXNlZC5cbi8vLyBAcGFyYW0ge0Jvb2xlYW59ICRiYXNlIFt0cnVlXSAtIFNldCB0byBgZmFsc2VgIHRvIHByZXZlbnQgYmFzaWMgc3R5bGVzIGZyb20gYmVpbmcgb3V0cHV0LiBVc2VmdWwgaWYgeW91J3JlIGNhbGxpbmcgdGhpcyBtaXhpbiBvbiB0aGUgc2FtZSBlbGVtZW50IHR3aWNlLCBhcyBpdCBwcmV2ZW50cyBkdXBsaWNhdGUgQ1NTIG91dHB1dC5cbi8vLyBAcGFyYW0ge051bWJlcn0gJGd1dHRlciBbJGdyaWQtY29sdW1uLWd1dHRlcl0gLSBHdXR0ZXIgdG8gdXNlIHdoZW4gaW52ZXJ0aW5nIG1hcmdpbnMsIGluIGNhc2UgdGhlIHJvdyBpcyBuZXN0ZWQuXG5AbWl4aW4gZmxleC1ncmlkLXJvdyhcbiAgJGJlaGF2aW9yOiBudWxsLFxuICAkd2lkdGg6ICRncmlkLXJvdy13aWR0aCxcbiAgJGNvbHVtbnM6IG51bGwsXG4gICRiYXNlOiB0cnVlLFxuICAkZ3V0dGVyOiAkZ3JpZC1jb2x1bW4tZ3V0dGVyXG4pIHtcbiAgJG1hcmdpbjogYXV0bztcblxuICBAaWYgaW5kZXgoJGJlaGF2aW9yLCBuZXN0KSAhPSBudWxsIHtcbiAgICBAaW5jbHVkZSBncmlkLXJvdy1uZXN0KCRndXR0ZXIpO1xuXG4gICAgQGlmIGluZGV4KCRiZWhhdmlvciwgY29sbGFwc2UpICE9IG51bGwge1xuICAgICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgfVxuICB9XG4gIEBlbHNlIHtcbiAgICBtYXgtd2lkdGg6ICR3aWR0aDtcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIH1cblxuICBAaWYgJGJhc2Uge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1mbG93OiByb3cgd3JhcDtcbiAgfVxuXG4gIEBpZiAkY29sdW1ucyAhPSBudWxsIHtcbiAgICBAaW5jbHVkZSBncmlkLWNvbnRleHQoJGNvbHVtbnMsICRiYXNlKSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH1cbn1cblxuLy8vIENhbGN1bGF0ZXMgdGhlIGBmbGV4YCBwcm9wZXJ0eSBmb3IgYSBmbGV4IGdyaWQgY29sdW1uLiBJdCBhY2NlcHRzIGFsbCBvZiB0aGUgc2FtZSB2YWx1ZXMgYXMgdGhlIGJhc2ljIGBncmlkLWNvbHVtbigpYCBmdW5jdGlvbiwgYWxvbmcgd2l0aCB0d28gZXh0cmFzOlxuLy8vICAgLSBgbnVsbGAgKHRoZSBkZWZhdWx0KSB3aWxsIG1ha2UgdGhlIGNvbHVtbiBleHBhbmQgdG8gZmlsbCBzcGFjZS5cbi8vLyAgIC0gYHNocmlua2Agd2lsbCBtYWtlIHRoZSBjb2x1bW4gY29udHJhY3QsIHNvIGl0IG9ubHkgdGFrZXMgdXAgdGhlIGhvcml6b250YWwgc3BhY2UgaXQgbmVlZHMuXG4vLy9cbi8vLyBAcGFyYW0ge01peGVkfSAkY29sdW1ucyBbbnVsbF0gLSBXaWR0aCBvZiB0aGUgY29sdW1uLlxuQGZ1bmN0aW9uIGZsZXgtZ3JpZC1jb2x1bW4oJGNvbHVtbnM6IG51bGwpIHtcbiAgLy8gc2Nzcy1saW50OmRpc2FibGUgWmVyb1VuaXRcbiAgJGZsZXg6IDEgMSAwcHg7XG5cbiAgQGlmICRjb2x1bW5zID09IHNocmluayB7XG4gICAgJGZsZXg6IDAgMCBhdXRvO1xuICB9XG4gIEBlbHNlIGlmICRjb2x1bW5zICE9IG51bGwge1xuICAgICRmbGV4OiAwIDAgZ3JpZC1jb2x1bW4oJGNvbHVtbnMpO1xuICB9XG5cbiAgQHJldHVybiAkZmxleDtcbn1cblxuLy8vIENyZWF0ZXMgYSBjb2x1bW4gZm9yIGEgZmxleCBncmlkLiBCeSBkZWZhdWx0LCB0aGUgY29sdW1uIHdpbGwgc3RyZXRjaCB0byB0aGUgZnVsbCB3aWR0aCBvZiBpdHMgY29udGFpbmVyLCBidXQgdGhpcyBjYW4gYmUgb3ZlcnJpZGRlbiB3aXRoIHNpemluZyBjbGFzc2VzLCBvciBieSB1c2luZyB0aGUgYHVuc3RhY2tgIGNsYXNzIG9uIHRoZSBwYXJlbnQgZmxleCByb3cuXG4vLy9cbi8vLyBAcGFyYW0ge01peGVkfSAkY29sdW1ucyBbbnVsbF0gLSBXaWR0aCBvZiB0aGUgY29sdW1uLiBSZWZlciB0byB0aGUgYGZsZXgtZ3JpZC1jb2x1bW4oKWAgZnVuY3Rpb24gdG8gc2VlIHBvc3NpYmxlIHZhbHVlcy5cbi8vLyBAcGFyYW0ge051bWJlcn0gJGd1dHRlciBbJGdyaWQtY29sdW1uLWd1dHRlcl0gLSBTcGFjZSBiZXR3ZWVuIGNvbHVtbnMsIGFkZGVkIGFzIGEgbGVmdCBhbmQgcmlnaHQgcGFkZGluZy5cbkBtaXhpbiBmbGV4LWdyaWQtY29sdW1uKFxuICAkY29sdW1uczogbnVsbCxcbiAgJGd1dHRlcjogJGdyaWQtY29sdW1uLWd1dHRlclxuKSB7XG4gIC8vIEJhc2UgcHJvcGVydGllc1xuICBmbGV4OiBmbGV4LWdyaWQtY29sdW1uKCRjb2x1bW5zKTtcblxuICAvLyBHdXR0ZXJzXG4gIEBpZiB0eXBlLW9mKCRndXR0ZXIpID09ICdtYXAnIHtcbiAgICBAZWFjaCAkYnJlYWtwb2ludCwgJHZhbHVlIGluICRndXR0ZXIge1xuICAgICAgJHBhZGRpbmc6IHJlbS1jYWxjKCR2YWx1ZSkgLyAyO1xuXG4gICAgICBAaW5jbHVkZSBicmVha3BvaW50KCRicmVha3BvaW50KSB7XG4gICAgICAgIHBhZGRpbmctbGVmdDogJHBhZGRpbmc7XG4gICAgICAgIHBhZGRpbmctcmlnaHQ6ICRwYWRkaW5nO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBAZWxzZSBpZiB0eXBlLW9mKCRndXR0ZXIpID09ICdudW1iZXInIGFuZCBzdHJpcC11bml0KCRndXR0ZXIpID4gMCB7XG4gICAgJHBhZGRpbmc6IHJlbS1jYWxjKCRndXR0ZXIpIC8gMjtcbiAgICBwYWRkaW5nLWxlZnQ6ICRwYWRkaW5nO1xuICAgIHBhZGRpbmctcmlnaHQ6ICRwYWRkaW5nO1xuICB9XG5cbiAgLy8gZml4ZXMgcmVjZW50IENocm9tZSB2ZXJzaW9uIG5vdCBsaW1pdGluZyBjaGlsZCB3aWR0aFxuICAvLyBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8zNDkzNDU4Ni93aGl0ZS1zcGFjZS1ub3dyYXAtYW5kLWZsZXhib3gtZGlkLW5vdC13b3JrLWluLWNocm9tZVxuICBAaWYgJGNvbHVtbnMgPT0gbnVsbCB7XG4gICAgbWluLXdpZHRoOiAwO1xuICB9XG4gIC8vIG1heC13aWR0aCBmaXhlcyBJRSAxMC8xMSBub3QgcmVzcGVjdGluZyB0aGUgZmxleC1iYXNpcyBwcm9wZXJ0eVxuICBAaWYgJGNvbHVtbnMgIT0gbnVsbCBhbmQgJGNvbHVtbnMgIT0gc2hyaW5rIHtcbiAgICBtYXgtd2lkdGg6IGdyaWQtY29sdW1uKCRjb2x1bW5zKTtcbiAgfVxufVxuXG4vLy8gQ3JlYXRlcyBhIGJsb2NrIGdyaWQgZm9yIGEgZmxleCBncmlkIHJvdy5cbi8vL1xuLy8vIEBwYXJhbSB7TnVtYmVyfSAkbiAtIE51bWJlciBvZiBjb2x1bW5zIHRvIGRpc3BsYXkgb24gZWFjaCByb3cuXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRzZWxlY3RvciAtIFNlbGVjdG9yIHRvIHVzZSB0byB0YXJnZXQgY29sdW1ucyB3aXRoaW4gdGhlIHJvdy5cbkBtaXhpbiBmbGV4LWdyaWQtbGF5b3V0KFxuICAkbixcbiAgJHNlbGVjdG9yOiAnLmNvbHVtbidcbikge1xuICBmbGV4LXdyYXA6IHdyYXA7XG5cbiAgPiAjeyRzZWxlY3Rvcn0ge1xuICAgICRwY3Q6IHBlcmNlbnRhZ2UoMS8kbik7XG5cbiAgICBmbGV4OiAwIDAgJHBjdDtcbiAgICBtYXgtd2lkdGg6ICRwY3Q7XG4gIH1cbn1cblxuLy8vIENoYW5nZXMgdGhlIHNvdXJjZSBvcmRlciBvZiBhIGZsZXggZ3JpZCBjb2x1bW4uIENvbHVtbnMgd2l0aCBsb3dlciBudW1iZXJzIGFwcGVhciBmaXJzdCBpbiB0aGUgbGF5b3V0LlxuLy8vIEBwYXJhbSB7TnVtYmVyfSAkb3JkZXIgWzBdIC0gT3JkZXIgbnVtYmVyIHRvIGFwcGx5LlxuQG1peGluIGZsZXgtZ3JpZC1vcmRlcigkb3JkZXI6IDApIHtcbiAgQHdhcm4gJ1RoaXMgbWl4aW4gaXMgYmVpbmcgcmVwbGFjZWQgYnkgZmxleC1vcmRlcigpLiBmbGV4LWdyaWQtb3JkZXIoKSB3aWxsIGJlIHJlbW92ZWQgaW4gRm91bmRhdGlvbiA2LjMuJztcbiAgQGluY2x1ZGUgZmxleC1vcmRlcigkb3JkZXIpO1xufVxuXG4vLy8gSG9yaXpvbnRhbGx5IG9yIHZlcnRpY2FsbHkgYWxpZ25zIHRoZSBjb2x1bW5zIHdpdGhpbiBhIGZsZXggcm93LiBBcHBseSB0aGlzIG1peGluIHRvIGEgZmxleCByb3cuXG4vLy9cbi8vLyBAcGFyYW0ge0tleXdvcmR9ICR4IFtudWxsXSAtIEhvcml6b250YWwgYWxpZ25tZW50IHRvIHVzZS4gQ2FuIGJlIGBsZWZ0YCwgYHJpZ2h0YCwgYGNlbnRlcmAsIGBqdXN0aWZ5YCwgb3IgYHNwYWNlZGAuIE9yLCBzZXQgaXQgdG8gYG51bGxgICh0aGUgZGVmYXVsdCkgdG8gbm90IHNldCBob3Jpem9udGFsIGFsaWdubWVudC5cbi8vLyBAcGFyYW0ge0tleXdvcmR9ICR5IFtudWxsXSAtIFZlcnRpY2FsIGFsaWdubWVudCB0byB1c2UuIENhbiBiZSBgdG9wYCwgYGJvdHRvbWAsIGBtaWRkbGVgLCBvciBgc3RyZXRjaGAuIE9yLCBzZXQgaXQgdG8gYG51bGxgICh0aGUgZGVmYXVsdCkgdG8gbm90IHNldCB2ZXJ0aWNhbCBhbGlnbm1lbnQuXG5AbWl4aW4gZmxleC1ncmlkLXJvdy1hbGlnbigkeDogbnVsbCwgJHk6IG51bGwpIHtcbiAgQHdhcm4gJ1RoaXMgbWl4aW4gaXMgYmVpbmcgcmVwbGFjZWQgYnkgZmxleC1hbGlnbigpLiBmbGV4LWdyaWQtcm93LWFsaWduKCkgd2lsbCBiZSByZW1vdmVkIGluIEZvdW5kYXRpb24gNi4zLic7XG4gIEBpbmNsdWRlIGZsZXgtYWxpZ24oJHgsICR5KTtcbn1cblxuLy8vIFZlcnRpY2FsbHkgYWxpZ24gYSBzaW5nbGUgY29sdW1uIHdpdGhpbiBhIGZsZXggcm93LiBBcHBseSB0aGlzIG1peGluIHRvIGEgZmxleCBjb2x1bW4uXG4vLy9cbi8vLyBAcGFyYW0ge0tleXdvcmR9ICR5IFtudWxsXSAtIFZlcnRpY2FsIGFsaWdubWVudCB0byB1c2UuIENhbiBiZSBgdG9wYCwgYGJvdHRvbWAsIGBtaWRkbGVgLCBvciBgc3RyZXRjaGAuIE9yLCBzZXQgaXQgdG8gYG51bGxgICh0aGUgZGVmYXVsdCkgdG8gbm90IHNldCB2ZXJ0aWNhbCBhbGlnbm1lbnQuXG5AbWl4aW4gZmxleC1ncmlkLWNvbHVtbi1hbGlnbigkeTogbnVsbCkge1xuICBAd2FybiAnVGhpcyBtaXhpbiBpcyBiZWluZyByZXBsYWNlZCBieSBmbGV4LWFsaWduLXNlbGYoKS4gZmxleC1ncmlkLWNvbHVtbi1hbGlnbigpIHdpbGwgYmUgcmVtb3ZlZCBpbiBGb3VuZGF0aW9uIDYuMy4nO1xuICBAaW5jbHVkZSBmbGV4LWFsaWduLXNlbGYoJHkpO1xufVxuXG5AbWl4aW4gZm91bmRhdGlvbi1mbGV4LWdyaWQge1xuICAvLyBSb3dcbiAgLnJvdyB7XG4gICAgQGluY2x1ZGUgZmxleC1ncmlkLXJvdztcblxuICAgIC8vIE5lc3RpbmcgYmVoYXZpb3JcbiAgICAmICYge1xuICAgICAgQGluY2x1ZGUgZmxleC1ncmlkLXJvdyhuZXN0LCAkYmFzZTogZmFsc2UpO1xuICAgIH1cblxuICAgIC8vIEV4cGFuZGVkIHJvd1xuICAgICYuZXhwYW5kZWQge1xuICAgICAgbWF4LXdpZHRoOiBub25lO1xuICAgIH1cblxuICAgICYuY29sbGFwc2Uge1xuICAgICAgPiAuY29sdW1uIHsgQGluY2x1ZGUgZ3JpZC1jb2wtY29sbGFwc2U7IH1cbiAgICB9XG4gIH1cblxuICAvLyBDb2x1bW5cbiAgLmNvbHVtbiB7XG4gICAgQGluY2x1ZGUgZmxleC1ncmlkLWNvbHVtbjtcbiAgfVxuXG4gIC8vIENvbHVtbiByb3dcbiAgLy8gVGhlIGRvdWJsZSAucm93IGNsYXNzIGlzIG5lZWRlZCB0byBidW1wIHVwIHRoZSBzcGVjaWZpY2l0eVxuICAuY29sdW1uLnJvdy5yb3cge1xuICAgIGZsb2F0OiBub25lO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuXG4gICAgLy8gVG8gcHJvcGVybHkgbmVzdCBhIGNvbHVtbiByb3csIHBhZGRpbmcgYW5kIG1hcmdpbiBpcyByZW1vdmVkXG4gICAgLnJvdyAmIHtcbiAgICAgIHBhZGRpbmctbGVmdDogMDtcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDA7XG4gICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICB9XG4gIH1cblxuICBAaW5jbHVkZSAtemYtZWFjaC1icmVha3BvaW50IHtcbiAgICBAZm9yICRpIGZyb20gMSB0aHJvdWdoICRncmlkLWNvbHVtbi1jb3VudCB7XG4gICAgICAvLyBTaXppbmcgKHBlcmNlbnRhZ2UpXG4gICAgICAuI3skLXpmLXNpemV9LSN7JGl9IHtcbiAgICAgICAgZmxleDogZmxleC1ncmlkLWNvbHVtbigkaSk7XG4gICAgICAgIG1heC13aWR0aDogZ3JpZC1jb2x1bW4oJGkpO1xuICAgICAgfVxuXG4gICAgICAvLyBPZmZzZXRzXG4gICAgICAkbzogJGkgLSAxO1xuXG4gICAgICAuI3skLXpmLXNpemV9LW9mZnNldC0jeyRvfSB7XG4gICAgICAgIEBpbmNsdWRlIGdyaWQtY29sdW1uLW9mZnNldCgkbyk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gU291cmNlIG9yZGVyaW5nXG4gICAgQGZvciAkaSBmcm9tIDEgdGhyb3VnaCA2IHtcbiAgICAgIC4jeyQtemYtc2l6ZX0tb3JkZXItI3skaX0ge1xuICAgICAgICBAaW5jbHVkZSBmbGV4LW9yZGVyKCRpKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBCbG9jayBncmlkXG4gICAgQGZvciAkaSBmcm9tIDEgdGhyb3VnaCAkYmxvY2stZ3JpZC1tYXgge1xuICAgICAgLiN7JC16Zi1zaXplfS11cC0jeyRpfSB7XG4gICAgICAgIEBpbmNsdWRlIGZsZXgtZ3JpZC1sYXlvdXQoJGkpO1xuICAgICAgfVxuICAgIH1cblxuICAgIEBpZiAkLXpmLXNpemUgIT0gJC16Zi16ZXJvLWJyZWFrcG9pbnQge1xuICAgICAgLy8gU2l6aW5nIChleHBhbmQpXG4gICAgICBAaW5jbHVkZSBicmVha3BvaW50KCQtemYtc2l6ZSkge1xuICAgICAgICAuI3skLXpmLXNpemV9LWV4cGFuZCB7XG4gICAgICAgICAgZmxleDogZmxleC1ncmlkLWNvbHVtbigpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIEF1dG8tc3RhY2tpbmcvdW5zdGFja2luZ1xuICAgICAgQGF0LXJvb3QgKHdpdGhvdXQ6IG1lZGlhKSB7XG4gICAgICAgIC5yb3cuI3skLXpmLXNpemV9LXVuc3RhY2sge1xuICAgICAgICAgID4gLmNvbHVtbiB7XG4gICAgICAgICAgICBmbGV4OiBmbGV4LWdyaWQtY29sdW1uKDEwMCUpO1xuXG4gICAgICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50KCQtemYtc2l6ZSkge1xuICAgICAgICAgICAgICBmbGV4OiBmbGV4LWdyaWQtY29sdW1uKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gUmVzcG9uc2l2ZSBjb2xsYXBzaW5nXG4gICAgLiN7JC16Zi1zaXplfS1jb2xsYXBzZSB7XG4gICAgICA+IC5jb2x1bW4geyBAaW5jbHVkZSBncmlkLWNvbC1jb2xsYXBzZTsgfVxuICAgIH1cblxuICAgIC4jeyQtemYtc2l6ZX0tdW5jb2xsYXBzZSB7XG4gICAgICAkZ3V0dGVyOiAtemYtZ2V0LWJwLXZhbCgkZ3JpZC1jb2x1bW4tZ3V0dGVyLCAkLXpmLXNpemUpO1xuXG4gICAgICA+IC5jb2x1bW4geyBAaW5jbHVkZSBncmlkLWNvbC11bmNvbGxhcHNlKCRndXR0ZXIpOyB9XG4gICAgfVxuICB9XG5cbiAgLy8gU2l6aW5nIChzaHJpbmspXG4gIC5zaHJpbmsge1xuICAgIGZsZXg6IGZsZXgtZ3JpZC1jb2x1bW4oc2hyaW5rKTtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gIH1cblxuICAvLyBWZXJ0aWNhbCBhbGlnbm1lbnQgdXNpbmcgYWxpZ24taXRlbXMgYW5kIGFsaWduLXNlbGZcbiAgLy8gUmVtb3ZlIHRoZXNlIGluIDYuM1xuICBAZWFjaCAkdmRpciwgJHByb3AgaW4gJC16Zi1mbGV4LWFsaWduIHtcbiAgICAuY29sdW1uLmFsaWduLSN7JHZkaXJ9IHtcbiAgICAgIEBpbmNsdWRlIGZsZXgtYWxpZ24tc2VsZigkdmRpcik7XG4gICAgfVxuICB9XG5cbiAgLmNvbHVtbnMge1xuICAgIC8vIHNjc3MtbGludDpkaXNhYmxlIFBsYWNlaG9sZGVySW5FeHRlbmRcbiAgICBAZXh0ZW5kIC5jb2x1bW47XG4gIH1cbn1cbiIsIkBtaXhpbiBmb3VuZGF0aW9uLWZsZXgtY2xhc3NlcyB7XG4gIC8vIEhvcml6b250YWwgYWxpZ25tZW50IHVzaW5nIGp1c3RpZnktY29udGVudFxuICBAZWFjaCAkaGRpciwgJHByb3AgaW4gbWFwLXJlbW92ZSgkLXpmLWZsZXgtanVzdGlmeSwgbGVmdCkge1xuICAgIC5hbGlnbi0jeyRoZGlyfSB7XG4gICAgICBAaW5jbHVkZSBmbGV4LWFsaWduKCR4OiAkaGRpcik7XG4gICAgfVxuICB9XG5cbiAgLy8gVmVydGljYWwgYWxpZ25tZW50IHVzaW5nIGFsaWduLWl0ZW1zIGFuZCBhbGlnbi1zZWxmXG4gIEBlYWNoICR2ZGlyLCAkcHJvcCBpbiAkLXpmLWZsZXgtYWxpZ24ge1xuICAgIC5hbGlnbi0jeyR2ZGlyfSB7XG4gICAgICBAaW5jbHVkZSBmbGV4LWFsaWduKCR5OiAkdmRpcik7XG4gICAgfVxuXG4gICAgLmFsaWduLXNlbGYtI3skdmRpcn0ge1xuICAgICAgQGluY2x1ZGUgZmxleC1hbGlnbi1zZWxmKCR5OiAkdmRpcik7XG4gICAgfVxuICB9XG5cbiAgLy8gU291cmNlIG9yZGVyaW5nXG4gIEBpbmNsdWRlIC16Zi1lYWNoLWJyZWFrcG9pbnQge1xuICAgIEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggNiB7XG4gICAgICAuI3skLXpmLXNpemV9LW9yZGVyLSN7JGl9IHtcbiAgICAgICAgQGluY2x1ZGUgZmxleC1vcmRlcigkaSk7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCIvLyBGb3VuZGF0aW9uIGZvciBTaXRlcyBieSBaVVJCXG4vLyBmb3VuZGF0aW9uLnp1cmIuY29tXG4vLyBMaWNlbnNlZCB1bmRlciBNSVQgT3BlbiBTb3VyY2VcblxuLy8vL1xuLy8vIEBncm91cCB0b3AtYmFyXG4vLy8vXG5cbi8vLyBQYWRkaW5nIGZvciB0aGUgdG9wIGJhci5cbi8vLyBAdHlwZSBOdW1iZXJcbiR0b3BiYXItcGFkZGluZzogMC41cmVtICFkZWZhdWx0O1xuXG4vLy8gQmFja2dyb3VuZCBjb2xvciBmb3IgdGhlIHRvcCBiYXIuIFRoaXMgY29sb3IgYWxzbyBjYXNjYWRlcyB0byBtZW51cyB3aXRoaW4gdGhlIHRvcCBiYXIuXG4vLy8gQHR5cGUgQ29sb3JcbiR0b3BiYXItYmFja2dyb3VuZDogJGxpZ2h0LWdyYXkgIWRlZmF1bHQ7XG5cbi8vLyBCYWNrZ3JvdW5kIGNvbG9yIHN1Ym1lbnVzIHdpdGhpbiB0aGUgdG9wIGJhci4gVXNlZnVsbCBpZiAkdG9wYmFyLWJhY2tncm91bmQgaXMgdHJhbnNwYXJlbnQuXG4vLy8gQHR5cGUgQ29sb3JcbiR0b3BiYXItc3VibWVudS1iYWNrZ3JvdW5kOiAkdG9wYmFyLWJhY2tncm91bmQgIWRlZmF1bHQ7XG5cbi8vLyBTcGFjaW5nIGZvciB0aGUgdG9wIGJhciB0aXRsZS5cbi8vLyBAdHlwZSBOdW1iZXJcbiR0b3BiYXItdGl0bGUtc3BhY2luZzogMXJlbSAhZGVmYXVsdDtcblxuLy8vIE1heGltdW0gd2lkdGggb2YgYDxpbnB1dD5gIGVsZW1lbnRzIGluc2lkZSB0aGUgdG9wIGJhci5cbi8vLyBAdHlwZSBOdW1iZXJcbiR0b3BiYXItaW5wdXQtd2lkdGg6IDIwMHB4ICFkZWZhdWx0O1xuXG4vLy8gQnJlYWtwb2ludCBhdCB3aGljaCB0b3AgYmFyIHN3aXRjaGVzIGZyb20gbW9iaWxlIHRvIGRlc2t0b3Agdmlldy5cbi8vLyBAdHlwZSBCcmVha3BvaW50XG4kdG9wYmFyLXVuc3RhY2stYnJlYWtwb2ludDogbWVkaXVtICFkZWZhdWx0O1xuXG4vLy8gQWRkcyBzdHlsZXMgZm9yIGEgdG9wIGJhciBjb250YWluZXIuXG5AbWl4aW4gdG9wLWJhci1jb250YWluZXIge1xuICBAaWYgJGdsb2JhbC1mbGV4Ym94IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIGZsZXgtd3JhcDogbm93cmFwO1xuICB9XG4gIEBlbHNlIHtcbiAgICBAaW5jbHVkZSBjbGVhcmZpeDtcbiAgfVxuXG4gIHBhZGRpbmc6ICR0b3BiYXItcGFkZGluZztcblxuICAmLFxuICB1bCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHRvcGJhci1iYWNrZ3JvdW5kO1xuICB9XG5cbiAgLy8gQ2hlY2sgaWYgJHRvcGJhci1iYWNrZ3JvdW5kIGlzIGRpZmZlcm50IGZyb20gJHRvcGJhci1iYWNrZ3JvdW5kLXN1Ym1lbnVcbiAgQGlmICgkdG9wYmFyLWJhY2tncm91bmQgIT0gJHRvcGJhci1zdWJtZW51LWJhY2tncm91bmQpIHtcbiAgICB1bCB1bCB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkdG9wYmFyLXN1Ym1lbnUtYmFja2dyb3VuZDtcbiAgICB9XG4gIH1cblxuICAvLyBSZXN0cmFpbiB3aWR0aCBvZiBpbnB1dHMgYnkgZGVmYXVsdCB0byBtYWtlIHRoZW0gZWFzaWVyIHRvIGFycmFuZ2VcbiAgaW5wdXQge1xuICAgIG1heC13aWR0aDogJHRvcGJhci1pbnB1dC13aWR0aDtcbiAgICBtYXJnaW4tI3skZ2xvYmFsLXJpZ2h0fTogMXJlbTtcbiAgfVxuXG4gIC8vIFRoZSBhYm92ZSBzdHlsZXMgc2hvdWxkbid0IGFwcGx5IHRvIGlucHV0IGdyb3VwIGZpZWxkc1xuICAuaW5wdXQtZ3JvdXAtZmllbGQge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbi0jeyRnbG9iYWwtcmlnaHR9OiAwO1xuICB9XG5cbiAgLy8gc2Nzcy1saW50OmRpc2FibGUgUXVhbGlmeWluZ0VsZW1lbnRcbiAgaW5wdXQuYnV0dG9uIHtcbiAgICB3aWR0aDogYXV0bztcbiAgfVxufVxuXG4vLy8gTWFrZXMgc2VjdGlvbnMgb2YgYSB0b3AgYmFyIHN0YWNrIG9uIHRvcCBvZiBlYWNoIG90aGVyLlxuQG1peGluIHRvcC1iYXItc3RhY2tlZCB7XG4gIEBpZiAkZ2xvYmFsLWZsZXhib3gge1xuICAgIGZsZXgtd3JhcDogd3JhcDtcblxuICAgIC8vIFN1Yi1zZWN0aW9uc1xuICAgIC50b3AtYmFyLWxlZnQsXG4gICAgLnRvcC1iYXItcmlnaHQge1xuICAgICAgZmxleDogMCAwIDEwMCU7XG4gICAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgfVxuICB9XG4gIEBlbHNlIHtcbiAgICAvLyBTdWItc2VjdGlvbnNcbiAgICAudG9wLWJhci1sZWZ0LFxuICAgIC50b3AtYmFyLXJpZ2h0IHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgIH1cbiAgfVxufVxuXG4vLy8gVW5kb2VzIHRoZSBDU1MgYXBwbGllZCBieSB0aGUgYHRvcC1iYXItc3RhY2tlZCgpYCBtaXhpbi5cbkBtaXhpbiB0b3AtYmFyLXVuc3RhY2sge1xuICBAaWYgJGdsb2JhbC1mbGV4Ym94IHtcbiAgICBmbGV4LXdyYXA6IG5vd3JhcDtcblxuICAgIC8vIHNjc3MtbGludDpkaXNhYmxlIFplcm9Vbml0XG4gICAgLnRvcC1iYXItbGVmdCxcbiAgICAudG9wLWJhci1yaWdodCB7XG4gICAgICBmbGV4OiAxIDEgMHB4O1xuICAgIH1cbiAgfVxuICBAZWxzZSB7XG4gICAgLnRvcC1iYXItbGVmdCxcbiAgICAudG9wLWJhci1yaWdodCB7XG4gICAgICB3aWR0aDogYXV0bztcbiAgICB9XG4gIH1cbn1cblxuQG1peGluIGZvdW5kYXRpb24tdG9wLWJhciB7XG4gIC8vIFRvcCBiYXIgY29udGFpbmVyXG4gIC50b3AtYmFyIHtcbiAgICBAaW5jbHVkZSB0b3AtYmFyLWNvbnRhaW5lcjtcblxuICAgIC8vIFN0YWNrIG9uIHNtYWxsIHNjcmVlbnMgYnkgZGVmYXVsdFxuICAgIEBpbmNsdWRlIHRvcC1iYXItc3RhY2tlZDtcblxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJHRvcGJhci11bnN0YWNrLWJyZWFrcG9pbnQpIHtcbiAgICAgIEBpbmNsdWRlIHRvcC1iYXItdW5zdGFjaztcbiAgICB9XG5cbiAgICAvLyBHZW5lcmF0ZSBjbGFzc2VzIGZvciBzdGFja2luZyBvbiBlYWNoIHNjcmVlbiBzaXplIChkZWZpbmVkIGluICRicmVha3BvaW50LWNsYXNzZXMpXG4gICAgQGVhY2ggJHNpemUgaW4gJGJyZWFrcG9pbnQtY2xhc3NlcyB7XG4gICAgICBAaWYgJHNpemUgIT0gJC16Zi16ZXJvLWJyZWFrcG9pbnQge1xuICAgICAgICAmLnN0YWNrZWQtZm9yLSN7JHNpemV9IHtcbiAgICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50KCRzaXplIGRvd24pIHtcbiAgICAgICAgICAgIEBpbmNsdWRlIHRvcC1iYXItc3RhY2tlZDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvLyBTdWItc2VjdGlvbnNcbiAgQGlmICRnbG9iYWwtZmxleGJveCB7XG4gICAgLnRvcC1iYXItdGl0bGUge1xuICAgICAgZmxleDogMCAwIGF1dG87XG4gICAgICBtYXJnaW4tcmlnaHQ6ICR0b3BiYXItdGl0bGUtc3BhY2luZztcbiAgICB9XG5cbiAgICAudG9wLWJhci1sZWZ0LFxuICAgIC50b3AtYmFyLXJpZ2h0IHtcbiAgICAgIGZsZXg6IDAgMCBhdXRvO1xuICAgIH1cbiAgfVxuICBAZWxzZSB7XG4gICAgLnRvcC1iYXItdGl0bGUge1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBtYXJnaW4tcmlnaHQ6ICR0b3BiYXItdGl0bGUtc3BhY2luZztcblxuICAgIH1cblxuICAgIC50b3AtYmFyLWxlZnQge1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgfVxuXG4gICAgLnRvcC1iYXItcmlnaHQge1xuICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgIH1cbiAgfVxufVxuIiwiLy8gRm91bmRhdGlvbiBmb3IgU2l0ZXMgYnkgWlVSQlxuLy8gZm91bmRhdGlvbi56dXJiLmNvbVxuLy8gTGljZW5zZWQgdW5kZXIgTUlUIE9wZW4gU291cmNlXG5cbi8vLy9cbi8vLyBAZ3JvdXAgbWVudVxuLy8vL1xuXG4vLy8gTWFyZ2luIG9mIGEgbWVudS5cbi8vLyBAdHlwZSBOdW1iZXJcbiRtZW51LW1hcmdpbjogMCAhZGVmYXVsdDtcblxuLy8vIExlZnQtaGFuZCBtYXJnaW4gb2YgYSBuZXN0ZWQgbWVudS5cbi8vLyBAdHlwZSBOdW1iZXJcbiRtZW51LW1hcmdpbi1uZXN0ZWQ6IDFyZW0gIWRlZmF1bHQ7XG5cbi8vLyBQYWRkaW5nIGZvciBpdGVtcyBpbiBhIG1lbnUuXG4vLy8gQHR5cGUgTnVtYmVyXG4kbWVudS1pdGVtLXBhZGRpbmc6IDAuN3JlbSAxcmVtICFkZWZhdWx0O1xuXG4vLy8gVGV4dCBjb2xvciBvZiBhbiBhY3RpdmUgbWVudSBpdGVtLlxuLy8vIEB0eXBlIENvbG9yXG4kbWVudS1pdGVtLWNvbG9yLWFjdGl2ZTogJHdoaXRlICFkZWZhdWx0O1xuXG4vLy8gQmFja2dyb3VuZCBjb2xvciBvZiBhbiBhY3RpdmUgbWVudSBpdGVtLlxuLy8vIEB0eXBlIENvbG9yXG4kbWVudS1pdGVtLWJhY2tncm91bmQtYWN0aXZlOiBtYXAtZ2V0KCRmb3VuZGF0aW9uLXBhbGV0dGUsIHByaW1hcnkpICFkZWZhdWx0O1xuXG4vLy8gU3BhY2luZyBiZXR3ZWVuIGFuIGljb24gYW5kIHRleHQgaW4gYSBtZW51IGl0ZW0uXG4vLy8gQHR5cGUgTnVtYmVyXG4kbWVudS1pY29uLXNwYWNpbmc6IDAuMjVyZW0gIWRlZmF1bHQ7XG5cbi8vLyBDcmVhdGVzIHRoZSBiYXNlIHN0eWxlcyBmb3IgYSBNZW51LlxuQG1peGluIG1lbnUtYmFzZSB7XG4gIG1hcmdpbjogJG1lbnUtbWFyZ2luO1xuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG5cbiAgQGlmICRnbG9iYWwtZmxleGJveCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LXdyYXA6IG5vd3JhcDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB9XG5cbiAgLy8gTGlzdCBpdGVtcyBhcmUgdGFibGUgY2VsbCB0byBhbGxvdyBmb3IgdmVydGljYWwgYWxpZ25tZW50XG4gID4gbGkge1xuICAgIEBpbmNsdWRlIGRpc2FibGUtbW91c2Utb3V0bGluZTtcblxuICAgIEBpZiAkZ2xvYmFsLWZsZXhib3gge1xuICAgICAgZmxleDogMCAwIGF1dG87XG4gICAgfVxuICAgIEBlbHNlIHtcbiAgICAgIGRpc3BsYXk6IHRhYmxlLWNlbGw7XG4gICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICAgIH1cbiAgfVxuXG4gIC8vIFJlc2V0IGxpbmUgaGVpZ2h0IHRvIG1ha2UgdGhlIGhlaWdodCBvZiB0aGUgb3ZlcmFsbCBpdGVtIGVhc2llciB0byBjYWxjdWxhdGVcbiAgPiBsaSA+IGEge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBhZGRpbmc6ICRtZW51LWl0ZW0tcGFkZGluZztcbiAgICBsaW5lLWhlaWdodDogMTtcbiAgfVxuXG4gIC8vIFJlc2V0IHN0eWxlcyBvZiBpbm5lciBlbGVtZW50c1xuICBpbnB1dCxcbiAgYSxcbiAgYnV0dG9uIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuICB9XG59XG5cbi8vLyBFeHBhbmRzIHRoZSBpdGVtcyBvZiBhIE1lbnUsIHNvIGVhY2ggaXRlbSBpcyB0aGUgc2FtZSB3aWR0aC5cbkBtaXhpbiBtZW51LWV4cGFuZCB7XG4gIEBpZiAkZ2xvYmFsLWZsZXhib3gge1xuICAgIC8vIHNjc3MtbGludDpkaXNhYmxlIFplcm9Vbml0XG4gICAgPiBsaSB7XG4gICAgICBmbGV4OiAxIDEgMHB4O1xuICAgIH1cbiAgfVxuICBAZWxzZSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZGlzcGxheTogdGFibGU7XG4gICAgdGFibGUtbGF5b3V0OiBmaXhlZDtcbiAgfVxufVxuXG4vLy8gU2V0cyB0aGUgZGlyZWN0aW9uIG9mIGEgTWVudS5cbi8vLyBAcGFyYW0ge0tleXdvcmR9ICRkaXIgW2hvcml6b250YWxdIC0gRGlyZWN0aW9uIG9mIHRoZSBNZW51LiBDYW4gYmUgYGhvcml6b250YWxgIG9yIGB2ZXJ0aWNhbGAuXG5AbWl4aW4gbWVudS1kaXJlY3Rpb24oJGRpcjogaG9yaXpvbnRhbCkge1xuICBAaWYgJGRpciA9PSBob3Jpem9udGFsIHtcbiAgICBAaWYgJGdsb2JhbC1mbGV4Ym94IHtcbiAgICAgIGZsZXgtd3JhcDogbm93cmFwO1xuXG4gICAgICA+IGxpIHtcbiAgICAgICAgZmxleDogMCAwIGF1dG87XG4gICAgICB9XG4gICAgfVxuICAgIEBlbHNlIHtcbiAgICAgID4gbGkge1xuICAgICAgICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBAZWxzZSBpZiAkZGlyID09IHZlcnRpY2FsIHtcbiAgICBAaWYgJGdsb2JhbC1mbGV4Ym94IHtcbiAgICAgIGZsZXgtd3JhcDogd3JhcDtcblxuICAgICAgPiBsaSB7XG4gICAgICAgIGZsZXg6IDAgMCAxMDAlO1xuICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgICB9XG5cbiAgICAgID4gbGkgID4gYSB7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAgICB9XG4gICAgfVxuICAgIEBlbHNlIHtcbiAgICAgID4gbGkge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgQGVsc2Uge1xuICAgIEB3YXJuICdUaGUgZGlyZWN0aW9uIHVzZWQgZm9yIG1lbnUtZGlyZWN0aW9uKCkgbXVzdCBiZSBob3Jpem9udGFsIG9yIHZlcnRpY2FsLic7XG4gIH1cbn1cblxuLy8vIENyZWF0ZXMgYSBzaW1wbGUgTWVudSwgd2hpY2ggaGFzIG5vIHBhZGRpbmcgb3IgaG92ZXIgc3RhdGUuXG5AbWl4aW4gbWVudS1zaW1wbGUge1xuICBsaSB7XG4gICAgbGluZS1oZWlnaHQ6IDE7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIG1hcmdpbi0jeyRnbG9iYWwtcmlnaHR9OiBnZXQtc2lkZSgkbWVudS1pdGVtLXBhZGRpbmcsICRnbG9iYWwtcmlnaHQpO1xuICB9XG5cbiAgYSB7XG4gICAgcGFkZGluZzogMDtcbiAgfVxufVxuXG4vLy8gQWRkcyBzdHlsZXMgZm9yIGEgbmVzdGVkIE1lbnUsIGJ5IGFkZGluZyBgbWFyZ2luLWxlZnRgIHRvIHRoZSBtZW51LlxuLy8vIEBwYXJhbSB7S2V5d29yZHxOdW1iZXJ9ICRwYWRkaW5nIFthdXRvXSAtIExlbmd0aCBvZiB0aGUgbWFyZ2luLlxuQG1peGluIG1lbnUtbmVzdGVkKCRtYXJnaW46ICRtZW51LW1hcmdpbi1uZXN0ZWQpIHtcbiAgbWFyZ2luLSN7JGdsb2JhbC1sZWZ0fTogJG1hcmdpbjtcbn1cblxuLy8vIEFkZHMgc3VwcG9ydCBmb3IgaWNvbnMgdG8gTWVudSBpdGVtcy5cbi8vLyBAcGFyYW0ge0tleXdvcmR9ICRwb3NpdGlvbiBbc2lkZV0gLSBQb3NpdGlvbmluZyBmb3IgaWNvbnMuIENhbiBiZSBgc2lkZWAgKGxlZnQsIG9yIHJpZ2h0IG9uIFJUTCkgb3IgYHRvcGAuXG4vLy8gQHBhcmFtIHtCb29sZWFufSAkYmFzZSBbdHJ1ZV0gLSBTZXQgdG8gYGZhbHNlYCB0byBwcmV2ZW50IHRoZSBzaGFyZWQgQ1NTIGJldHdlZW4gc2lkZS0gYW5kIHRvcC1hbGlnbmVkIGljb25zIGZyb20gYmVpbmcgcHJpbnRlZC4gU2V0IHRoaXMgdG8gYGZhbHNlYCBpZiB5b3UncmUgY2FsbGluZyB0aGUgbWl4aW4gbXVsdGlwbGUgdGltZXMgb24gdGhlIHNhbWUgZWxlbWVudC5cbkBtaXhpbiBtZW51LWljb25zKCRwb3NpdGlvbjogc2lkZSwgJGJhc2U6IHRydWUpIHtcbiAgQGlmICRiYXNlIHtcbiAgICBAaWYgJGdsb2JhbC1mbGV4Ym94IHtcbiAgICAgID4gbGkgPiBhIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIH1cbiAgICB9XG4gICAgQGVsc2Uge1xuICAgICAgPiBsaSA+IGEge1xuICAgICAgICBpbWcsXG4gICAgICAgIGkge1xuICAgICAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgICAgIH1cblxuICAgICAgICBpICsgc3BhbixcbiAgICAgICAgaW1nICsgc3BhbiB7XG4gICAgICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIEBpZiAkcG9zaXRpb24gPT0gc2lkZSB7XG4gICAgPiBsaSA+IGEge1xuICAgICAgQGlmICRnbG9iYWwtZmxleGJveCB7XG4gICAgICAgIGZsZXgtZmxvdzogcm93IG5vd3JhcDtcbiAgICAgIH1cblxuICAgICAgaW1nLFxuICAgICAgaSB7XG4gICAgICAgIG1hcmdpbi0jeyRnbG9iYWwtcmlnaHR9OiAkbWVudS1pY29uLXNwYWNpbmc7XG5cbiAgICAgICAgQGlmIG5vdCAkZ2xvYmFsLWZsZXhib3gge1xuICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuICBAZWxzZSBpZiAkcG9zaXRpb24gPT0gdG9wIHtcbiAgICA+IGxpID4gYSB7XG4gICAgICBAaWYgJGdsb2JhbC1mbGV4Ym94IHtcbiAgICAgICAgZmxleC1mbG93OiBjb2x1bW4gbm93cmFwO1xuICAgICAgfVxuICAgICAgQGVsc2Uge1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICB9XG5cbiAgICAgIGltZyxcbiAgICAgIGkge1xuICAgICAgICBAaWYgbm90ICRnbG9iYWwtZmxleGJveCB7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgbWFyZ2luOiAwIGF1dG8gJG1lbnUtaWNvbi1zcGFjaW5nO1xuICAgICAgICB9XG4gICAgICAgIEBlbHNlIHtcbiAgICAgICAgICBhbGlnbi1zZWxmOiBzdHJldGNoO1xuICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAkbWVudS1pY29uLXNwYWNpbmc7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuQG1peGluIG1lbnUtdGV4dCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBjb2xvcjogaW5oZXJpdDtcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIHBhZGRpbmctdG9wOiAwO1xuICBwYWRkaW5nLWJvdHRvbTogMDtcbiAgcGFkZGluZzogJG1lbnUtaXRlbS1wYWRkaW5nO1xufVxuXG5AbWl4aW4gZm91bmRhdGlvbi1tZW51IHtcbiAgLm1lbnUge1xuICAgIEBpbmNsdWRlIG1lbnUtYmFzZTtcbiAgICBAaW5jbHVkZSBtZW51LWljb25zO1xuXG4gICAgLy8gT3JpZW50YXRpb25cbiAgICBAaW5jbHVkZSBtZW51LWRpcmVjdGlvbihob3Jpem9udGFsKTtcblxuICAgICYudmVydGljYWwge1xuICAgICAgQGluY2x1ZGUgbWVudS1kaXJlY3Rpb24odmVydGljYWwpO1xuICAgIH1cblxuICAgIEBlYWNoICRzaXplIGluICRicmVha3BvaW50LWNsYXNzZXMge1xuICAgICAgQGlmICRzaXplICE9ICQtemYtemVyby1icmVha3BvaW50IHtcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCgkc2l6ZSkge1xuICAgICAgICAgICYuI3skc2l6ZX0taG9yaXpvbnRhbCB7XG4gICAgICAgICAgICBAaW5jbHVkZSBtZW51LWRpcmVjdGlvbihob3Jpem9udGFsKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAmLiN7JHNpemV9LXZlcnRpY2FsIHtcbiAgICAgICAgICAgIEBpbmNsdWRlIG1lbnUtZGlyZWN0aW9uKHZlcnRpY2FsKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBTaW1wbGVcbiAgICAmLnNpbXBsZSB7XG4gICAgICBAaW5jbHVkZSBtZW51LXNpbXBsZTtcbiAgICB9XG5cbiAgICAvLyBBbGlnbiByaWdodFxuICAgICYuYWxpZ24tI3skZ2xvYmFsLXJpZ2h0fSB7XG4gICAgICBAaWYgJGdsb2JhbC1mbGV4Ym94IHtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgICAgIH1cbiAgICAgIEBlbHNlIHtcbiAgICAgICAgQGluY2x1ZGUgY2xlYXJmaXg7XG5cbiAgICAgICAgPiBsaSB7XG4gICAgICAgICAgZmxvYXQ6ICRnbG9iYWwtcmlnaHQ7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBFdmVuLXdpZHRoXG4gICAgJi5leHBhbmRlZCB7XG4gICAgICBAaW5jbHVkZSBtZW51LWV4cGFuZDtcblxuICAgICAgPiBsaTpmaXJzdC1jaGlsZDpsYXN0LWNoaWxkIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gVmVydGljYWwgaWNvbnNcbiAgICAmLmljb24tdG9wIHtcbiAgICAgIEBpbmNsdWRlIG1lbnUtaWNvbnModG9wLCAkYmFzZTogZmFsc2UpO1xuICAgIH1cblxuICAgIC8vIE5lc3RpbmdcbiAgICAmLm5lc3RlZCB7XG4gICAgICBAaW5jbHVkZSBtZW51LW5lc3RlZDtcbiAgICB9XG5cbiAgICAvLyBBY3RpdmUgc3RhdGVcbiAgICAuYWN0aXZlID4gYSB7XG4gICAgICBjb2xvcjogJG1lbnUtaXRlbS1jb2xvci1hY3RpdmU7XG4gICAgICBiYWNrZ3JvdW5kOiAkbWVudS1pdGVtLWJhY2tncm91bmQtYWN0aXZlO1xuICAgIH1cbiAgfVxuXG4gIC5tZW51LXRleHQge1xuICAgIEBpbmNsdWRlIG1lbnUtdGV4dDtcbiAgfVxuXG4gIC8vIEFsaWduIGNlbnRlclxuICAubWVudS1jZW50ZXJlZCB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuXG4gICAgPiAubWVudSB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgfVxuICB9XG5cbiAgLy8gUHJldmVudCBGT1VDIHdoZW4gdXNpbmcgdGhlIFJlc3BvbnNpdmUgTWVudSBwbHVnaW5cbiAgLm5vLWpzIFtkYXRhLXJlc3BvbnNpdmUtbWVudV0gdWwge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn1cbiIsIkBtaXhpbiBmb3VuZGF0aW9uLW1lbnUtaWNvbiB7XG4gIC5tZW51LWljb24ge1xuICAgIEBpbmNsdWRlIGhhbWJ1cmdlcigkY29sb3I6ICR0aXRsZWJhci1pY29uLWNvbG9yLCAkY29sb3ItaG92ZXI6ICR0aXRsZWJhci1pY29uLWNvbG9yLWhvdmVyKTtcbiAgfVxuXG4gIC5tZW51LWljb24uZGFyayB7XG4gICAgQGluY2x1ZGUgaGFtYnVyZ2VyO1xuICB9XG59XG4iLCIvLyBGb3VuZGF0aW9uIGZvciBTaXRlcyBieSBaVVJCXG4vLyBmb3VuZGF0aW9uLnp1cmIuY29tXG4vLyBMaWNlbnNlZCB1bmRlciBNSVQgT3BlbiBTb3VyY2VcblxuLy8vL1xuLy8vIEBncm91cCBjbG9zZS1idXR0b25cbi8vLy9cblxuLy8vIERlZmF1bHQgcG9zaXRpb24gb2YgdGhlIGNsb3NlIGJ1dHRvbi4gVGhlIGZpcnN0IHZhbHVlIHNob3VsZCBiZSBgcmlnaHRgIG9yIGBsZWZ0YCwgYW5kIHRoZSBzZWNvbmQgdmFsdWUgc2hvdWxkIGJlIGB0b3BgIG9yIGBib3R0b21gLlxuLy8vIEB0eXBlIExpc3RcbiRjbG9zZWJ1dHRvbi1wb3NpdGlvbjogcmlnaHQgdG9wICFkZWZhdWx0O1xuXG4vLy8gUmlnaHQgKG9yIGxlZnQpIG9mZnNldCBmb3IgYSBjbG9zZSBidXR0b24uXG4vLy8gQHR5cGUgTnVtYmVyXG4kY2xvc2VidXR0b24tb2Zmc2V0LWhvcml6b250YWw6IDFyZW0gIWRlZmF1bHQ7XG5cbi8vLyBUb3AgKG9yIGJvdHRvbSkgb2Zmc2V0IGZvciBhIGNsb3NlIGJ1dHRvbi5cbi8vLyBAdHlwZSBOdW1iZXJcbiRjbG9zZWJ1dHRvbi1vZmZzZXQtdmVydGljYWw6IDAuNXJlbSAhZGVmYXVsdDtcblxuLy8vIERlZmF1bHQgZm9udCBzaXplIG9mIHRoZSBjbG9zZSBidXR0b24uXG4vLy8gQHR5cGUgTnVtYmVyXG4kY2xvc2VidXR0b24tc2l6ZTogMmVtICFkZWZhdWx0O1xuXG4vLy8gVGhlIGxpbmUtaGVpZ2h0IG9mIHRoZSBjbG9zZSBidXR0b24uIEl0IGFmZmVjdHMgdGhlIHNwYWNpbmcgb2YgdGhlIGVsZW1lbnQuXG4vLy8gQHR5cGUgTnVtYmVyXG4kY2xvc2VidXR0b24tbGluZWhlaWdodDogMSAhZGVmYXVsdDtcblxuLy8vIERlZmF1bHQgY29sb3Igb2YgdGhlIGNsb3NlIGJ1dHRvbi5cbi8vLyBAdHlwZSBDb2xvclxuJGNsb3NlYnV0dG9uLWNvbG9yOiAkZGFyay1ncmF5ICFkZWZhdWx0O1xuXG4vLy8gRGVmYXVsdCBjb2xvciBvZiB0aGUgY2xvc2UgYnV0dG9uIHdoZW4gYmVpbmcgaG92ZXJlZCBvbi5cbi8vLyBAdHlwZSBDb2xvclxuJGNsb3NlYnV0dG9uLWNvbG9yLWhvdmVyOiAkYmxhY2sgIWRlZmF1bHQ7XG5cbi8vLyBBZGRzIHN0eWxlcyBmb3IgYSBjbG9zZSBidXR0b24sIHVzaW5nIHRoZSBzdHlsZXMgaW4gdGhlIHNldHRpbmdzIHZhcmlhYmxlcy5cbkBtaXhpbiBjbG9zZS1idXR0b24ge1xuICAkeDogbnRoKCRjbG9zZWJ1dHRvbi1wb3NpdGlvbiwgMSk7XG4gICR5OiBudGgoJGNsb3NlYnV0dG9uLXBvc2l0aW9uLCAyKTtcblxuICBAaW5jbHVkZSBkaXNhYmxlLW1vdXNlLW91dGxpbmU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgY29sb3I6ICRjbG9zZWJ1dHRvbi1jb2xvcjtcbiAgI3skeH06ICRjbG9zZWJ1dHRvbi1vZmZzZXQtaG9yaXpvbnRhbDtcbiAgI3skeX06ICRjbG9zZWJ1dHRvbi1vZmZzZXQtdmVydGljYWw7XG4gIGZvbnQtc2l6ZTogJGNsb3NlYnV0dG9uLXNpemU7XG4gIGxpbmUtaGVpZ2h0OiAkY2xvc2VidXR0b24tbGluZWhlaWdodDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuXG4gICY6aG92ZXIsXG4gICY6Zm9jdXMge1xuICAgIGNvbG9yOiAkY2xvc2VidXR0b24tY29sb3ItaG92ZXI7XG4gIH1cbn1cblxuQG1peGluIGZvdW5kYXRpb24tY2xvc2UtYnV0dG9uIHtcbiAgLmNsb3NlLWJ1dHRvbiB7XG4gICAgQGluY2x1ZGUgY2xvc2UtYnV0dG9uO1xuICB9XG59XG4iLCIvLyBGb3VuZGF0aW9uIGZvciBTaXRlcyBieSBaVVJCXG4vLyBmb3VuZGF0aW9uLnp1cmIuY29tXG4vLyBMaWNlbnNlZCB1bmRlciBNSVQgT3BlbiBTb3VyY2VcblxuLy8vL1xuLy8vIEBncm91cCBmbGV4LXZpZGVvXG4vLy8vXG5cbi8vLyBNYXJnaW4gYmVsb3cgYSBmbGV4IHZpZGVvIGNvbnRhaW5lci5cbi8vLyBAdHlwZSBOdW1iZXJcbiRmbGV4dmlkZW8tbWFyZ2luLWJvdHRvbTogcmVtLWNhbGMoMTYpICFkZWZhdWx0O1xuXG4vLy8gUGFkZGluZyB1c2VkIHRvIGNyZWF0ZSBhIDQ6MyBhc3BlY3QgcmF0aW8uXG4vLy8gQHR5cGUgTnVtYmVyXG4kZmxleHZpZGVvLXJhdGlvOiA0IGJ5IDMgIWRlZmF1bHQ7XG5cbi8vLyBQYWRkaW5nIHVzZWQgdG8gY3JlYXRlIGEgMTY6OSBhc3BlY3QgcmF0aW8uXG4vLy8gQHR5cGUgTnVtYmVyXG4kZmxleHZpZGVvLXJhdGlvLXdpZGVzY3JlZW46IDE2IGJ5IDkgIWRlZmF1bHQ7XG5cbi8vLyBDcmVhdGVzIGEgcGVyY2VudGFnZSBoZWlnaHQgdGhhdCBjYW4gYmUgdXNlZCBhcyBwYWRkaW5nIGluIGEgZmxleCB2aWRlbyBjb250YWluZXIuXG4vLy8gQHBhcmFtIHtMaXN0fSAkcmF0aW8gLSBSYXRpbyB0byB1c2UgdG8gY2FsY3VsYXRlIHRoZSBoZWlnaHQsIGZvcm1hdHRlZCBhcyBgeCBieSB5YC5cbi8vLyBAcmV0dXJuIHtOdW1iZXJ9IEEgcGVyY2VudGFnZSB2YWx1ZSB0aGF0IGNhbiBiZSB1c2VkIGFzIHRoZSBgcGFkZGluZy1ib3R0b21gIHBhcmFtZXRlciBvZiBhIGZsZXggdmlkZW8gY29udGFpbmVyLlxuQGZ1bmN0aW9uIGZsZXgtdmlkZW8oJHJhdGlvKSB7XG4gICR3OiBudGgoJHJhdGlvLCAxKTtcbiAgJGg6IG50aCgkcmF0aW8sIDMpO1xuICBAcmV0dXJuICRoIC8gJHcgKiAxMDAlO1xufVxuXG4vLy8gQ3JlYXRlcyBhIGZsZXggdmlkZW8gY29udGFpbmVyLlxuLy8vIEBwYXJhbSB7TGlzdH0gJHJhdGlvIFskZmxleHZpZGVvLXJhdGlvXSAtIFJhdGlvIHRvIHVzZSBmb3IgdGhlIGNvbnRhaW5lciwgZm9ybWF0dGVkIGFzIGB4IGJ5IHlgLlxuQG1peGluIGZsZXgtdmlkZW8oJHJhdGlvOiAkZmxleHZpZGVvLXJhdGlvKSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgaGVpZ2h0OiAwO1xuICBwYWRkaW5nLWJvdHRvbTogZmxleC12aWRlbygkcmF0aW8pO1xuICBtYXJnaW4tYm90dG9tOiAkZmxleHZpZGVvLW1hcmdpbi1ib3R0b207XG4gIG92ZXJmbG93OiBoaWRkZW47XG5cbiAgaWZyYW1lLFxuICBvYmplY3QsXG4gIGVtYmVkLFxuICB2aWRlbyB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICAjeyRnbG9iYWwtbGVmdH06IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICB9XG59XG5cbkBtaXhpbiBmb3VuZGF0aW9uLWZsZXgtdmlkZW8ge1xuICAuZmxleC12aWRlbyB7XG4gICAgQGluY2x1ZGUgZmxleC12aWRlbztcblxuICAgICYud2lkZXNjcmVlbiB7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogZmxleC12aWRlbygkZmxleHZpZGVvLXJhdGlvLXdpZGVzY3JlZW4pO1xuICAgIH1cblxuICAgICYudmltZW8ge1xuICAgICAgcGFkZGluZy10b3A6IDA7XG4gICAgfVxuICB9XG59XG4iLCIvLyBGb3VuZGF0aW9uIGZvciBTaXRlcyBieSBaVVJCXG4vLyBmb3VuZGF0aW9uLnp1cmIuY29tXG4vLyBMaWNlbnNlZCB1bmRlciBNSVQgT3BlbiBTb3VyY2VcblxuLy8vL1xuLy8vIEBncm91cCB0eXBvZ3JhcGh5XG4vLy8vXG5cbi8vIHNjc3MtbGludDpkaXNhYmxlIERlY2xhcmF0aW9uT3JkZXJcblxuLy8gQmFzZSB0eXBvZ3JhcGh5IHN0eWxlcyAodGFncyBvbmx5KVxuQGltcG9ydCAnYmFzZSc7XG5cbi8vIFR5cG9ncmFwaHkgaGVscGVyIGNsYXNzZXMgKGNsYXNzZXMgb25seSlcbkBpbXBvcnQgJ2hlbHBlcnMnO1xuXG4vLyBUZXh0IGFsaWdubWVudCBjbGFzc2VzXG5AaW1wb3J0ICdhbGlnbm1lbnQnO1xuXG4vLyBQcmludCBzdHlsZXNcbkBpbXBvcnQgJ3ByaW50JztcblxuQG1peGluIGZvdW5kYXRpb24tdHlwb2dyYXBoeSB7XG4gIEBpbmNsdWRlIGZvdW5kYXRpb24tdHlwb2dyYXBoeS1iYXNlO1xuICBAaW5jbHVkZSBmb3VuZGF0aW9uLXR5cG9ncmFwaHktaGVscGVycztcbiAgQGluY2x1ZGUgZm91bmRhdGlvbi10ZXh0LWFsaWdubWVudDtcbiAgQGluY2x1ZGUgZm91bmRhdGlvbi1wcmludC1zdHlsZXM7XG59XG4iLCIvLyBGb3VuZGF0aW9uIGZvciBTaXRlcyBieSBaVVJCXG4vLyBmb3VuZGF0aW9uLnp1cmIuY29tXG4vLyBMaWNlbnNlZCB1bmRlciBNSVQgT3BlbiBTb3VyY2VcblxuLy8vL1xuLy8vIEBncm91cCB0eXBvZ3JhcGh5LWJhc2Vcbi8vLy9cblxuLy8gQmFzZSBUeXBvZ3JhcGh5XG4vLyAtIC0gLSAtIC0gLSAtIC0gLSAtIC0gLSAtIC0gLVxuLy8gVGhlc2UgYXJlIHN0eWxlcyBhcHBsaWVkIHRvIGJhc2ljIEhUTUwgdGFncywgaW5jbHVkaW5nOlxuLy8gICAtIFBhcmFncmFwaHMgPHA+XG4vLyAgIC0gQm9sZC9pdGFsaWNzIDxiPiA8c3Ryb25nPiA8aT4gPGVtPlxuLy8gICAtIFNtYWxsIHRleHQgPHNtYWxsPlxuLy8gICAtIEhlYWRpbmdzIDxoMT7igJQ8aDY+XG4vLyAgIC0gQW5jaG9ycyA8YT5cbi8vICAgLSBEaXZpZGVycyA8aHI+XG4vLyAgIC0gTGlzdHMgPHVsPiA8b2w+IDxkbD5cbi8vICAgLSBCbG9ja3F1b3RlcyA8YmxvY2txdW90ZT5cbi8vICAgLSBDb2RlIGJsb2NrcyA8Y29kZT5cbi8vICAgLSBBYmJyZXZpYXRpb25zIDxhYmJyPlxuLy8gICAtIENpdGF0aW9ucyA8Y2l0ZT5cbi8vICAgLSBLZXlzdHJva2VzIDxrYmQ+XG5cbi8vLyBGb250IGZhbWlseSBmb3IgaGVhZGVyIGVsZW1lbnRzLlxuLy8vIEB0eXBlIFN0cmluZyB8IExpc3RcbiRoZWFkZXItZm9udC1mYW1pbHk6ICRib2R5LWZvbnQtZmFtaWx5ICFkZWZhdWx0O1xuXG4vLy8gRm9udCB3ZWlnaHQgb2YgaGVhZGVycy5cbi8vLyBAdHlwZSBTdHJpbmdcbiRoZWFkZXItZm9udC13ZWlnaHQ6ICRnbG9iYWwtd2VpZ2h0LW5vcm1hbCAhZGVmYXVsdDtcblxuLy8vIEZvbnQgc3R5bGUgKGUuZy4gaXRhbGljaXplZCkgb2YgaGVhZGVycy5cbi8vLyBAdHlwZSBTdHJpbmdcbiRoZWFkZXItZm9udC1zdHlsZTogbm9ybWFsICFkZWZhdWx0O1xuXG4vLy8gRm9udCBzdGFjayB1c2VkIGZvciBlbGVtZW50cyB0aGF0IHVzZSBtb25vc3BhY2VkIHR5cGUsIHN1Y2ggYXMgY29kZSBzYW1wbGVzXG4vLy8gQHR5cGUgU3RyaW5nIHwgTGlzdFxuJGZvbnQtZmFtaWx5LW1vbm9zcGFjZTogQ29uc29sYXMsICdMaWJlcmF0aW9uIE1vbm8nLCBDb3VyaWVyLCBtb25vc3BhY2UgIWRlZmF1bHQ7XG5cbi8vLyBTaXplcyBvZiBoZWFkaW5ncyBhdCB2YXJpb3VzIHNjcmVlbiBzaXplcy4gRWFjaCBrZXkgaXMgYSBicmVha3BvaW50LCBhbmQgZWFjaCB2YWx1ZSBpcyBhIG1hcCBvZiBoZWFkaW5nIHNpemVzLlxuLy8vIEB0eXBlIE1hcFxuJGhlYWRlci1zaXplczogKFxuICBzbWFsbDogKFxuICAgICdoMSc6IDI0LFxuICAgICdoMic6IDIwLFxuICAgICdoMyc6IDE5LFxuICAgICdoNCc6IDE4LFxuICAgICdoNSc6IDE3LFxuICAgICdoNic6IDE2LFxuICApLFxuICBtZWRpdW06IChcbiAgICAnaDEnOiA0OCxcbiAgICAnaDInOiA0MCxcbiAgICAnaDMnOiAzMSxcbiAgICAnaDQnOiAyNSxcbiAgICAnaDUnOiAyMCxcbiAgICAnaDYnOiAxNixcbiAgKSxcbikgIWRlZmF1bHQ7XG5cbi8vLyBDb2xvciBvZiBoZWFkZXJzLlxuLy8vIEB0eXBlIENvbG9yXG4kaGVhZGVyLWNvbG9yOiBpbmhlcml0ICFkZWZhdWx0O1xuXG4vLy8gTGluZSBoZWlnaHQgb2YgaGVhZGVycy5cbi8vLyBAdHlwZSBOdW1iZXJcbiRoZWFkZXItbGluZWhlaWdodDogMS40ICFkZWZhdWx0O1xuXG4vLy8gQm90dG9tIG1hcmdpbiBvZiBoZWFkZXJzLlxuLy8vIEB0eXBlIE51bWJlclxuJGhlYWRlci1tYXJnaW4tYm90dG9tOiAwLjVyZW0gIWRlZmF1bHQ7XG5cbi8vLyBUZXh0IHJlbmRlcmluZyBtZXRob2Qgb2YgaGVhZGVycy5cbi8vLyBAdHlwZSBTdHJpbmdcbiRoZWFkZXItdGV4dC1yZW5kZXJpbmc6IG9wdGltaXplTGVnaWJpbGl0eSAhZGVmYXVsdDtcblxuLy8vIEZvbnQgc2l6ZSBvZiBgPHNtYWxsPmAgZWxlbWVudHMuXG4vLy8gQHR5cGUgTnVtYmVyXG4kc21hbGwtZm9udC1zaXplOiA4MCUgIWRlZmF1bHQ7XG5cbi8vLyBDb2xvciBvZiBgPHNtYWxsPmAgZWxlbWVudHMgd2hlbiBwbGFjZWQgaW5zaWRlIGhlYWRlcnMuXG4vLy8gQHR5cGUgQ29sb3JcbiRoZWFkZXItc21hbGwtZm9udC1jb2xvcjogJG1lZGl1bS1ncmF5ICFkZWZhdWx0O1xuXG4vLy8gTGluZSBoZWlnaHQgb2YgdGV4dCBpbnNpZGUgYDxwPmAgZWxlbWVudHMuXG4vLy8gQHR5cGUgTnVtYmVyXG4kcGFyYWdyYXBoLWxpbmVoZWlnaHQ6IDEuNiAhZGVmYXVsdDtcblxuLy8vIEJvdHRvbSBtYXJnaW4gb2YgcGFyYWdyYXBocy5cbi8vLyBAdHlwZSBOdW1iZXJcbiRwYXJhZ3JhcGgtbWFyZ2luLWJvdHRvbTogMXJlbSAhZGVmYXVsdDtcblxuLy8vIFRleHQgcmVuZGVyaW5nIG1ldGhvZCBmb3IgcGFyYWdyYXBoIHRleHQuXG4vLy8gQHR5cGUgU3RyaW5nXG4kcGFyYWdyYXBoLXRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHkgIWRlZmF1bHQ7XG5cbi8vLyBUZXh0IGNvbG9yIG9mIGNvZGUgc2FtcGxlcy5cbi8vLyBAdHlwZSBDb2xvclxuJGNvZGUtY29sb3I6ICRibGFjayAhZGVmYXVsdDtcblxuLy8vIEZvbnQgZmFtaWx5IG9mIGNvZGUgc2FtcGxlcy5cbi8vLyBAdHlwZSBTdHJpbmcgfCBMaXN0XG4kY29kZS1mb250LWZhbWlseTogJGZvbnQtZmFtaWx5LW1vbm9zcGFjZSAhZGVmYXVsdDtcblxuLy8vIEZvbnQgd2VpZ2h0IG9mIHRleHQgaW4gY29kZSBzYW1wbGVzLlxuLy8vIEB0eXBlIFN0cmluZ1xuJGNvZGUtZm9udC13ZWlnaHQ6ICRnbG9iYWwtd2VpZ2h0LW5vcm1hbCAhZGVmYXVsdDtcblxuLy8vIEJhY2tncm91bmQgY29sb3Igb2YgY29kZSBzYW1wbGVzLlxuLy8vIEB0eXBlIENvbG9yXG4kY29kZS1iYWNrZ3JvdW5kOiAkbGlnaHQtZ3JheSAhZGVmYXVsdDtcblxuLy8vIEJvcmRlciBhcm91bmQgY29kZSBzYW1wbGVzLlxuLy8vIEB0eXBlIExpc3RcbiRjb2RlLWJvcmRlcjogMXB4IHNvbGlkICRtZWRpdW0tZ3JheSAhZGVmYXVsdDtcblxuLy8vIFBhZGRpbmcgYXJvdW5kIHRleHQgb2YgY29kZSBzYW1wbGVzLlxuLy8vIEB0eXBlIE51bWJlciB8IExpc3RcbiRjb2RlLXBhZGRpbmc6IHJlbS1jYWxjKDIgNSAxKSAhZGVmYXVsdDtcblxuLy8vIERlZmF1bHQgY29sb3IgZm9yIGxpbmtzLlxuLy8vIEB0eXBlIENvbG9yXG4kYW5jaG9yLWNvbG9yOiAkcHJpbWFyeS1jb2xvciAhZGVmYXVsdDtcblxuLy8vIERlZmF1bHQgY29sb3IgZm9yIGxpbmtzIG9uIGhvdmVyLlxuLy8vIEB0eXBlIENvbG9yXG4kYW5jaG9yLWNvbG9yLWhvdmVyOiBzY2FsZS1jb2xvcigkYW5jaG9yLWNvbG9yLCAkbGlnaHRuZXNzOiAtMTQlKSAhZGVmYXVsdDtcblxuLy8vIERlZmF1bHQgdGV4dCBkZW9jcmF0aW9uIGZvciBsaW5rcy5cbi8vLyBAdHlwZSBTdHJpbmdcbiRhbmNob3ItdGV4dC1kZWNvcmF0aW9uOiBub25lICFkZWZhdWx0O1xuXG4vLy8gRGVmYXVsdCB0ZXh0IGRlY29yYXRpb24gZm9yIGxpbmtzIG9uIGhvdmVyLlxuLy8vIEB0eXBlIFN0cmluZ1xuJGFuY2hvci10ZXh0LWRlY29yYXRpb24taG92ZXI6IG5vbmUgIWRlZmF1bHQ7XG5cbi8vLyBNYXhpbXVtIHdpZHRoIG9mIGEgZGl2aWRlci5cbi8vLyBAdHlwZSBOdW1iZXJcbiRoci13aWR0aDogJGdsb2JhbC13aWR0aCAhZGVmYXVsdDtcblxuLy8vIERlZmF1bHQgYm9yZGVyIGZvciBhIGRpdmlkZXIuXG4vLy8gQHR5cGUgTGlzdFxuJGhyLWJvcmRlcjogMXB4IHNvbGlkICRtZWRpdW0tZ3JheSAhZGVmYXVsdDtcblxuLy8vIERlZmF1bHQgbWFyZ2luIGZvciBhIGRpdmlkZXIuXG4vLy8gQHR5cGUgTnVtYmVyIHwgTGlzdFxuJGhyLW1hcmdpbjogcmVtLWNhbGMoMjApIGF1dG8gIWRlZmF1bHQ7XG5cbi8vLyBMaW5lIGhlaWdodCBmb3IgaXRlbXMgaW4gYSBsaXN0LlxuLy8vIEB0eXBlIE51bWJlclxuJGxpc3QtbGluZWhlaWdodDogJHBhcmFncmFwaC1saW5laGVpZ2h0ICFkZWZhdWx0O1xuXG4vLy8gQm90dG9tIG1hcmdpbiBmb3IgaXRlbXMgaW4gYSBsaXN0LlxuLy8vIEB0eXBlIE51bWJlclxuJGxpc3QtbWFyZ2luLWJvdHRvbTogJHBhcmFncmFwaC1tYXJnaW4tYm90dG9tICFkZWZhdWx0O1xuXG4vLy8gQnVsbGV0IHR5cGUgdG8gdXNlIGZvciB1bm9yZGVyZWQgbGlzdHMgKGUuZy4sIGBzcXVhcmVgLCBgY2lyY2xlYCwgYGRpc2NgKS5cbi8vLyBAdHlwZSBTdHJpbmdcbiRsaXN0LXN0eWxlLXR5cGU6IGRpc2MgIWRlZmF1bHQ7XG5cbi8vLyBQb3NpdGlvbmluZyBmb3IgYnVsbGV0cyBvbiB1bm9yZGVyZWQgbGlzdCBpdGVtcy5cbi8vLyBAdHlwZSBTdHJpbmdcbiRsaXN0LXN0eWxlLXBvc2l0aW9uOiBvdXRzaWRlICFkZWZhdWx0O1xuXG4vLy8gTGVmdCAob3IgcmlnaHQpIG1hcmdpbiBmb3IgbGlzdHMuXG4vLy8gQHR5cGUgTnVtYmVyXG4kbGlzdC1zaWRlLW1hcmdpbjogMS4yNXJlbSAhZGVmYXVsdDtcblxuLy8vIExlZnQgKG9yIHJpZ2h0KSBtYXJnaW4gZm9yIGEgbGlzdCBpbnNpZGUgYSBsaXN0LlxuLy8vIEB0eXBlIE51bWJlclxuJGxpc3QtbmVzdGVkLXNpZGUtbWFyZ2luOiAxLjI1cmVtICFkZWZhdWx0O1xuXG4vLy8gQm90dG9tIG1hcmdpbiBmb3IgYDxkbD5gIGVsZW1lbnRzLlxuLy8vIEB0eXBlIE51bWJlclxuJGRlZm5saXN0LW1hcmdpbi1ib3R0b206IDFyZW0gIWRlZmF1bHQ7XG5cbi8vLyBGb250IHdlaWdodCBmb3IgYDxkdD5gIGVsZW1lbnRzLlxuLy8vIEB0eXBlIFN0cmluZ1xuJGRlZm5saXN0LXRlcm0td2VpZ2h0OiAkZ2xvYmFsLXdlaWdodC1ib2xkICFkZWZhdWx0O1xuXG4vLy8gU3BhY2luZyBiZXR3ZWVuIGA8ZHQ+YCBhbmQgYDxkZD5gIGVsZW1lbnRzLlxuLy8vIEB0eXBlIE51bWJlclxuJGRlZm5saXN0LXRlcm0tbWFyZ2luLWJvdHRvbTogMC4zcmVtICFkZWZhdWx0O1xuXG4vLy8gVGV4dCBjb2xvciBvZiBgPGJsb2NrcXVvdGU+YCBlbGVtZW50cy5cbi8vLyBAdHlwZSBDb2xvclxuJGJsb2NrcXVvdGUtY29sb3I6ICRkYXJrLWdyYXkgIWRlZmF1bHQ7XG5cbi8vLyBQYWRkaW5nIGluc2lkZSBhIGA8YmxvY2txdW90ZT5gIGVsZW1lbnQuXG4vLy8gQHR5cGUgTnVtYmVyIHwgTGlzdFxuJGJsb2NrcXVvdGUtcGFkZGluZzogcmVtLWNhbGMoOSAyMCAwIDE5KSAhZGVmYXVsdDtcblxuLy8vIFNpZGUgYm9yZGVyIGZvciBgPGJsb2NrcXVvdGU+YCBlbGVtZW50cy5cbi8vLyBAdHlwZSBMaXN0XG4kYmxvY2txdW90ZS1ib3JkZXI6IDFweCBzb2xpZCAkbWVkaXVtLWdyYXkgIWRlZmF1bHQ7XG5cbi8vLyBGb250IHNpemUgZm9yIGA8Y2l0ZT5gIGVsZW1lbnRzLlxuLy8vIEB0eXBlIE51bWJlclxuJGNpdGUtZm9udC1zaXplOiByZW0tY2FsYygxMykgIWRlZmF1bHQ7XG5cbi8vLyBUZXh0IGNvbG9yIGZvciBgPGNpdGU+YCBlbGVtZW50cy5cbi8vLyBAdHlwZSBDb2xvclxuJGNpdGUtY29sb3I6ICRkYXJrLWdyYXkgIWRlZmF1bHQ7XG5cbi8vLyBGb250IGZhbWlseSBmb3IgYDxrYmQ+YCBlbGVtZW50cy5cbi8vLyBAdHlwZSBTdHJpbmcgfCBMaXN0XG4ka2V5c3Ryb2tlLWZvbnQ6ICRmb250LWZhbWlseS1tb25vc3BhY2UgIWRlZmF1bHQ7XG5cbi8vLyBUZXh0IGNvbG9yIGZvciBgPGtiZD5gIGVsZW1lbnRzLlxuLy8vIEB0eXBlIENvbG9yXG4ka2V5c3Ryb2tlLWNvbG9yOiAkYmxhY2sgIWRlZmF1bHQ7XG5cbi8vLyBCYWNrZ3JvdW5kIGNvbG9yIGZvciBgPGtiZD5gIGVsZW1lbnRzLlxuLy8vIEB0eXBlIENvbG9yXG4ka2V5c3Ryb2tlLWJhY2tncm91bmQ6ICRsaWdodC1ncmF5ICFkZWZhdWx0O1xuXG4vLy8gUGFkZGluZyBmb3IgYDxrYmQ+YCBlbGVtZW50cy5cbi8vLyBAdHlwZSBOdW1iZXIgfCBMaXN0XG4ka2V5c3Ryb2tlLXBhZGRpbmc6IHJlbS1jYWxjKDIgNCAwKSAhZGVmYXVsdDtcblxuLy8vIEJvcmRlciByYWRpdXMgZm9yIGA8a2JkPmAgZWxlbWVudHMuXG4vLy8gQHR5cGUgTnVtYmVyIHwgTGlzdFxuJGtleXN0cm9rZS1yYWRpdXM6ICRnbG9iYWwtcmFkaXVzICFkZWZhdWx0O1xuXG4vLy8gQm90dG9tIGJvcmRlciBzdHlsZSBmb3IgYDxhYmJyPmAgZWxlbWVudHMuXG4vLy8gQHR5cGUgTGlzdFxuJGFiYnItdW5kZXJsaW5lOiAxcHggZG90dGVkICRibGFjayAhZGVmYXVsdDtcblxuQG1peGluIGZvdW5kYXRpb24tdHlwb2dyYXBoeS1iYXNlIHtcbiAgLy8gVHlwb2dyYXBoeSByZXNldHNcbiAgZGl2LFxuICBkbCxcbiAgZHQsXG4gIGRkLFxuICB1bCxcbiAgb2wsXG4gIGxpLFxuICBoMSxcbiAgaDIsXG4gIGgzLFxuICBoNCxcbiAgaDUsXG4gIGg2LFxuICBwcmUsXG4gIGZvcm0sXG4gIHAsXG4gIGJsb2NrcXVvdGUsXG4gIHRoLFxuICB0ZCB7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG4gIH1cblxuICAvLyBQYXJhZ3JhcGhzXG4gIHAge1xuICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgICBsaW5lLWhlaWdodDogJHBhcmFncmFwaC1saW5laGVpZ2h0O1xuICAgIG1hcmdpbi1ib3R0b206ICRwYXJhZ3JhcGgtbWFyZ2luLWJvdHRvbTtcbiAgICB0ZXh0LXJlbmRlcmluZzogJHBhcmFncmFwaC10ZXh0LXJlbmRlcmluZztcbiAgfVxuXG4gIC8vIEVtcGhhc2l6ZWQgdGV4dFxuICBlbSxcbiAgaSB7XG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xuICAgIGxpbmUtaGVpZ2h0OiBpbmhlcml0O1xuICB9XG5cbiAgLy8gU3Ryb25nIHRleHRcbiAgc3Ryb25nLFxuICBiIHtcbiAgICBmb250LXdlaWdodDogJGdsb2JhbC13ZWlnaHQtYm9sZDtcbiAgICBsaW5lLWhlaWdodDogaW5oZXJpdDtcbiAgfVxuXG4gIC8vIFNtYWxsIHRleHRcbiAgc21hbGwge1xuICAgIGZvbnQtc2l6ZTogJHNtYWxsLWZvbnQtc2l6ZTtcbiAgICBsaW5lLWhlaWdodDogaW5oZXJpdDtcbiAgfVxuXG4gIC8vIEhlYWRpbmdzXG4gIGgxLFxuICBoMixcbiAgaDMsXG4gIGg0LFxuICBoNSxcbiAgaDYge1xuICAgIGZvbnQtZmFtaWx5OiAkaGVhZGVyLWZvbnQtZmFtaWx5O1xuICAgIGZvbnQtd2VpZ2h0OiAkaGVhZGVyLWZvbnQtd2VpZ2h0O1xuICAgIGZvbnQtc3R5bGU6ICRoZWFkZXItZm9udC1zdHlsZTtcbiAgICBjb2xvcjogJGhlYWRlci1jb2xvcjtcbiAgICB0ZXh0LXJlbmRlcmluZzogJGhlYWRlci10ZXh0LXJlbmRlcmluZztcbiAgICBtYXJnaW4tdG9wOiAwO1xuICAgIG1hcmdpbi1ib3R0b206ICRoZWFkZXItbWFyZ2luLWJvdHRvbTtcbiAgICBsaW5lLWhlaWdodDogJGhlYWRlci1saW5laGVpZ2h0O1xuXG4gICAgc21hbGwge1xuICAgICAgY29sb3I6ICRoZWFkZXItc21hbGwtZm9udC1jb2xvcjtcbiAgICAgIGxpbmUtaGVpZ2h0OiAwO1xuICAgIH1cbiAgfVxuXG4gIC8vIEhlYWRpbmcgc2l6ZXNcbiAgQGVhY2ggJHNpemUsICRoZWFkZXJzIGluICRoZWFkZXItc2l6ZXMge1xuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJHNpemUpIHtcbiAgICAgIEBlYWNoICRoZWFkZXIsICRmb250LXNpemUgaW4gJGhlYWRlcnMge1xuICAgICAgICAjeyRoZWFkZXJ9IHtcbiAgICAgICAgICBmb250LXNpemU6IHJlbS1jYWxjKCRmb250LXNpemUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLy8gTGlua3NcbiAgYSB7XG4gICAgY29sb3I6ICRhbmNob3ItY29sb3I7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiAkYW5jaG9yLXRleHQtZGVjb3JhdGlvbjtcbiAgICBsaW5lLWhlaWdodDogaW5oZXJpdDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG5cbiAgICAmOmhvdmVyLFxuICAgICY6Zm9jdXMge1xuICAgICAgY29sb3I6ICRhbmNob3ItY29sb3ItaG92ZXI7XG4gICAgICBAaWYgJGFuY2hvci10ZXh0LWRlY29yYXRpb24taG92ZXIgIT0gJGFuY2hvci10ZXh0LWRlY29yYXRpb24ge1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246ICRhbmNob3ItdGV4dC1kZWNvcmF0aW9uLWhvdmVyO1xuICAgICAgfVxuICAgIH1cblxuICAgIGltZyB7XG4gICAgICBib3JkZXI6IDA7XG4gICAgfVxuICB9XG5cbiAgLy8gSG9yaXpvbnRhbCBydWxlXG4gIGhyIHtcbiAgICBtYXgtd2lkdGg6ICRoci13aWR0aDtcbiAgICBoZWlnaHQ6IDA7XG4gICAgYm9yZGVyLXJpZ2h0OiAwO1xuICAgIGJvcmRlci10b3A6IDA7XG4gICAgYm9yZGVyLWJvdHRvbTogJGhyLWJvcmRlcjtcbiAgICBib3JkZXItbGVmdDogMDtcbiAgICBtYXJnaW46ICRoci1tYXJnaW47XG4gICAgY2xlYXI6IGJvdGg7XG4gIH1cblxuICAvLyBMaXN0c1xuICB1bCxcbiAgb2wsXG4gIGRsIHtcbiAgICBsaW5lLWhlaWdodDogJGxpc3QtbGluZWhlaWdodDtcbiAgICBtYXJnaW4tYm90dG9tOiAkbGlzdC1tYXJnaW4tYm90dG9tO1xuICAgIGxpc3Qtc3R5bGUtcG9zaXRpb246ICRsaXN0LXN0eWxlLXBvc2l0aW9uO1xuICB9XG5cbiAgLy8gTGlzdCBpdGVtc1xuICBsaSB7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICB9XG5cbiAgLy8gVW5vcmRlcmVkIGxpc3RzXG4gIHVsIHtcbiAgICBsaXN0LXN0eWxlLXR5cGU6ICRsaXN0LXN0eWxlLXR5cGU7XG4gICAgbWFyZ2luLSN7JGdsb2JhbC1sZWZ0fTogJGxpc3Qtc2lkZS1tYXJnaW47XG4gIH1cblxuICAvLyBPcmRlcmVkIGxpc3RzXG4gIG9sIHtcbiAgICBtYXJnaW4tI3skZ2xvYmFsLWxlZnR9OiAkbGlzdC1zaWRlLW1hcmdpbjtcbiAgfVxuXG4gIC8vIE5lc3RlZCB1bm9yZGVyZWQvb3JkZXJlZCBsaXN0c1xuICB1bCwgb2wge1xuICAgICYgJiB7XG4gICAgICBtYXJnaW4tI3skZ2xvYmFsLWxlZnR9OiAkbGlzdC1uZXN0ZWQtc2lkZS1tYXJnaW47XG4gICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgIH1cbiAgfVxuXG4gIC8vIERlZmluaXRpb24gbGlzdHNcbiAgZGwge1xuICAgIG1hcmdpbi1ib3R0b206ICRkZWZubGlzdC1tYXJnaW4tYm90dG9tO1xuXG4gICAgZHQge1xuICAgICAgbWFyZ2luLWJvdHRvbTogJGRlZm5saXN0LXRlcm0tbWFyZ2luLWJvdHRvbTtcbiAgICAgIGZvbnQtd2VpZ2h0OiAkZGVmbmxpc3QtdGVybS13ZWlnaHQ7XG4gICAgfVxuICB9XG5cbiAgLy8gQmxvY2txdW90ZXNcbiAgYmxvY2txdW90ZSB7XG4gICAgbWFyZ2luOiAwIDAgJHBhcmFncmFwaC1tYXJnaW4tYm90dG9tO1xuICAgIHBhZGRpbmc6ICRibG9ja3F1b3RlLXBhZGRpbmc7XG4gICAgYm9yZGVyLSN7JGdsb2JhbC1sZWZ0fTogJGJsb2NrcXVvdGUtYm9yZGVyO1xuXG4gICAgJiwgcCB7XG4gICAgICBsaW5lLWhlaWdodDogJHBhcmFncmFwaC1saW5laGVpZ2h0O1xuICAgICAgY29sb3I6ICRibG9ja3F1b3RlLWNvbG9yO1xuICAgIH1cbiAgfVxuXG4gIC8vIENpdGF0aW9uc1xuICBjaXRlIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBmb250LXNpemU6ICRjaXRlLWZvbnQtc2l6ZTtcbiAgICBjb2xvcjogJGNpdGUtY29sb3I7XG5cbiAgICAmOmJlZm9yZSB7XG4gICAgICBjb250ZW50OiAnXFwyMDE0IFxcMDAyMCc7XG4gICAgfVxuICB9XG5cbiAgLy8gQWJicmV2aWF0aW9uc1xuICBhYmJyIHtcbiAgICBjb2xvcjogJGJvZHktZm9udC1jb2xvcjtcbiAgICBjdXJzb3I6IGhlbHA7XG4gICAgYm9yZGVyLWJvdHRvbTogJGFiYnItdW5kZXJsaW5lO1xuICB9XG5cbiAgLy8gQ29kZVxuICBjb2RlIHtcbiAgICBmb250LWZhbWlseTogJGNvZGUtZm9udC1mYW1pbHk7XG4gICAgZm9udC13ZWlnaHQ6ICRjb2RlLWZvbnQtd2VpZ2h0O1xuICAgIGNvbG9yOiAkY29kZS1jb2xvcjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29kZS1iYWNrZ3JvdW5kO1xuICAgIGJvcmRlcjogJGNvZGUtYm9yZGVyO1xuICAgIHBhZGRpbmc6ICRjb2RlLXBhZGRpbmc7XG4gIH1cblxuICAvLyBLZXlzdHJva2VzXG4gIGtiZCB7XG4gICAgcGFkZGluZzogJGtleXN0cm9rZS1wYWRkaW5nO1xuICAgIG1hcmdpbjogMDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAka2V5c3Ryb2tlLWJhY2tncm91bmQ7XG4gICAgY29sb3I6ICRrZXlzdHJva2UtY29sb3I7XG4gICAgZm9udC1mYW1pbHk6ICRrZXlzdHJva2UtZm9udDtcblxuICAgIEBpZiBoYXMtdmFsdWUoJGtleXN0cm9rZS1yYWRpdXMpIHtcbiAgICAgIGJvcmRlci1yYWRpdXM6ICRrZXlzdHJva2UtcmFkaXVzO1xuICAgIH1cbiAgfVxufVxuIiwiLy8gRm91bmRhdGlvbiBmb3IgU2l0ZXMgYnkgWlVSQlxuLy8gZm91bmRhdGlvbi56dXJiLmNvbVxuLy8gTGljZW5zZWQgdW5kZXIgTUlUIE9wZW4gU291cmNlXG5cbi8vLy9cbi8vLyBAZ3JvdXAgdHlwb2dyYXBoeS1oZWxwZXJzXG4vLy8vXG5cbi8vLyBEZWZhdWx0IGZvbnQgc2l6ZSBmb3IgbGVhZCBwYXJhZ3JhcGhzLlxuLy8vIEB0eXBlIE51bWJlclxuJGxlYWQtZm9udC1zaXplOiAkZ2xvYmFsLWZvbnQtc2l6ZSAqIDEuMjUgIWRlZmF1bHQ7XG5cbi8vLyBEZWZhdWx0IGxpbmUgaGVpZ2h0IGZvciBsZWFkIHBhcmFncmFwaHMuXG4vLy8gQHR5cGUgU3RyaW5nXG4kbGVhZC1saW5laGVpZ2h0OiAxLjYgIWRlZmF1bHQ7XG5cbi8vLyBEZWZhdWx0IGxpbmUgaGVpZ2h0IGZvciBzdWJoZWFkZXJzLlxuLy8vIEB0eXBlIE51bWJlclxuJHN1YmhlYWRlci1saW5laGVpZ2h0OiAxLjQgIWRlZmF1bHQ7XG5cbi8vLyBEZWZhdWx0IGZvbnQgY29sb3IgZm9yIHN1YmhlYWRlcnMuXG4vLy8gQHR5cGUgQ29sb3JcbiRzdWJoZWFkZXItY29sb3I6ICRkYXJrLWdyYXkgIWRlZmF1bHQ7XG5cbi8vLyBEZWZhdWx0IGZvbnQgd2VpZ2h0IGZvciBzdWJoZWFkZXJzLlxuLy8vIEB0eXBlIFN0cmluZ1xuJHN1YmhlYWRlci1mb250LXdlaWdodDogJGdsb2JhbC13ZWlnaHQtbm9ybWFsICFkZWZhdWx0O1xuXG4vLy8gRGVmYXVsdCB0b3AgbWFyZ2luIGZvciBzdWJoaGVhZGVycy5cbi8vLyBAdHlwZSBOdW1iZXJcbiRzdWJoZWFkZXItbWFyZ2luLXRvcDogMC4ycmVtICFkZWZhdWx0O1xuXG4vLy8gRGVmYXVsdCBib3R0b20gbWFyZ2luIGZvciBzdWJoZWFkZXJzLlxuLy8vIEB0eXBlIE51bWJlclxuJHN1YmhlYWRlci1tYXJnaW4tYm90dG9tOiAwLjVyZW0gIWRlZmF1bHQ7XG5cbi8vLyBEZWZhdWx0IGZvbnQgc2l6ZSBmb3Igc3RhdGlzdGljIG51bWJlcnMuXG4vLy8gQHR5cGUgTnVtYmVyXG4kc3RhdC1mb250LXNpemU6IDIuNXJlbSAhZGVmYXVsdDtcblxuQG1peGluIGZvdW5kYXRpb24tdHlwb2dyYXBoeS1oZWxwZXJzIHtcbiAgLy8gVXNlIHRvIGNyZWF0ZSBhIHN1YmhlYWRpbmcgdW5kZXIgYSBtYWluIGhlYWRlclxuICAvLyBNYWtlIHN1cmUgeW91IHBhaXIgdGhlIHR3byBlbGVtZW50cyBpbiBhIDxoZWFkZXI+IGVsZW1lbnQsIGxpa2UgdGhpczpcbiAgLy8gPGhlYWRlcj5cbiAgLy8gICA8aDE+SGVhZGluZzwvaDE+XG4gIC8vICAgPGgyPlN1YmhlYWRpbmc8L2gyPlxuICAvLyA8L2hlYWRlcj5cbiAgLnN1YmhlYWRlciB7XG4gICAgbWFyZ2luLXRvcDogJHN1YmhlYWRlci1tYXJnaW4tdG9wO1xuICAgIG1hcmdpbi1ib3R0b206ICRzdWJoZWFkZXItbWFyZ2luLWJvdHRvbTtcbiAgICBmb250LXdlaWdodDogJHN1YmhlYWRlci1mb250LXdlaWdodDtcbiAgICBsaW5lLWhlaWdodDogJHN1YmhlYWRlci1saW5laGVpZ2h0O1xuICAgIGNvbG9yOiAkc3ViaGVhZGVyLWNvbG9yO1xuICB9XG5cbiAgLy8gVXNlIHRvIHN0eWxlIGFuIGludHJvZHVjdG9yeSBsZWFkLCBkZWNrLCBibHVyYiwgZXRjLlxuICAubGVhZCB7XG4gICAgZm9udC1zaXplOiAkbGVhZC1mb250LXNpemU7XG4gICAgbGluZS1oZWlnaHQ6ICRsZWFkLWxpbmVoZWlnaHQ7XG4gIH1cblxuICAvLyBVc2UgdG8gc3R5bGUgYSBsYXJnZSBudW1iZXIgdG8gZGlzcGxheSBhIHN0YXRpc3RpY1xuICAuc3RhdCB7XG4gICAgZm9udC1zaXplOiAkc3RhdC1mb250LXNpemU7XG4gICAgbGluZS1oZWlnaHQ6IDE7XG5cbiAgICBwICsgJiB7XG4gICAgICBtYXJnaW4tdG9wOiAtMXJlbTtcbiAgICB9XG4gIH1cblxuICAvLyBVc2UgdG8gcmVtb3ZlIHRoZSBidWxsZXRzIGZyb20gYW4gdW5vcmRlcmVkIGxpc3RcbiAgLm5vLWJ1bGxldCB7XG4gICAgbWFyZ2luLSN7JGdsb2JhbC1sZWZ0fTogMDtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuICB9XG59XG4iLCIvLyBGb3VuZGF0aW9uIGZvciBTaXRlcyBieSBaVVJCXG4vLyBmb3VuZGF0aW9uLnp1cmIuY29tXG4vLyBMaWNlbnNlZCB1bmRlciBNSVQgT3BlbiBTb3VyY2VcblxuQG1peGluIGZvdW5kYXRpb24tdGV4dC1hbGlnbm1lbnQge1xuICBAZWFjaCAkc2l6ZSBpbiAkYnJlYWtwb2ludC1jbGFzc2VzIHtcbiAgICBAaW5jbHVkZSBicmVha3BvaW50KCRzaXplKSB7XG4gICAgICBAZWFjaCAkYWxpZ24gaW4gKGxlZnQsIHJpZ2h0LCBjZW50ZXIsIGp1c3RpZnkpIHtcbiAgICAgICAgQGlmICRzaXplICE9ICQtemYtemVyby1icmVha3BvaW50IHtcbiAgICAgICAgICAuI3skc2l6ZX0tdGV4dC0jeyRhbGlnbn0ge1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogJGFsaWduO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBAZWxzZSB7XG4gICAgICAgICAgLnRleHQtI3skYWxpZ259IHtcbiAgICAgICAgICAgIHRleHQtYWxpZ246ICRhbGlnbjtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiIsIi8vIEZvdW5kYXRpb24gZm9yIFNpdGVzIGJ5IFpVUkJcbi8vIGZvdW5kYXRpb24uenVyYi5jb21cbi8vIExpY2Vuc2VkIHVuZGVyIE1JVCBPcGVuIFNvdXJjZVxuXG4vLy8gSWYgYHRydWVgLCBhbGwgZWxlbWVudHMgd2lsbCBoYXZlIHRyYW5zcGFyZW50IGJhY2tncm91bmRzIHdoZW4gcHJpbnRlZCwgdG8gc2F2ZSBvbiBpbmsuXG4vLy8gQHR5cGUgQm9vbGVhblxuLy8vIEBncm91cCBnbG9iYWxcbiRwcmludC10cmFuc3BhcmVudC1iYWNrZ3JvdW5kczogdHJ1ZSAhZGVmYXVsdDtcblxuLy8gc2Nzcy1saW50OmRpc2FibGUgYWxsXG5cbkBtaXhpbiBmb3VuZGF0aW9uLXByaW50LXN0eWxlcyB7XG4gIC5zaG93LWZvci1wcmludCB7IGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfVxuXG4gIEBtZWRpYSBwcmludCB7XG4gICAgKiB7XG4gICAgICBAaWYgJHByaW50LXRyYW5zcGFyZW50LWJhY2tncm91bmRzIHtcbiAgICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcbiAgICAgIH1cblxuICAgICAgY29sb3I6IGJsYWNrICFpbXBvcnRhbnQ7IC8vIEJsYWNrIHByaW50cyBmYXN0ZXI6IGg1YnAuY29tL3NcbiAgICAgIGJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcbiAgICAgIHRleHQtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XG4gICAgfVxuXG4gICAgLnNob3ctZm9yLXByaW50IHsgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDsgfVxuICAgIC5oaWRlLWZvci1wcmludCB7IGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfVxuXG4gICAgdGFibGUuc2hvdy1mb3ItcHJpbnQgeyBkaXNwbGF5OiB0YWJsZSAhaW1wb3J0YW50OyB9XG4gICAgdGhlYWQuc2hvdy1mb3ItcHJpbnQgeyBkaXNwbGF5OiB0YWJsZS1oZWFkZXItZ3JvdXAgIWltcG9ydGFudDsgfVxuICAgIHRib2R5LnNob3ctZm9yLXByaW50IHsgZGlzcGxheTogdGFibGUtcm93LWdyb3VwICFpbXBvcnRhbnQ7IH1cbiAgICB0ci5zaG93LWZvci1wcmludCB7IGRpc3BsYXk6IHRhYmxlLXJvdyAhaW1wb3J0YW50OyB9XG4gICAgdGQuc2hvdy1mb3ItcHJpbnQgeyBkaXNwbGF5OiB0YWJsZS1jZWxsICFpbXBvcnRhbnQ7IH1cbiAgICB0aC5zaG93LWZvci1wcmludCB7IGRpc3BsYXk6IHRhYmxlLWNlbGwgIWltcG9ydGFudDsgfVxuXG4gICAgLy8gRGlzcGxheSB0aGUgVVJMIG9mIGEgbGluayBhZnRlciB0aGUgdGV4dFxuICAgIGEsXG4gICAgYTp2aXNpdGVkIHsgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7fVxuICAgIGFbaHJlZl06YWZ0ZXIgeyBjb250ZW50OiAnICgnIGF0dHIoaHJlZikgJyknOyB9XG5cbiAgICAvLyBEb24ndCBkaXNwbGF5IHRoZSBVUkwgZm9yIGltYWdlcyBvciBKYXZhU2NyaXB0L2ludGVybmFsIGxpbmtzXG4gICAgLmlyIGE6YWZ0ZXIsXG4gICAgYVtocmVmXj0namF2YXNjcmlwdDonXTphZnRlcixcbiAgICBhW2hyZWZePScjJ106YWZ0ZXIgeyBjb250ZW50OiAnJzsgfVxuXG4gICAgLy8gRGlzcGxheSB3aGF0IGFuIGFiYnJldmlhdGlvbiBzdGFuZHMgZm9yIGFmdGVyIHRoZSB0ZXh0XG4gICAgYWJiclt0aXRsZV06YWZ0ZXIgeyBjb250ZW50OiAnICgnIGF0dHIodGl0bGUpICcpJzsgfVxuXG4gICAgLy8gUHJldmVudCBwYWdlIGJyZWFrcyBpbiB0aGUgbWlkZGxlIG9mIGEgYmxvY2txdW90ZSBvciBwcmVmb3JtYXR0ZWQgdGV4dCBibG9ja1xuICAgIHByZSxcbiAgICBibG9ja3F1b3RlIHtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICRkYXJrLWdyYXk7XG4gICAgICBwYWdlLWJyZWFrLWluc2lkZTogYXZvaWQ7XG4gICAgfVxuXG4gICAgLy8gaDVicC5jb20vdFxuICAgIHRoZWFkIHsgZGlzcGxheTogdGFibGUtaGVhZGVyLWdyb3VwOyB9XG5cbiAgICB0cixcbiAgICBpbWcgeyBwYWdlLWJyZWFrLWluc2lkZTogYXZvaWQ7IH1cblxuICAgIGltZyB7IG1heC13aWR0aDogMTAwJSAhaW1wb3J0YW50OyB9XG5cbiAgICBAcGFnZSB7IG1hcmdpbjogMC41Y207IH1cblxuICAgIHAsXG4gICAgaDIsXG4gICAgaDMge1xuICAgICAgb3JwaGFuczogMztcbiAgICAgIHdpZG93czogMztcbiAgICB9XG5cbiAgICAvLyBBdm9pZCBwYWdlIGJyZWFrcyBhZnRlciBhIGhlYWRpbmdcbiAgICBoMixcbiAgICBoMyB7IHBhZ2UtYnJlYWstYWZ0ZXI6IGF2b2lkOyB9XG4gIH1cbn1cbiIsIkBpbXBvcnQgXCJzcmMvbW90aW9uLXVpXCI7XG5cbkBpbmNsdWRlIG1vdGlvbi11aS10cmFuc2l0aW9ucztcbkBpbmNsdWRlIG1vdGlvbi11aS1hbmltYXRpb25zO1xuIiwiLy8gTW90aW9uIFVJIGJ5IFpVUkJcbi8vIGZvdW5kYXRpb24uenVyYi5jb20vbW90aW9uLXVpXG4vLyBMaWNlbnNlZCB1bmRlciBNSVQgT3BlbiBTb3VyY2VcblxuQGltcG9ydCAnc2V0dGluZ3MnO1xuXG5AaW1wb3J0ICd1dGlsL2FuaW1hdGlvbic7XG5AaW1wb3J0ICd1dGlsL2FyZ3MnO1xuQGltcG9ydCAndXRpbC9rZXlmcmFtZSc7XG5AaW1wb3J0ICd1dGlsL3NlbGVjdG9yJztcbkBpbXBvcnQgJ3V0aWwvc2VyaWVzJztcbkBpbXBvcnQgJ3V0aWwvdHJhbnNpdGlvbic7XG5AaW1wb3J0ICd1dGlsL3VuaXQnO1xuXG5AaW1wb3J0ICdlZmZlY3RzL2ZhZGUnO1xuQGltcG9ydCAnZWZmZWN0cy9oaW5nZSc7XG5AaW1wb3J0ICdlZmZlY3RzL3NwaW4nO1xuQGltcG9ydCAnZWZmZWN0cy96b29tJztcbkBpbXBvcnQgJ2VmZmVjdHMvc2hha2UnO1xuQGltcG9ydCAnZWZmZWN0cy9zbGlkZSc7XG5AaW1wb3J0ICdlZmZlY3RzL3dpZ2dsZSc7XG5cbkBpbXBvcnQgJ3RyYW5zaXRpb25zL2ZhZGUnO1xuQGltcG9ydCAndHJhbnNpdGlvbnMvaGluZ2UnO1xuQGltcG9ydCAndHJhbnNpdGlvbnMvem9vbSc7XG5AaW1wb3J0ICd0cmFuc2l0aW9ucy9zbGlkZSc7XG5AaW1wb3J0ICd0cmFuc2l0aW9ucy9zcGluJztcblxuQGltcG9ydCAnY2xhc3Nlcyc7XG4iLCIvLy8gRm9ybWF0IGZvciBDU1MgY2xhc3NlcyBjcmVhdGVkIHdpdGggTW90aW9uIFVJLlxuLy8vIEB0eXBlIE1hcFxuLy8vIEBwcm9wIHtCb29sZWFufSBhcHBlbmQgW3RydWVdIC0gRGVmaW5lcyBpZiBzZWxlY3RvcnMgYXJlIGNoYWluZWQgdG8gdGhlIHNlbGVjdG9yIChgLmNsYXNzLmVudGVyYCksIG9yIGFwcGVuZGVkIGFzIGEgbmV3IGNsYXNzIChgLmNsYXNzLWVudGVyYCkuXG4vLy8gQHByb3Age1N0cmluZ30gcHJlZml4IFsnbXVpLSddIC0gUHJlZml4IHRvIGFkZCBiZWZvcmUgdGhlIHN0YXRlIG9mIGEgY2xhc3MuIEVudGVyIGFuIGVtcHR5IHN0cmluZyB0byB1c2Ugbm8gcHJlZml4LlxuLy8vIEBwcm9wIHtTdHJpbmd9IHByZWZpeCBbJy1hY3RpdmUnXSAtIFN1ZmZpeCB0byBhZGQgdG8gdGhlIGFjdGl2ZSBzdGF0ZSBjbGFzcy5cbiRtb3Rpb24tdWktY2xhc3NlczogKFxuICBjaGFpbjogdHJ1ZSxcbiAgcHJlZml4OiAnbXVpLScsXG4gIGFjdGl2ZTogJy1hY3RpdmUnLFxuKSAhZGVmYXVsdDtcblxuLy8vIFN0YXRlIG5hbWVzIHRvIHJlZmVyZW5jZSB3aGVuIHdyaXRpbmcgbW90aW9uIGNsYXNzZXMuIFRvIHVzZSBtdWx0aXBsZSBjbGFzcyBuYW1lcyBmb3Igb25lIHN0YXRlLCBlbnRlciBhIGxpc3Qgb2Ygc3RyaW5ncyBpbnN0ZWFkIG9mIG9uZSBzdHJpbmcuXG4vLy8gQHR5cGUgTWFwXG4kbW90aW9uLXVpLXN0YXRlczogKFxuICBpbjogJ2VudGVyJyxcbiAgb3V0OiAnbGVhdmUnLFxuKSAhZGVmYXVsdDtcblxuLy8vIERlZmF1bHQgc3BlZWQgdGhhdCB0cmFuc2l0aW9ucyBhbmQgYW5pbWF0aW9ucyBwbGF5IGF0LCBhbG9uZyB3aXRoIHZhbHVlcyBmb3IgbW9kaWZpZXIgY2xhc3NlcyB0byBjaGFuZ2UgdGhlIHNwZWVkLlxuLy8vIEB0eXBlIE1hcFxuJG1vdGlvbi11aS1zcGVlZHM6IChcbiAgZGVmYXVsdDogNTAwbXMsXG4gIHNsb3c6IDc1MG1zLFxuICBmYXN0OiAyNTBtcyxcbikgIWRlZmF1bHQ7XG5cbi8vLyBEZWZhdWx0IGRlbGF5IHRvIGFkZCBiZWZvcmUgbW90aW9uLCBhbG9uZyB3aXRoIHZhbHVlcyBmb3IgbW9kaWZpZXIgY2xhc3NlcyB0byBjaGFuZ2UgdGhlIGRlbGF5LlxuLy8vIEB0eXBlIE1hcFxuJG1vdGlvbi11aS1kZWxheXM6IChcbiAgZGVmYXVsdDogMCxcbiAgc2hvcnQ6IDMwMG1zLFxuICBsb25nOiA3MDBtcyxcbikgIWRlZmF1bHQ7XG5cbi8vLyBEZWZhdWx0IGVhc2luZyBmb3IgdHJhbnNpdGlvbnMgYW5kIGFuaW1hdGlvbnMsIGFsb25nIHdpdGggdmFsdWVzIGZvciBtb2RpZmllciBjbGFzc2VzIHRvIGNoYW5nZSB0aGUgZWFzaW5nLlxuLy8vIEB0eXBlIE1hcFxuJG1vdGlvbi11aS1lYXNpbmdzOiAoXG4gIGRlZmF1bHQ6IGxpbmVhcixcbiAgbGluZWFyOiBsaW5lYXIsXG4gIGVhc2U6IGVhc2UsXG4gIGVhc2UtaW46IGVhc2UtaW4sXG4gIGVhc2Utb3V0OiBlYXNlLW91dCxcbiAgZWFzZS1pbi1vdXQ6IGVhc2UtaW4tb3V0LFxuICBib3VuY2UtaW46IGN1YmljLWJlemllcigwLjQ4NSwgMC4xNTUsIDAuMjQsIDEuMjQ1KSxcbiAgYm91bmNlLW91dDogY3ViaWMtYmV6aWVyKDAuNDg1LCAwLjE1NSwgMC41MTUsIDAuODQ1KSxcbiAgYm91bmNlLWluLW91dDogY3ViaWMtYmV6aWVyKDAuNzYsIC0wLjI0NSwgMC4yNCwgMS4yNDUpLFxuKSAhZGVmYXVsdDtcblxuLy8vIE1pc2NlbGxhbmVvdXMgc2V0dGluZ3MgcmVsYXRlZCB0byBNb3Rpb24gVUkuXG4vLy8gQHR5cGUgTWFwXG4vLy8gQHByb3Age0Jvb2xlYW59IHNsaWRlLWFuZC1mYWRlIFtmYWxzZV0gLSBEZWZpbmVzIGlmIHNsaWRlIG1vdGlvbnMgc2hvdWxkIGFsc28gZmFkZSBpbi9vdXQuXG4vLy8gQHByb3Age0Jvb2xlYW59IHNsaWRlLWFuZC1mYWRlIFt0cnVlXSAtIERlZmluZXMgaWYgaGluZ2UgbW90aW9ucyBzaG91bGQgYWxzbyBmYWRlIGluL291dC5cbi8vLyBAcHJvcCB7Qm9vbGVhbn0gc2xpZGUtYW5kLWZhZGUgW3RydWVdIC0gRGVmaW5lcyBpZiBzY2FsZSBtb3Rpb25zIHNob3VsZCBhbHNvIGZhZGUgaW4vb3V0LlxuLy8vIEBwcm9wIHtCb29sZWFufSBzbGlkZS1hbmQtZmFkZSBbdHJ1ZV0gLSBEZWZpbmVzIGlmIHNwaW4gbW90aW9ucyBzaG91bGQgYWxzbyBmYWRlIGluL291dC5cbiRtb3Rpb24tdWktc2V0dGluZ3M6IChcbiAgc2xpZGUtYW5kLWZhZGU6IGZhbHNlLFxuICBoaW5nZS1hbmQtZmFkZTogdHJ1ZSxcbiAgc2NhbGUtYW5kLWZhZGU6IHRydWUsXG4gIHNwaW4tYW5kLWZhZGU6IHRydWUsXG4gIGFjdGl2YXRlLXF1ZXVlLWNsYXNzOiAnaXMtYW5pbWF0aW5nJyxcbikgIWRlZmF1bHQ7XG4iLCIvLy8gQ3JlYXRlcyBhIGtleWZyYW1lIGZyb20gb25lIG9yIG1vcmUgZWZmZWN0IGZ1bmN0aW9ucyBhbmQgYXNzaWducyBpdCB0byB0aGUgZWxlbWVudCBieSBhZGRpbmcgdGhlIGBhbmltYXRpb24tbmFtZWAgcHJvcGVydHkuXG4vLy8gQHBhcmFtIHtGdW5jdGlvbn0gJGVmZmVjdHMuLi4gLSBPbmUgb3IgbW9yZSBlZmZlY3QgZnVuY3Rpb25zIHRvIGJ1aWxkIHRoZSBrZXlmcmFtZSB3aXRoLlxuQG1peGluIG11aS1hbmltYXRpb24oJGFyZ3MuLi4pIHtcbiAgJG5hbWU6IG1hcC1nZXQoLW11aS1wcm9jZXNzLWFyZ3MoJGFyZ3MuLi4pLCBuYW1lKTtcbiAgQGluY2x1ZGUgbXVpLWtleWZyYW1lcygkbmFtZSwgJGFyZ3MuLi4pO1xuICBhbmltYXRpb24tbmFtZTogdW5xdW90ZSgkbmFtZSk7XG59XG4iLCIvLy8gUHJvY2Vzc2VzIGEgc2VyaWVzIG9mIGtleWZyYW1lIGZ1bmN0aW9uIGFyZ3VtZW50cy5cbi8vLyBAYWNjZXNzIHByaXZhdGVcbkBmdW5jdGlvbiAtbXVpLXByb2Nlc3MtYXJncygkYXJncy4uLikge1xuICBAaWYgbGVuZ3RoKCRhcmdzKSA9PSAxIHtcbiAgICAkYXJnOiBudGgoJGFyZ3MsIDEpO1xuXG4gICAgQGlmIHR5cGUtb2YoJGFyZykgPT0gJ3N0cmluZycge1xuICAgICAgQHJldHVybiBjYWxsKCRhcmcpO1xuICAgIH0gQGVsc2UgaWYgdHlwZS1vZigkYXJnKSA9PSAnbWFwJyB7XG4gICAgICBAcmV0dXJuICRhcmc7XG4gICAgfVxuICB9XG5cbiAgQHJldHVybiAtbXVpLWtleWZyYW1lLWNvbWJpbmUoJGFyZ3MuLi4pO1xufVxuIiwiLy8gSW50ZXJuYWwgY291bnRlciBmb3IgY3JlYXRpbmcgdW5pcXVlIGtleWZyYW1lIG5hbWVzXG4kLW11aS1jdXN0b206IDA7XG5cbi8vLyBDcmVhdGVzIGEga2V5ZnJhbWUgZnJvbSBvbmUgb3IgbW9yZSBlZmZlY3QgZnVuY3Rpb25zLiBVc2UgdGhpcyBmdW5jdGlvbiBpbnN0ZWFkIG9mIGBtdWktYW5pbWF0aW9uYCBpZiB5b3Ugd2FudCB0byBjcmVhdGUgYSBrZXlmcmFtZSBhbmltYXRpb24gKndpdGhvdXQqIGF1dG9tYXRpY2FsbHkgYXNzaWduaW5nIGl0IHRvIHRoZSBlbGVtZW50LlxuLy8vIEBwYXJhbSB7U3RyaW5nfSAkbmFtZSAtIE5hbWUgb2YgdGhlIGtleWZyYW1lLlxuLy8vIEBwYXJhbSB7RnVuY3Rpb259ICRlZmZlY3RzLi4uIC0gT25lIG9yIG1vcmUgZWZmZWN0IGZ1bmN0aW9ucyB0byBidWlsZCB0aGUga2V5ZnJhbWUgd2l0aC5cbkBtaXhpbiBtdWkta2V5ZnJhbWVzKCRuYW1lLCAkZWZmZWN0cy4uLikge1xuICAkb2JqOiAtbXVpLXByb2Nlc3MtYXJncygkZWZmZWN0cy4uLik7XG4gICRvYmo6IG1hcC1yZW1vdmUoJG9iaiwgbmFtZSk7XG5cbiAgQGtleWZyYW1lcyAjeyRuYW1lfSB7XG4gICAgLy8gTm93IGl0ZXJhdGUgdGhyb3VnaCBlYWNoIGtleWZyYW1lIHBlcmNlbnRhZ2VcbiAgICBAZWFjaCAkcGN0LCAkcHJvcHMgaW4gJG9iaiB7XG4gICAgICAjey1tdWkta2V5ZnJhbWUtcGN0KCRwY3QpfSB7XG4gICAgICAgIC8vIExhc3RseSwgaXRlcmF0ZSB0aHJvdWdoIGVhY2ggQ1NTIHByb3BlcnR5IHdpdGhpbiBhIHBlcmNlbnRhZ2UgYW5kIHByaW50IGl0IG91dFxuICAgICAgICBAZWFjaCAkcHJvcCwgJHZhbHVlIGluICRwcm9wcyB7XG4gICAgICAgICAgI3skcHJvcH06ICN7JHZhbHVlfTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG4vLy8gQ3JlYXRlcyBhIHN0cmluZyBmb3IgYSBDU1Mga2V5ZnJhbWUsIGJ5IGNvbnZlcnRpbmcgYSBsaXN0IG9mIG51bWJlcnMgdG8gYSBjb21tYS1zZXBhcmF0ZWQgbGlzdCBvZiBwZXJjZW50YWdlIHZhbHVlcy5cbi8vLyBAcGFyYW0ge051bWJlcnxMaXN0fSAkaW5wdXQgLSBMaXN0IG9mIG51bWJlcnMgdG8gdXNlLlxuLy8vIEByZXR1cm4ge1N0cmluZ30gQSBzZXQgb2YgY29tbWEtc2VwYXJhdGVkIHBlcmNlbnRhZ2UgdmFsdWVzLlxuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuQGZ1bmN0aW9uIC1tdWkta2V5ZnJhbWUtcGN0KCRpbnB1dCkge1xuICAkb3V0cHV0OiAoKTtcblxuICBAaWYgdHlwZS1vZigkaW5wdXQpID09ICdudW1iZXInIHtcbiAgICAkb3V0cHV0OiAoJGlucHV0ICogMSUpO1xuICB9IEBlbHNlIGlmIHR5cGUtb2YoJGlucHV0KSA9PSAnbGlzdCcge1xuICAgIEBlYWNoICRpIGluICRpbnB1dCB7XG4gICAgICAkb3V0cHV0OiBhcHBlbmQoJG91dHB1dCwgKCRpICogMSUpLCBjb21tYSk7XG4gICAgfVxuICB9XG5cbiAgQHJldHVybiAkb3V0cHV0O1xufVxuXG4vLy8gUHJpbnRzIHRoZSBDU1MgcHJvcGVydGllcyBmcm9tIGEgc3BlY2lmaWMga2V5IGluIGEga2V5ZnJhbWVzIG1hcC4gVXNlZCB0byBib3Jyb3cgQ1NTIGZyb20ga2V5ZnJhbWUgZnVuY3Rpb25zIGZvciB1c2UgaW4gdHJhbnNpdGlvbnMuXG4vLy8gQHBhcmFtIHtNYXB9ICRrZiAtIEtleWZyYW1lIG1hcCB0byBleHRyYWN0IGZyb20uXG4vLy8gQHBhcmFtIHtOdW1iZXJ9ICRrZXkgLSBLZXkgaW4gdGhlIG1hcCB0byBwcmludCB0aGUgQ1NTIG9mLlxuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuQG1peGluIC1tdWkta2V5ZnJhbWUtZ2V0KCRrZiwgJGtleSkge1xuICAkbWFwOiBtYXAtZ2V0KCRrZiwgJGtleSk7XG5cbiAgQGVhY2ggJHByb3AsICR2YWx1ZSBpbiAkbWFwIG9yICgpIHtcbiAgICAvLyBTb21lIGtleWZyYW1lIG1hcHMgc3RvcmUgdHJhbnNmb3JtcyBhcyBxdW90ZWQgc3RyaW5nc1xuICAgIEBpZiB0eXBlLW9mKCR2YWx1ZSkgPT0gJ3N0cmluZycge1xuICAgICAgJHZhbHVlOiB1bnF1b3RlKCR2YWx1ZSk7XG4gICAgfVxuICAgICN7JHByb3B9OiAkdmFsdWU7XG4gIH1cbn1cblxuLy8vIFJlZm9ybWF0cyBhIG1hcCBjb250YWluaW5nIGtleXMgd2l0aCBhIGxpc3Qgb2YgdmFsdWVzLCBzbyB0aGF0IGVhY2gga2V5IGlzIGEgc2luZ2xlIHZhbHVlLlxuLy8vIEBwYXJhbSB7TWFwfSAkbWFwIC0gTWFwIHRvIHNwbGl0IHVwLlxuLy8vIEByZXR1cm4ge01hcH0gQSByZWZvcm1hdHRlZCBtYXAuXG4vLy8gQGFjY2VzcyBwcml2YXRlXG5AZnVuY3Rpb24gLW11aS1rZXlmcmFtZS1zcGxpdCgkbWFwKSB7XG4gICRuZXctbWFwOiAoKTtcblxuICAvLyBTcGxpdCBrZXlzIHdpdGggbXVsdGlwbGUgdmFsdWVzIGludG8gaW5kaXZpZHVhbCBrZXlzXG4gIEBlYWNoICRrZXksICRpdGVtIGluICRtYXAge1xuICAgICRrZXktdHlwZTogdHlwZS1vZigka2V5KTtcblxuICAgIEBpZiAka2V5LXR5cGUgPT0gJ251bWJlcicge1xuICAgICAgJG5ldy1tYXA6IG1hcC1tZXJnZSgkbmV3LW1hcCwgKCRrZXk6ICRpdGVtKSk7XG4gICAgfSBAZWxzZSBpZiAka2V5LXR5cGUgPT0gJ2xpc3QnIHtcbiAgICAgIEBlYWNoICRrIGluICRrZXkge1xuICAgICAgICAkbmV3LW1hcDogbWFwLW1lcmdlKCRuZXctbWFwLCAoJGs6ICRpdGVtKSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgQHJldHVybiAkbmV3LW1hcDtcbn1cblxuLy8vIENvbWJpbmVzIGEgc2VyaWVzIG9mIGtleWZyYW1lIG9iamVjdHMgaW50byBvbmUuXG4vLy8gQHBhcmFtIHtNYXB9ICRtYXBzLi4uIC0gQSBzZXJpZXMgb2YgbWFwcyB0byBtZXJnZSwgYXMgaW5kaXZpZHVhbCBwYXJhbWV0ZXJzLlxuLy8vIEByZXR1cm4ge01hcH0gQSBjb21iaW5lZCBrZXlmcmFtZSBvYmplY3QuXG4vLy8gQGFjY2VzcyBwcml2YXRlXG5AZnVuY3Rpb24gLW11aS1rZXlmcmFtZS1jb21iaW5lKCRtYXBzLi4uKSB7XG4gICRuZXctbWFwOiAoKTtcblxuICAvLyBJdGVyYXRlIHRocm91Z2ggZWFjaCBtYXAgcGFzc2VkIGluXG4gIEBlYWNoICRtYXAgaW4gJG1hcHMge1xuICAgIEBpZiB0eXBlLW9mKCRtYXApID09ICdzdHJpbmcnIHtcbiAgICAgICRtYXA6IGNhbGwoJG1hcCk7XG4gICAgfVxuXG4gICAgJG1hcDogLW11aS1rZXlmcmFtZS1zcGxpdCgkbWFwKTtcblxuICAgIC8vIEl0ZXJhdGUgdGhyb3VnaCBlYWNoIGtleWZyYW1lIGluIHRoZSBtYXBcbiAgICAvLyAka2V5IGlzIHRoZSBrZXlmcmFtZSBwZXJjZW50YWdlXG4gICAgLy8gJHZhbHVlIGlzIGEgbWFwIG9mIENTUyBwcm9wZXJ0aWVzXG4gICAgQGVhY2ggJGtleSwgJHZhbHVlIGluICRtYXAge1xuICAgICAgJG5ldy12YWx1ZTogKCk7XG5cbiAgICAgIEBpZiBtYXAtaGFzLWtleSgkbmV3LW1hcCwgJGtleSkge1xuICAgICAgICAvLyBJZiB0aGUgbWFwIGFscmVhZHkgaGFzIHRoZSBrZXlmcmFtZSAlLCBhcHBlbmQgdGhlIG5ldyBwcm9wZXJ0eVxuICAgICAgICAkbmV3LXZhbHVlOiAtbXVpLW1lcmdlLXByb3BlcnRpZXMobWFwLWdldCgkbmV3LW1hcCwgJGtleSksICR2YWx1ZSk7XG4gICAgICB9IEBlbHNlIHtcbiAgICAgICAgLy8gT3RoZXJ3aXNlLCBjcmVhdGUgYSBuZXcgbWFwIHdpdGggdGhlIG5ldyBwcm9wZXJ0eVxuICAgICAgICAkbmV3LXZhbHVlOiAkdmFsdWU7XG4gICAgICB9XG5cbiAgICAgIC8vIEZpbmFsbHksIG1lcmdlIHRoZSBtb2RpZmllZCBrZXlmcmFtZSB2YWx1ZSBpbnRvIHRoZSBvdXRwdXQgbWFwXG4gICAgICAkbmV3LW1hcDogbWFwLW1lcmdlKCRuZXctbWFwLCAoJGtleTogJG5ldy12YWx1ZSkpO1xuICAgIH1cbiAgfVxuXG4gIC8vIE1ha2UgYSBuYW1lIGZvciB0aGUga2V5ZnJhbWVzXG4gICQtbXVpLWN1c3RvbTogJC1tdWktY3VzdG9tICsgMSAhZ2xvYmFsO1xuICAkbWFwLW5hbWU6IChuYW1lOiAnY3VzdG9tLSN7JC1tdWktY3VzdG9tfScpO1xuICAkbmV3LW1hcDogbWFwLW1lcmdlKCRuZXctbWFwLCAkbWFwLW5hbWUpO1xuXG4gIEByZXR1cm4gJG5ldy1tYXA7XG59XG5cbi8vLyBDb21iaW5lcyB0d28gbWFwcyBvZiBDU1MgcHJvcGVydGllcyBpbnRvIG9uZSBtYXAuIElmIGJvdGggbWFwcyBoYXZlIGEgdHJhbnNmb3JtIHByb3BlcnR5LCB0aGUgdmFsdWVzIGZyb20gZWFjaCB3aWxsIGJlIGNvbWJpbmVkIGludG8gb25lIHByb3BlcnR5LlxuLy8vIEBwYXJhbSB7TWFwfSAkb25lIC0gRmlyc3QgbWFwIHRvIG1lcmdlLlxuLy8vIEBwYXJhbSB7TWFwfSAkdHdvIC0gU2Vjb25kIG1hcCB0byBtZXJnZS5cbi8vLyBAcmV0dXJuIHtNYXB9IEEgY29tYmluZWQgbWFwLlxuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuQGZ1bmN0aW9uIC1tdWktbWVyZ2UtcHJvcGVydGllcygkb25lLCAkdHdvKSB7XG4gIEBpZiBtYXAtaGFzLWtleSgkb25lLCB0cmFuc2Zvcm0pIGFuZCBtYXAtaGFzLWtleSgkdHdvLCB0cmFuc2Zvcm0pIHtcbiAgICAkdHJhbnNmb3JtOiBqb2luKG1hcC1nZXQoJG9uZSwgdHJhbnNmb3JtKSwgbWFwLWdldCgkdHdvLCB0cmFuc2Zvcm0pKTtcbiAgICAkb25lOiBtYXAtbWVyZ2UoJG9uZSwgKHRyYW5zZm9ybTogJHRyYW5zZm9ybSkpO1xuICAgICR0d286IG1hcC1yZW1vdmUoJHR3bywgdHJhbnNmb3JtKTtcbiAgfVxuXG4gIEByZXR1cm4gbWFwLW1lcmdlKCRvbmUsICR0d28pO1xufVxuIiwiLy8vIEJ1aWxkcyBhIHNlbGVjdG9yIGZvciBhIG1vdGlvbiBjbGFzcywgdXNpbmcgdGhlIHNldHRpbmdzIGRlZmluZWQgaW4gdGhlIGAkbW90aW9uLXVpLWNsYXNzZXNgIGFuZCBgJG1vdGlvbi11aS1zdGF0ZXNgIG1hcHMuXG4vLy8gQHBhcmFtIHtTdHJpbmd8TGlzdH0gJHN0YXRlcyAtIE9uZSBvciBtb3JlIHN0cmluZ3MgdGhhdCBjb3JyZWxhdGUgdG8gYSBzdGF0ZS5cbi8vLyBAcGFyYW0ge0Jvb2xlYW59ICRhY3RpdmUgLSBEZWZpbmVzIGlmIHRoZSBzZWxlY3RvciBpcyBmb3IgdGhlIHNldHVwIG9yIGFjdGl2ZSBjbGFzcy5cbi8vLyBAcmV0dXJuIHtTdHJpbmd9IEEgc2VsZWN0b3IgdGhhdCBjYW4gYmUgaW50ZXJwb2xhdGVkIGludG8geW91ciBTYXNzIGNvZGUuXG4vLy8gQGFjY2VzcyBwcml2YXRlXG5AZnVuY3Rpb24gLW11aS1idWlsZC1zZWxlY3Rvcigkc3RhdGVzLCAkYWN0aXZlOiBmYWxzZSkge1xuICAkcmV0dXJuOiAnJztcbiAgJGNoYWluOiBtYXAtZ2V0KCRtb3Rpb24tdWktY2xhc3NlcywgY2hhaW4pO1xuICAkcHJlZml4OiBtYXAtZ2V0KCRtb3Rpb24tdWktY2xhc3NlcywgcHJlZml4KTtcbiAgJHN1ZmZpeDogbWFwLWdldCgkbW90aW9uLXVpLWNsYXNzZXMsIGFjdGl2ZSk7XG5cbiAgQGVhY2ggJHNlbCBpbiAkc3RhdGVzIHtcbiAgICAkcmV0dXJuOiAkcmV0dXJuICsgaWYoJGNoYWluLCAnJi4nLCAnI3smfS0nKSArICRwcmVmaXggKyAkc2VsO1xuXG4gICAgQGlmICRhY3RpdmUge1xuICAgICAgJHJldHVybjogJHJldHVybiArIGlmKCRjaGFpbiwgJy4nLCAnI3smfS0nKSArICRwcmVmaXggKyAkc2VsICsgJHN1ZmZpeDtcbiAgICB9XG5cbiAgICAkcmV0dXJuOiAkcmV0dXJuICsgJywgJztcbiAgfVxuXG4gIEByZXR1cm4gc3RyLXNsaWNlKCRyZXR1cm4sIDEsIC0zKTtcbn1cbiIsIiQtbXVpLXF1ZXVlOiAoKTtcblxuLy8vIFBhdXNlcyB0aGUgYW5pbWF0aW9uIG9uIGFuIGVsZW1lbnQgYnkgZGVmYXVsdCwgYW5kIHRoZW4gcGxheXMgaXQgd2hlbiBhbiBhY3RpdmUgY2xhc3MgaXMgYWRkZWQgdG8gYSBwYXJlbnQuIEFsc28gc2V0cyB0aGUgZmlsbCBtb2RlIG9mIHRoZSBhbmltYXRpb24gdG8gYGJvdGhgLiBUaGlzIHBhdXNlcyB0aGUgZWxlbWVudCBhdCB0aGUgZmlyc3QgZnJhbWUgb2YgdGhlIGFuaW1hdGlvbiwgYW5kIGhvbGRzIGl0IGluIHBsYWNlIGF0IHRoZSBlbmQuXG4vLy8gQGFjY2VzcyBwcml2YXRlXG4lYW5pbWF0ZWQtZWxlbWVudCB7XG4gIGFuaW1hdGlvbi1wbGF5LXN0YXRlOiBwYXVzZWQ7XG4gIGFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG5cbiAgLiN7bWFwLWdldCgkbW90aW9uLXVpLXNldHRpbmdzLCBhY3RpdmF0ZS1xdWV1ZS1jbGFzcyl9ICYge1xuICAgIGFuaW1hdGlvbi1wbGF5LXN0YXRlOiBydW5uaW5nO1xuICB9XG59XG5cbi8vLyBDcmVhdGVzIGEgbmV3IGFuaW1hdGlvbiBxdWV1ZS5cbi8vLyBAcGFyYW0ge0R1cmF0aW9ufSAkZGVsYXkgWzBzXSAtIERlbGF5IGluIHNlY29uZHMgb3IgbWlsbGlzZWNvbmRzIHRvIHBsYWNlIGF0IHRoZSBmcm9udCBvZiB0aGUgYW5pbWF0aW9uIHF1ZXVlLlxuQG1peGluIG11aS1zZXJpZXMoJGRlbGF5OiAwcykge1xuICAkLW11aS1xdWV1ZTogKCkgIWdsb2JhbDtcblxuICBAaWYgJGRlbGF5ID4gMCB7XG4gICAgJGl0ZW06ICgkZGVsYXksIDBzKTtcbiAgICAkLW11aS1xdWV1ZTogYXBwZW5kKCQtbXVpLXF1ZXVlLCAkaXRlbSkgIWdsb2JhbDtcbiAgfVxuXG4gIEBjb250ZW50O1xufVxuXG4vLy8gQWRkcyBhbiBhbmltYXRpb24gdG8gYW4gYW5pbWF0aW9uIHF1ZXVlLiBPbmx5IHVzZSB0aGlzIG1peGluIGluc2lkZSBvZiBgbXVpLXNlcmllcygpYC5cbi8vLyBAcGFyYW0ge0R1cmF0aW9ufSAkZHVyYXRpb24gWzFzXSAtIExlbmd0aCBvZiB0aGUgYW5pbWF0aW9uLlxuLy8vIEBwYXJhbSB7RHVyYXRpb259ICRnYXAgWzBzXSAtIEFtb3VudCBvZiB0aW1lIHRvIHBhdXNlIGJlZm9yZSBwbGF5aW5nIHRoZSBhbmltYXRpb24gYWZ0ZXIgdGhpcyBvbmUuIFVzZSBhIG5lZ2F0aXZlIHZhbHVlIHRvIG1ha2UgdGhlIG5leHQgZWZmZWN0IG92ZXJsYXAgd2l0aCB0aGUgY3VycmVudCBvbmUuXG4vLy8gQHBhcmFtIHtGdW5jdGlvbn0gJGtleWZyYW1lcy4uLiAtIE9uZSBvciBtb3JlIGVmZmVjdCBmdW5jdGlvbnMgdG8gYnVpbGQgdGhlIGtleWZyYW1lIHdpdGguXG5AbWl4aW4gbXVpLXF1ZXVlKFxuICAkZHVyYXRpb246IDFzLFxuICAkZ2FwOiAwcyxcbiAgJGtleWZyYW1lcy4uLlxuKSB7XG4gIC8vIEJ1aWxkIHRoZSBhbmltYXRpb25cbiAgJGtmOiAtbXVpLXByb2Nlc3MtYXJncygka2V5ZnJhbWVzLi4uKTtcblxuICAvLyBDYWxjdWxhdGUgdGhlIGRlbGF5IGZvciB0aGlzIGFuaW1hdGlvbiBiYXNlZCBvbiBob3cgbG9uZyB0aGUgcHJldmlvdXMgb25lcyB0YWtlXG4gICRhY3R1YWwtZGVsYXk6IDBzO1xuICBAZWFjaCAkYW5pbSBpbiAkLW11aS1xdWV1ZSB7XG4gICAgJGFjdHVhbC1kZWxheTogJGFjdHVhbC1kZWxheSArIG50aCgkYW5pbSwgMSkgKyBudGgoJGFuaW0sIDIpO1xuICB9XG5cbiAgLy8gQXBwZW5kIHRoaXMgYW5pbWF0aW9uJ3MgbGVuZ3RoIGFuZCBnYXAgdG8gdGhlIGVuZCBvZiB0aGUgcXVldWVcbiAgJGl0ZW06ICgkZHVyYXRpb24sICRnYXApO1xuICAkLW11aS1xdWV1ZTogYXBwZW5kKCQtbXVpLXF1ZXVlLCAkaXRlbSkgIWdsb2JhbDtcblxuICAvLyBDU1Mgb3V0cHV0XG4gIEBleHRlbmQgJWFuaW1hdGVkLWVsZW1lbnQ7XG4gIEBpbmNsdWRlIG11aS1hbmltYXRpb24oJGtmKTtcbiAgYW5pbWF0aW9uLWR1cmF0aW9uOiAkZHVyYXRpb247XG4gIGFuaW1hdGlvbi1kZWxheTogJGFjdHVhbC1kZWxheTtcbn1cbiIsIi8vLyBBcHBsaWVzIGJhc2ljIHRyYW5zaXRpb24gc2V0dGluZ3MgdG8gYW4gZWxlbWVudC5cbi8vLyBAcGFyYW0ge0R1cmF0aW9ufSAkZHVyYXRpb24gW251bGxdIC0gTGVuZ3RoIChzcGVlZCkgb2YgdGhlIHRyYW5zaXRpb24uXG4vLy8gQHBhcmFtIHtLZXl3b3JkfEZ1bmN0aW9ufSAkdGltaW5nIFtudWxsXSAtIEVhc2luZyBvZiB0aGUgdHJhbnNpdGlvbi5cbi8vLyBAcGFyYW0ge0R1cmF0aW9ufSAkZGVsYXkgW251bGxdIC0gRGVsYXkgaW4gc2Vjb25kcyBvciBtaWxsaXNlY29uZHMgYmVmb3JlIHRoZSB0cmFuc2l0aW9uIHN0YXJ0cy5cbkBtaXhpbiB0cmFuc2l0aW9uLWJhc2ljcyhcbiAgJGR1cmF0aW9uOiBudWxsLFxuICAkdGltaW5nOiBudWxsLFxuICAkZGVsYXk6IG51bGxcbikge1xuICBAaW5jbHVkZSAtbW90aW9uLXVpLWRlZmF1bHRzO1xuICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAkZHVyYXRpb247XG4gIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiAkdGltaW5nO1xuICB0cmFuc2l0aW9uLWRlbGF5OiAkZGVsYXk7XG59XG5cbi8vLyBXcmFwcyB0aGUgY29udGVudCBpbiB0aGUgc2V0dXAgY2xhc3MgZm9yIGEgdHJhbnNpdGlvbi5cbi8vLyBAcGFyYW0ge0tleXdvcmR9ICRkaXIgLSBTdGF0ZSB0byBzZXR1cCBmb3IgdHJhbnNpdGlvbi5cbkBtaXhpbiB0cmFuc2l0aW9uLXN0YXJ0KCRkaXIpIHtcbiAgJHNlbGVjdG9yOiAtbXVpLWJ1aWxkLXNlbGVjdG9yKG1hcC1nZXQoJG1vdGlvbi11aS1zdGF0ZXMsICRkaXIpKTtcblxuICBAYXQtcm9vdCB7XG4gICAgI3skc2VsZWN0b3J9IHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfVxufVxuXG4vLy8gV3JhcHMgdGhlIGNvbnRlbnQgaW4gdGhlIGFjdGl2ZSBjbGFzcyBmb3IgYSB0cmFuc2l0aW9uLlxuLy8vIEBwYXJhbSB7S2V5d29yZH0gJGRpciAtIFN0YXRlIHRvIGFjdGl2YXRlIGEgdHJhbnNpdGlvbiBvbi5cbkBtaXhpbiB0cmFuc2l0aW9uLWVuZCgkZGlyKSB7XG4gICRzZWxlY3RvcjogLW11aS1idWlsZC1zZWxlY3RvcihtYXAtZ2V0KCRtb3Rpb24tdWktc3RhdGVzLCAkZGlyKSwgdHJ1ZSk7XG5cbiAgQGF0LXJvb3Qge1xuICAgICN7JHNlbGVjdG9yfSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH1cbn1cblxuLy8vIEFkZHMgc3R5bGVzIGZvciBhIHN0YWdnZXIgYW5pbWF0aW9uLCB3aGljaCBjYW4gYmUgdXNlZCB3aXRoIEFuZ3VsYXIncyBgbmctcmVwZWF0YC5cbi8vLyBAcGFyYW0ge0R1cmF0aW9ufSAkZGVsYXktYW1vdW50IC0gQW1vdW50IG9mIHRpbWUgaW4gc2Vjb25kcyBvciBtaWxsaXNlY29uZHMgdG8gYWRkIGJldHdlZW4gZWFjaCBpdGVtJ3MgYW5pbWF0aW9uLlxuQG1peGluIHN0YWdnZXIoJGRlbGF5LWFtb3VudCkge1xuICB0cmFuc2l0aW9uLWRlbGF5OiAkZGVsYXktYW1vdW50O1xuICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAwOyAvLyBQcmV2ZW50IGFjY2lkZW50YWwgQ1NTIGluaGVyaXRhbmNlXG59XG4iLCIvLy8gUmVtb3ZlcyB0aGUgdW5pdCAoZS5nLiBweCwgZW0sIHJlbSkgZnJvbSBhIHZhbHVlLCByZXR1cm5pbmcgdGhlIG51bWJlciBvbmx5LlxuLy8vIEBwYXJhbSB7TnVtYmVyfSAkbnVtIC0gTnVtYmVyIHRvIHN0cmlwIHVuaXQgZnJvbS5cbi8vLyBAcmV0dXJuIHtOdW1iZXJ9IFRoZSBzYW1lIG51bWJlciwgc2FucyB1bml0LlxuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuQGZ1bmN0aW9uIHN0cmlwLXVuaXQoJG51bSkge1xuICBAcmV0dXJuICRudW0gLyAoJG51bSAqIDAgKyAxKTtcbn1cbiIsIi8vLyBDcmVhdGVzIGEgZmFkaW5nIGFuaW1hdGlvbi5cbi8vLyBAcGFyYW0ge051bWJlcn0gJGZyb20gWzBdIC0gT3BhY2l0eSB0byBzdGFydCBhdC5cbi8vLyBAcGFyYW0ge051bWJlcn0gJHRvIFsxXSAtIE9wYWNpdHkgdG8gZW5kIGF0LlxuLy8vIEByZXR1cm4ge01hcH0gQSBrZXlmcmFtZXMgbWFwIHRoYXQgY2FuIGJlIHVzZWQgd2l0aCB0aGUgYGdlbmVyYXRlLWtleWZyYW1lcygpYCBtaXhpbi5cbkBmdW5jdGlvbiBmYWRlKFxuICAkZnJvbTogMCxcbiAgJHRvOiAxXG4pIHtcbiAgJHR5cGU6IHR5cGUtb2YoJGZyb20pO1xuICAka2V5ZnJhbWVzOiAoKTtcblxuICBAaWYgJHR5cGUgPT0gJ3N0cmluZycge1xuICAgIEBpZiAkZnJvbSA9PSBpbiB7XG4gICAgICAkZnJvbTogMDtcbiAgICAgICR0bzogMTtcbiAgICB9IEBlbHNlIGlmICRmcm9tID09IG91dCB7XG4gICAgICAkZnJvbTogMTtcbiAgICAgICR0bzogMDtcbiAgICB9XG4gIH1cblxuICAkZnJvbU5hbWU6ICRmcm9tICogMTAwO1xuICAkdG9OYW1lOiAgICR0byAgICogMTAwO1xuXG4gICRrZXlmcmFtZXM6IChcbiAgICBuYW1lOiAnZmFkZS0jeyRmcm9tTmFtZX0tdG8tI3skdG9OYW1lfScsXG4gICAgMDogKG9wYWNpdHk6ICRmcm9tKSxcbiAgICAxMDA6IChvcGFjaXR5OiAkdG8pLFxuICApO1xuXG4gIEByZXR1cm4gJGtleWZyYW1lcztcbn1cbiIsIi8vLyBDcmVhdGVzIGEgaGluZ2UgZWZmZWN0IGJ5IHJvdGF0aW5nIHRoZSBlbGVtZW50LlxuLy8vIEBwYXJhbSB7S2V5d29yZH0gJHN0YXRlIFtpbl0gLSBTdGF0ZSB0byB0cmFuc2l0aW9uIHRvLlxuLy8vIEBwYXJhbSB7S2V5d29yZH0gJGZyb20gW2xlZnRdIC0gRWRnZSBvZiB0aGUgZWxlbWVudCB0byByb3RhdGUgZnJvbS4gQ2FuIGJlIGB0b3BgLCBgcmlnaHRgLCBgYm90dG9tYCwgb3IgYGxlZnRgLlxuLy8vIEBwYXJhbSB7S2V5d29yZH0gJGF4aXMgW2VkZ2VdIC0gQXhpcyBvZiB0aGUgZWxlbWVudCB0byByb3RhdGUgb24uIENhbiBiZSBgZWRnZWAgb3IgYGNlbnRlcmAuXG4vLy8gQHBhcmFtIHtOdW1iZXJ9ICRwZXJzcGVjdGl2ZSBbMjAwMHB4XSAtIFBlcmNlaXZlZCBkaXN0YW5jZSBiZXR3ZWVuIHRoZSB2aWV3ZXIgYW5kIHRoZSBlbGVtZW50LiBBIGhpZ2hlciBudW1iZXIgd2lsbCBtYWtlIHRoZSByb3RhdGlvbiBlZmZlY3QgbW9yZSBwcm9ub3VuY2VkLlxuLy8vIEBwYXJhbSB7S2V5d29yZH0gJHR1cm4tb3JpZ2luIFtmcm9tLWJhY2tdIC0gU2lkZSBvZiB0aGUgZWxlbWVudCB0byBzdGFydCB0aGUgcm90YXRpb24gZnJvbS4gQ2FuIGJlIGBmcm9tLWJhY2tgIG9yIGBmcm9tLWZyb250YC5cbkBmdW5jdGlvbiBoaW5nZSAoXG4gICRzdGF0ZTogaW4sXG4gICRmcm9tOiBsZWZ0LFxuICAkYXhpczogZWRnZSxcbiAgJHBlcnNwZWN0aXZlOiAyMDAwcHgsXG4gICR0dXJuLW9yaWdpbjogZnJvbS1iYWNrXG4pIHtcbiAgLy8gUm90YXRpb24gZGlyZWN0aW9ucyB3aGVuIGhpbmdpbmcgZnJvbSBiYWNrIHZzLiBmcm9udFxuICAkcm90YXRpb24tYW1vdW50OiA5MGRlZztcbiAgJHJvdGF0aW9ucy1iYWNrOiAoXG4gICAgdG9wOiByb3RhdGVYKCRyb3RhdGlvbi1hbW91bnQgKiAtMSksXG4gICAgcmlnaHQ6IHJvdGF0ZVkoJHJvdGF0aW9uLWFtb3VudCAqIC0xKSxcbiAgICBib3R0b206IHJvdGF0ZVgoJHJvdGF0aW9uLWFtb3VudCksXG4gICAgbGVmdDogcm90YXRlWSgkcm90YXRpb24tYW1vdW50KSxcbiAgKTtcbiAgJHJvdGF0aW9ucy1mcm9tOiAoXG4gICAgdG9wOiByb3RhdGVYKCRyb3RhdGlvbi1hbW91bnQpLFxuICAgIHJpZ2h0OiByb3RhdGVZKCRyb3RhdGlvbi1hbW91bnQpLFxuICAgIGJvdHRvbTogcm90YXRlWCgkcm90YXRpb24tYW1vdW50ICogLTEpLFxuICAgIGxlZnQ6IHJvdGF0ZVkoJHJvdGF0aW9uLWFtb3VudCAqIC0xKSxcbiAgKTtcblxuICAvLyBSb3RhdGlvbiBvcmlnaW5cbiAgJHJvdGF0aW9uOiAnJztcbiAgQGlmICR0dXJuLW9yaWdpbiA9PSBmcm9tLWZyb250IHtcbiAgICAkcm90YXRpb246IG1hcC1nZXQoJHJvdGF0aW9ucy1mcm9tLCAkZnJvbSk7XG4gIH0gQGVsc2UgaWYgJHR1cm4tb3JpZ2luID09IGZyb20tYmFjayB7XG4gICAgJHJvdGF0aW9uOiBtYXAtZ2V0KCRyb3RhdGlvbnMtYmFjaywgJGZyb20pO1xuICB9IEBlbHNlIHtcbiAgICBAd2FybiAnJHR1cm4tb3JpZ2luIG11c3QgYmUgZWl0aGVyIFwiZnJvbS1iYWNrXCIgb3IgXCJmcm9tLWZyb250XCInO1xuICB9XG5cbiAgLy8gU3RhcnQgYW5kIGVuZCBzdGF0ZVxuICAkc3RhcnQ6ICcnO1xuICAkZW5kOiAnJztcbiAgQGlmICRzdGF0ZSA9PSBpbiB7XG4gICAgJHN0YXJ0OiBwZXJzcGVjdGl2ZSgkcGVyc3BlY3RpdmUpICRyb3RhdGlvbjtcbiAgICAkZW5kOiBwZXJzcGVjdGl2ZSgkcGVyc3BlY3RpdmUpIHJvdGF0ZSgwZGVnKTtcbiAgfSBAZWxzZSB7XG4gICAgJHN0YXJ0OiBwZXJzcGVjdGl2ZSgkcGVyc3BlY3RpdmUpIHJvdGF0ZSgwZGVnKTtcbiAgICAkZW5kOiBwZXJzcGVjdGl2ZSgkcGVyc3BlY3RpdmUpICRyb3RhdGlvbjtcbiAgfVxuXG4gIC8vIFR1cm4gYXhpc1xuICAkb3JpZ2luOiAnJztcbiAgQGlmICRheGlzID09IGVkZ2Uge1xuICAgICRvcmlnaW46ICRmcm9tO1xuICB9IEBlbHNlIHtcbiAgICAkb3JpZ2luOiBjZW50ZXI7XG4gIH1cblxuICAka2V5ZnJhbWVzOiAoXG4gICAgbmFtZTogJ2hpbmdlLSN7JHN0YXRlfS0jeyRmcm9tfS0jeyRheGlzfS0jeyR0dXJuLW9yaWdpbn0nLFxuICAgIDA6ICh0cmFuc2Zvcm06ICRzdGFydCwgdHJhbnNmb3JtLW9yaWdpbjogJG9yaWdpbiksXG4gICAgMTAwOiAodHJhbnNmb3JtOiAkZW5kKSxcbiAgKTtcblxuICBAcmV0dXJuICRrZXlmcmFtZXM7XG59XG4iLCIvLy8gQ3JlYXRlcyBhIHNwaW5uaW5nIGFuaW1hdGlvbi5cbi8vLyBAcGFyYW0ge0tleXdvcmR9ICRkaXJlY3Rpb24gW2N3XSAtIERpcmVjdGlvbiB0byBzcGluLiBTaG91bGQgYmUgYGN3YCAoY2xvY2t3aXNlKSBvciBgY2N3YCAoY291bnRlcmNsb2Nrd2lzZSkuXG4vLy8gQHBhcmFtIHtOdW1iZXJ9ICRhbW91bnQgWzM2MGRlZ10gLSBBbW91bnQgdG8gc3Bpbi4gQ2FuIGJlIGFueSBDU1MgYW5nbGUgdW5pdC5cbi8vLyBAcmV0dXJuIHtNYXB9IEEga2V5ZnJhbWVzIG1hcCB0aGF0IGNhbiBiZSB1c2VkIHdpdGggdGhlIGBnZW5lcmF0ZS1rZXlmcmFtZXMoKWAgbWl4aW4uXG5AZnVuY3Rpb24gc3BpbihcbiAgJHN0YXRlOiBpbixcbiAgJGRpcmVjdGlvbjogY3csXG4gICRhbW91bnQ6IDF0dXJuXG4pIHtcbiAgJHN0YXJ0OiAwO1xuICAkZW5kOiAwO1xuXG4gIEBpZiAkc3RhdGUgPT0gaW4ge1xuICAgICRzdGFydDogaWYoJGRpcmVjdGlvbiA9PSBjY3csICRhbW91bnQsICRhbW91bnQgKiAtMSk7XG4gICAgJGVuZDogMDtcbiAgfSBAZWxzZSB7XG4gICAgJHN0YXJ0OiAwO1xuICAgICRlbmQ6IGlmKCRkaXJlY3Rpb24gPT0gY2N3LCAkYW1vdW50ICogLTEsICRhbW91bnQpO1xuICB9XG5cbiAgJGtleWZyYW1lczogKFxuICAgIG5hbWU6ICdzcGluLSN7JGRpcmVjdGlvbn0tI3skYW1vdW50fScsXG4gICAgMDogKHRyYW5zZm9ybTogcm90YXRlKCRzdGFydCkpLFxuICAgIDEwMDogKHRyYW5zZm9ybTogcm90YXRlKCRlbmQpKSxcbiAgKTtcblxuICBAcmV0dXJuICRrZXlmcmFtZXM7XG59XG4iLCIvLy8gQ3JlYXRlcyBhIHNjYWxpbmcgdHJhbnNpdGlvbi4gQSBzY2FsZSBvZiBgMWAgbWVhbnMgdGhlIGVsZW1lbnQgaXMgdGhlIHNhbWUgc2l6ZS4gTGFyZ2VyIG51bWJlcnMgbWFrZSB0aGUgZWxlbWVudCBiaWdnZXIsIHdoaWxlIG51bWJlcnMgbGVzcyB0aGFuIDEgbWFrZSB0aGUgZWxlbWVudCBzbWFsbGVyLlxuLy8vIEBwYXJhbSB7TnVtYmVyfSAkZnJvbSBbMS41XSAtIFNpemUgdG8gc3RhcnQgYXQuXG4vLy8gQHBhcmFtIHtOdW1iZXJ9ICR0byBbMV0gLSBTaXplIHRvIGVuZCBhdC5cbkBmdW5jdGlvbiB6b29tKFxuICAkZnJvbTogMCxcbiAgJHRvOiAxXG4pIHtcbiAgJGtleWZyYW1lczogKFxuICAgIG5hbWU6ICdzY2FsZS0jeyR0b30tdG8tI3skZnJvbX0nLFxuICAgIDA6ICh0cmFuc2Zvcm06IHNjYWxlKCRmcm9tKSksXG4gICAgMTAwOiAodHJhbnNmb3JtOiBzY2FsZSgkdG8pKSxcbiAgKTtcblxuICBAcmV0dXJuICRrZXlmcmFtZXM7XG59XG4iLCIvLy8gQ3JlYXRlcyBhIHNoYWtpbmcgYW5pbWF0aW9uLlxuLy8vIEBwYXJhbSB7UGVyY2VudGFnZX0gJGludGVuc2l0eSBbNyVdIC0gSW50ZW5zaXR5IG9mIHRoZSBzaGFrZSwgYXMgYSBwZXJjZW50YWdlIHZhbHVlLlxuLy8vIEByZXR1cm4ge01hcH0gQSBrZXlmcmFtZXMgbWFwIHRoYXQgY2FuIGJlIHVzZWQgd2l0aCB0aGUgYGdlbmVyYXRlLWtleWZyYW1lcygpYCBtaXhpbi5cbkBmdW5jdGlvbiBzaGFrZSgkaW50ZW5zaXR5OiA3JSkge1xuICAkcmlnaHQ6ICgwLCAxMCwgMjAsIDMwLCA0MCwgNTAsIDYwLCA3MCwgODAsIDkwKTtcbiAgJGxlZnQ6ICg1LCAxNSwgMjUsIDM1LCA0NSwgNTUsIDY1LCA3NSwgODUsIDk1KTtcblxuICAka2V5ZnJhbWVzOiAoXG4gICAgbmFtZTogJ3NoYWtlLSN7KCRpbnRlbnNpdHkgLyAxJSl9JyxcbiAgICAkcmlnaHQ6ICh0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoJGludGVuc2l0eSkpLFxuICAgICRsZWZ0OiAodHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0kaW50ZW5zaXR5KSksXG4gICk7XG5cbiAgQHJldHVybiAka2V5ZnJhbWVzO1xufVxuIiwiLy8vIENyZWF0ZXMgYSBzbGlkaW5nIGFuaW1hdGlvbi5cbi8vLyBAcGFyYW0ge0tleXdvcmR9ICRzdGF0ZSBbaW5dIC0gV2hldGhlciB0byBtb3ZlIHRvIChgaW5gKSBvciBmcm9tIChgb3V0YCkgdGhlIGVsZW1lbnQncyBkZWZhdWx0IHBvc2l0aW9uLlxuLy8vIEBwYXJhbSB7S2V5d29yZH0gJGRpcmVjdGlvbiBbdXBdIC0gRGlyZWN0aW9uIHRvIG1vdmUuIENhbiBiZSBgdXBgLCBgZG93bmAsIGBsZWZ0YCwgb3IgYHJpZ2h0YC5cbi8vLyBAcGFyYW0ge051bWJlcn0gJGFtb3VudCBbMTAwJV0gLSBEaXN0YW5jZSB0byBtb3ZlLiBDYW4gYmUgYW55IENTUyBsZW5ndGggdW5pdC5cbi8vLyBAcmV0dXJuIHtNYXB9IEEga2V5ZnJhbWVzIG1hcCB0aGF0IGNhbiBiZSB1c2VkIHdpdGggdGhlIGBnZW5lcmF0ZS1rZXlmcmFtZXMoKWAgbWl4aW4uXG5AZnVuY3Rpb24gc2xpZGUoXG4gICRzdGF0ZTogaW4sXG4gICRkaXJlY3Rpb246IHVwLFxuICAkYW1vdW50OiAxMDAlXG4pIHtcbiAgJGZyb206ICRhbW91bnQ7XG4gICR0bzogMDtcbiAgJGZ1bmM6ICd0cmFuc2xhdGVZJztcblxuICBAaWYgJGRpcmVjdGlvbiA9PSBsZWZ0IG9yICRkaXJlY3Rpb24gPT0gcmlnaHQge1xuICAgICRmdW5jOiAndHJhbnNsYXRlWCc7XG4gIH1cblxuICBAaWYgJHN0YXRlID09IG91dCB7XG4gICAgJGZyb206IDA7XG4gICAgJHRvOiAkYW1vdW50O1xuICB9XG5cbiAgQGlmICRkaXJlY3Rpb24gPT0gZG93biBvciAkZGlyZWN0aW9uID09IHJpZ2h0IHtcbiAgICBAaWYgJHN0YXRlID09IGluIHtcbiAgICAgICRmcm9tOiAtJGZyb207XG4gICAgfVxuICB9IEBlbHNlIHtcbiAgICBAaWYgJHN0YXRlID09IG91dCB7XG4gICAgICAkdG86IC0kdG87XG4gICAgfVxuICB9XG5cbiAgJGtleWZyYW1lczogKFxuICAgIG5hbWU6ICdzbGlkZS0jeyRzdGF0ZX0tI3skZGlyZWN0aW9ufS0je3N0cmlwLXVuaXQoJGFtb3VudCl9JyxcbiAgICAwOiAodHJhbnNmb3JtOiAnI3skZnVuY30oI3skZnJvbX0pJyksXG4gICAgMTAwOiAodHJhbnNmb3JtOiAnI3skZnVuY30oI3skdG99KScpLFxuICApO1xuXG4gIEByZXR1cm4gJGtleWZyYW1lcztcbn1cbiIsIi8vLyBDcmVhdGVzIGEgd2lnZ2xpbmcgYW5pbWF0aW9uLlxuLy8vIEBwYXJhbSB7TnVtYmVyfSAkaW50ZW5zaXR5IFs3ZGVnXSAtIEludGVuc2l0eSBvZiB0aGUgd2lnZ2xlLiBDYW4gYmUgYW55IENTUyBhbmdsZSB1bml0LlxuLy8vIEByZXR1cm4ge01hcH0gQSBrZXlmcmFtZXMgbWFwIHRoYXQgY2FuIGJlIHVzZWQgd2l0aCB0aGUgYGdlbmVyYXRlLWtleWZyYW1lcygpYCBtaXhpbi5cbkBmdW5jdGlvbiB3aWdnbGUoJGludGVuc2l0eTogN2RlZykge1xuICAka2V5ZnJhbWVzOiAoXG4gICAgbmFtZTogJ3dpZ2dsZS0jeyRpbnRlbnNpdHl9JyxcbiAgICAoNDAsIDUwLCA2MCk6ICh0cmFuc2Zvcm06IHJvdGF0ZSgkaW50ZW5zaXR5KSksXG4gICAgKDM1LCA0NSwgNTUsIDY1KTogKHRyYW5zZm9ybTogcm90YXRlKC0kaW50ZW5zaXR5KSksXG4gICAgKDAsIDMwLCA3MCwgMTAwKTogKHRyYW5zZm9ybTogcm90YXRlKDApKSxcbiAgKTtcblxuICBAcmV0dXJuICRrZXlmcmFtZXM7XG59XG4iLCIvLy8gQ3JlYXRlcyBhIGZhZGUgdHJhbnNpdGlvbiBieSBhZGp1c3RpbmcgdGhlIG9wYWNpdHkgb2YgdGhlIGVsZW1lbnQuXG4vLy8gQHBhcmFtIHtLZXl3b3JkfSAkc3RhdGUgW2luXSAtIFN0YXRlIHRvIHRyYW5zaXRpb24gdG8uXG4vLy8gQHBhcmFtIHtOdW1iZXJ9ICRmcm9tIFswXSAtIE9wYWNpdHkgdG8gc3RhcnQgYXQuIE11c3QgYmUgYSBudW1iZXIgYmV0d2VlbiAwIGFuZCAxLlxuLy8vIEBwYXJhbSB7TnVtYmVyfSAkdG8gWzFdIC0gT3BhY2l0eSB0byBlbmQgb24uXG4vLy8gQHBhcmFtIHtLZXl3b3JkfSAkZHVyYXRpb24gW251bGxdIC0gTGVuZ3RoIChzcGVlZCkgb2YgdGhlIHRyYW5zaXRpb24uXG4vLy8gQHBhcmFtIHtLZXl3b3JkfEZ1bmN0aW9ufSAkdGltaW5nIFtudWxsXSAtIEVhc2luZyBvZiB0aGUgdHJhbnNpdGlvbi5cbi8vLyBAcGFyYW0ge0R1cmF0aW9ufSAkZGVsYXkgW251bGxdIC0gRGVsYXkgaW4gc2Vjb25kcyBvciBtaWxsaXNlY29uZHMgYmVmb3JlIHRoZSB0cmFuc2l0aW9uIHN0YXJ0cy5cbkBtaXhpbiBtdWktZmFkZShcbiAgJHN0YXRlOiBpbixcbiAgJGZyb206IDAsXG4gICR0bzogMSxcbiAgJGR1cmF0aW9uOiBudWxsLFxuICAkdGltaW5nOiBudWxsLFxuICAkZGVsYXk6IG51bGxcbikge1xuICAkZmFkZTogZmFkZSgkZnJvbSwgJHRvKTtcblxuICBAaW5jbHVkZSB0cmFuc2l0aW9uLXN0YXJ0KCRzdGF0ZSkge1xuICAgIEBpbmNsdWRlIHRyYW5zaXRpb24tYmFzaWNzKCRkdXJhdGlvbiwgJHRpbWluZywgJGRlbGF5KTtcbiAgICBAaW5jbHVkZSAtbXVpLWtleWZyYW1lLWdldCgkZmFkZSwgMCk7XG5cbiAgICB0cmFuc2l0aW9uLXByb3BlcnR5OiBvcGFjaXR5O1xuICB9XG5cbiAgQGluY2x1ZGUgdHJhbnNpdGlvbi1lbmQoJHN0YXRlKSB7XG4gICAgQGluY2x1ZGUgLW11aS1rZXlmcmFtZS1nZXQoJGZhZGUsIDEwMCk7XG4gIH1cbn1cbiIsIi8vLyBDcmVhdGVzIGEgaGluZ2UgdHJhbnNpdGlvbiBieSByb3RhdGluZyB0aGUgZWxlbWVudC5cbi8vLyBAcGFyYW0ge0tleXdvcmR9ICRzdGF0ZSBbaW5dIC0gU3RhdGUgdG8gdHJhbnNpdGlvbiB0by5cbi8vLyBAcGFyYW0ge0tleXdvcmR9ICRmcm9tIFtsZWZ0XSAtIEVkZ2Ugb2YgdGhlIGVsZW1lbnQgdG8gcm90YXRlIGZyb20uIENhbiBiZSBgdG9wYCwgYHJpZ2h0YCwgYGJvdHRvbWAsIG9yIGBsZWZ0YC5cbi8vLyBAcGFyYW0ge0tleXdvcmR9ICRheGlzIFtlZGdlXSAtIEF4aXMgb2YgdGhlIGVsZW1lbnQgdG8gcm90YXRlIG9uLiBDYW4gYmUgYGVkZ2VgIG9yIGBjZW50ZXJgLlxuLy8vIEBwYXJhbSB7TGVuZ3RofSAkcGVyc3BlY3RpdmUgWzIwMDBweF0gLSBQZXJjZWl2ZWQgZGlzdGFuY2UgYmV0d2VlbiB0aGUgdmlld2VyIGFuZCB0aGUgZWxlbWVudC4gQSBoaWdoZXIgbnVtYmVyIHdpbGwgbWFrZSB0aGUgcm90YXRpb24gZWZmZWN0IG1vcmUgcHJvbm91bmNlZC5cbi8vLyBAcGFyYW0ge0tleXdvcmR9ICR0dXJuLW9yaWdpbiBbZnJvbS1iYWNrXSAtIFNpZGUgb2YgdGhlIGVsZW1lbnQgdG8gc3RhcnQgdGhlIHJvdGF0aW9uIGZyb20uIENhbiBiZSBgZnJvbS1iYWNrYCBvciBgZnJvbS1mcm9udGAuXG4vLy8gQHBhcmFtIHtCb29sZWFufSAkZmFkZSBbdHJ1ZV0gLSBTZXQgdG8gYHRydWVgIHRvIGZhZGUgdGhlIGVsZW1lbnQgaW4gb3Igb3V0IHNpbXVsdGFuZW91c2x5LlxuLy8vIEBwYXJhbSB7RHVyYXRpb259ICRkdXJhdGlvbiBbbnVsbF0gLSBMZW5ndGggKHNwZWVkKSBvZiB0aGUgdHJhbnNpdGlvbi5cbi8vLyBAcGFyYW0ge0tleXdvcmR8RnVuY3Rpb259ICR0aW1pbmcgW251bGxdIC0gRWFzaW5nIG9mIHRoZSB0cmFuc2l0aW9uLlxuLy8vIEBwYXJhbSB7RHVyYXRpb259ICRkZWxheSBbbnVsbF0gLSBEZWxheSBpbiBzZWNvbmRzIG9yIG1pbGxpc2Vjb25kcyBiZWZvcmUgdGhlIHRyYW5zaXRpb24gc3RhcnRzLlxuQG1peGluIG11aS1oaW5nZSAoXG4gICRzdGF0ZTogaW4sXG4gICRmcm9tOiBsZWZ0LFxuICAkYXhpczogZWRnZSxcbiAgJHBlcnNwZWN0aXZlOiAyMDAwcHgsXG4gICR0dXJuLW9yaWdpbjogZnJvbS1iYWNrLFxuICAkZmFkZTogbWFwLWdldCgkbW90aW9uLXVpLXNldHRpbmdzLCBoaW5nZS1hbmQtZmFkZSksXG4gICRkdXJhdGlvbjogbnVsbCxcbiAgJHRpbWluZzogbnVsbCxcbiAgJGRlbGF5OiBudWxsXG4pIHtcbiAgJGhpbmdlOiBoaW5nZSgkc3RhdGUsICRmcm9tLCAkYXhpcywgJHBlcnNwZWN0aXZlLCAkdHVybi1vcmlnaW4pO1xuXG4gIEBpbmNsdWRlIHRyYW5zaXRpb24tc3RhcnQoJHN0YXRlKSB7XG4gICAgQGluY2x1ZGUgdHJhbnNpdGlvbi1iYXNpY3MoJGR1cmF0aW9uLCAkdGltaW5nLCAkZGVsYXkpO1xuICAgIEBpbmNsdWRlIC1tdWkta2V5ZnJhbWUtZ2V0KCRoaW5nZSwgMCk7XG5cbiAgICBAaWYgJGZhZGUge1xuICAgICAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogdHJhbnNmb3JtLCBvcGFjaXR5O1xuICAgICAgb3BhY2l0eTogaWYoJHN0YXRlID09IGluLCAwLCAxKTtcbiAgICB9IEBlbHNlIHtcbiAgICAgIHRyYW5zaXRpb24tcHJvcGVydHk6IHRyYW5zZm9ybSwgb3BhY2l0eTtcbiAgICB9XG4gIH1cblxuICBAaW5jbHVkZSB0cmFuc2l0aW9uLWVuZCgkc3RhdGUpIHtcbiAgICBAaW5jbHVkZSAtbXVpLWtleWZyYW1lLWdldCgkaGluZ2UsIDEwMCk7XG5cbiAgICBAaWYgJGZhZGUge1xuICAgICAgb3BhY2l0eTogaWYoJHN0YXRlID09IGluLCAxLCAwKTtcbiAgICB9XG4gIH1cbn1cbiIsIi8vLyBDcmVhdGVzIGEgc2NhbGluZyB0cmFuc2l0aW9uLiBBIHNjYWxlIG9mIGAxYCBtZWFucyB0aGUgZWxlbWVudCBpcyB0aGUgc2FtZSBzaXplLiBMYXJnZXIgbnVtYmVycyBtYWtlIHRoZSBlbGVtZW50IGJpZ2dlciwgd2hpbGUgbnVtYmVycyBsZXNzIHRoYW4gMSBtYWtlIHRoZSBlbGVtZW50IHNtYWxsZXIuXG4vLy8gQHBhcmFtIHtLZXl3b3JkfSAkc3RhdGUgW2luXSAtIFN0YXRlIHRvIHRyYW5zaXRpb24gdG8uXG4vLy8gQHBhcmFtIHtOdW1iZXJ9ICRmcm9tIFsxLjVdIC0gU2l6ZSB0byBzdGFydCBhdC5cbi8vLyBAcGFyYW0ge051bWJlcn0gJGZyb20gWzFdIC0gU2l6ZSB0byBlbmQgYXQuXG4vLy8gQHBhcmFtIHtCb29sZWFufSAkZmFkZSBbdHJ1ZV0gLSBTZXQgdG8gYHRydWVgIHRvIGZhZGUgdGhlIGVsZW1lbnQgaW4gb3Igb3V0IHNpbXVsdGFuZW91c2x5LlxuLy8vIEBwYXJhbSB7RHVyYXRpb259ICRkdXJhdGlvbiBbbnVsbF0gLSBMZW5ndGggKHNwZWVkKSBvZiB0aGUgdHJhbnNpdGlvbi5cbi8vLyBAcGFyYW0ge0tleXdvcmR8RnVuY3Rpb259ICR0aW1pbmcgW251bGxdIC0gRWFzaW5nIG9mIHRoZSB0cmFuc2l0aW9uLlxuLy8vIEBwYXJhbSB7RHVyYXRpb259ICRkZWxheSBbbnVsbF0gLSBEZWxheSBpbiBzZWNvbmRzIG9yIG1pbGxpc2Vjb25kcyBiZWZvcmUgdGhlIHRyYW5zaXRpb24gc3RhcnRzLlxuQG1peGluIG11aS16b29tKFxuICAkc3RhdGU6IGluLFxuICAkZnJvbTogMS41LFxuICAkdG86IDEsXG4gICRmYWRlOiBtYXAtZ2V0KCRtb3Rpb24tdWktc2V0dGluZ3MsIHNjYWxlLWFuZC1mYWRlKSxcbiAgJGR1cmF0aW9uOiBudWxsLFxuICAkdGltaW5nOiBudWxsLFxuICAkZGVsYXk6IG51bGxcbikge1xuICAkc2NhbGU6IHpvb20oJGZyb20sICR0byk7XG5cbiAgQGluY2x1ZGUgdHJhbnNpdGlvbi1zdGFydCgkc3RhdGUpIHtcbiAgICBAaW5jbHVkZSB0cmFuc2l0aW9uLWJhc2ljcygkZHVyYXRpb24sICR0aW1pbmcsICRkZWxheSk7XG4gICAgQGluY2x1ZGUgLW11aS1rZXlmcmFtZS1nZXQoJHNjYWxlLCAwKTtcblxuICAgIEBpZiAkZmFkZSB7XG4gICAgICB0cmFuc2l0aW9uLXByb3BlcnR5OiB0cmFuc2Zvcm0sIG9wYWNpdHk7XG4gICAgICBvcGFjaXR5OiBpZigkc3RhdGUgPT0gaW4sIDAsIDEpO1xuICAgIH0gQGVsc2Uge1xuICAgICAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogdHJhbnNmb3JtLCBvcGFjaXR5O1xuICAgIH1cbiAgfVxuXG4gIEBpbmNsdWRlIHRyYW5zaXRpb24tZW5kKCRzdGF0ZSkge1xuICAgIEBpbmNsdWRlIC1tdWkta2V5ZnJhbWUtZ2V0KCRzY2FsZSwgMTAwKTtcblxuICAgIEBpZiAkZmFkZSB7XG4gICAgICBvcGFjaXR5OiBpZigkc3RhdGUgPT0gaW4sIDEsIDApO1xuICAgIH1cbiAgfVxufVxuIiwiLy8vIENyZWF0ZXMgYSBzbGlkaW5nIHRyYW5zaXRpb24gYnkgdHJhbnNsYXRpbmcgdGhlIGVsZW1lbnQgaG9yaXpvbnRhbGx5IG9yIHZlcnRpY2FsbHkuXG4vLy8gQHBhcmFtIHtLZXl3b3JkfSAkc3RhdGUgW2luXSAtIFN0YXRlIHRvIHRyYW5zaXRpb24gdG8uXG4vLy8gQHBhcmFtIHtLZXl3b3JkfSAkZGlyZWN0aW9uIFtsZWZ0XSAtIERpcmVjdGlvbiB0byBzbGlkZSB0by4gQ2FuIGJlIGB1cGAsIGByaWdodGAsIGBkb3duYCwgb3IgYGxlZnRgLlxuLy8vIEBwYXJhbSB7TGVuZ3RofSAkYW1vdW50IFsxMDAlXSAtIExlbmd0aCBvZiB0aGUgc2xpZGUgYXMgYSBwZXJjZW50YWdlIHZhbHVlLlxuLy8vIEBwYXJhbSB7Qm9vbGVhbn0gJGZhZGUgW2ZhbHNlXSAtIFNldCB0byBgdHJ1ZWAgdG8gZmFkZSB0aGUgZWxlbWVudCBpbiBvciBvdXQgc2ltdWx0YW5lb3VzbHkuXG4vLy8gQHBhcmFtIHtEdXJhdGlvbn0gJGR1cmF0aW9uIFtudWxsXSAtIExlbmd0aCAoc3BlZWQpIG9mIHRoZSB0cmFuc2l0aW9uLlxuLy8vIEBwYXJhbSB7S2V5d29yZHxGdW5jdGlvbn0gJHRpbWluZyBbbnVsbF0gLSBFYXNpbmcgb2YgdGhlIHRyYW5zaXRpb24uXG4vLy8gQHBhcmFtIHtEdXJhdGlvbn0gJGRlbGF5IFtudWxsXSAtIERlbGF5IGluIHNlY29uZHMgb3IgbWlsbGlzZWNvbmRzIGJlZm9yZSB0aGUgdHJhbnNpdGlvbiBzdGFydHMuXG5AbWl4aW4gbXVpLXNsaWRlIChcbiAgJHN0YXRlOiBpbixcbiAgJGRpcmVjdGlvbjogbGVmdCxcbiAgJGFtb3VudDogMTAwJSxcbiAgJGZhZGU6IG1hcC1nZXQoJG1vdGlvbi11aS1zZXR0aW5ncywgc2xpZGUtYW5kLWZhZGUpLFxuICAkZHVyYXRpb246IG51bGwsXG4gICR0aW1pbmc6IG51bGwsXG4gICRkZWxheTogbnVsbFxuKSB7XG4gICRzbGlkZTogc2xpZGUoJHN0YXRlLCAkZGlyZWN0aW9uLCAkYW1vdW50KTtcblxuICAvLyBDU1MgT3V0cHV0XG4gIEBpbmNsdWRlIHRyYW5zaXRpb24tc3RhcnQoJHN0YXRlKSB7XG4gICAgQGluY2x1ZGUgdHJhbnNpdGlvbi1iYXNpY3MoJGR1cmF0aW9uLCAkdGltaW5nLCAkZGVsYXkpO1xuICAgIEBpbmNsdWRlIC1tdWkta2V5ZnJhbWUtZ2V0KCRzbGlkZSwgMCk7XG5cbiAgICBAaWYgJGZhZGUge1xuICAgICAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogdHJhbnNmb3JtLCBvcGFjaXR5O1xuICAgICAgb3BhY2l0eTogaWYoJHN0YXRlID09IGluLCAwLCAxKTtcbiAgICB9IEBlbHNlIHtcbiAgICAgIHRyYW5zaXRpb24tcHJvcGVydHk6IHRyYW5zZm9ybSwgb3BhY2l0eTtcbiAgICB9XG5cbiAgICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gIH1cblxuICBAaW5jbHVkZSB0cmFuc2l0aW9uLWVuZCgkc3RhdGUpIHtcbiAgICBAaW5jbHVkZSAtbXVpLWtleWZyYW1lLWdldCgkc2xpZGUsIDEwMCk7XG5cbiAgICBAaWYgJGZhZGUge1xuICAgICAgb3BhY2l0eTogaWYoJHN0YXRlID09IGluLCAxLCAwKTtcbiAgICB9XG4gIH1cbn1cbiIsIi8vLyBDcmVhdGVzIGEgc3Bpbm5pbmcgdHJhbnNpdGlvbiBieSByb3RhdGluZyB0aGUgZWxlbWVudC4gVGhlIGB0dXJuYCB1bml0IGlzIHVzZWQgdG8gc3BlY2lmeSBob3cgZmFyIHRvIHJvdGF0ZS4gYDF0dXJuYCBpcyBlcXVhbCB0byBhIDM2MC1kZWdyZWUgc3Bpbi5cbi8vLyBAcGFyYW0ge0tleXdvcmR9ICRzdGF0ZSBbaW5dIC0gU3RhdGUgdG8gdHJhbnNpdGlvbiB0by5cbi8vLyBAcGFyYW0ge0Jvb2xlYW59ICRkaXJlY3Rpb24gW2N3XSAtIERpcmVjdGlvbiB0byBzcGluLiBTaG91bGQgYmUgYGN3YCAoY2xvY2t3aXNlKSBvciBgY2N3YCAoY291bnRlcmNsb2Nrd2lzZSkuXG4vLy8gQHBhcmFtIHtOdW1iZXJ9ICRhbW91bnQgWzAuNzV0dXJuXSAtIEFtb3VudCB0byBlbGVtZW50IHRoZSBlbGVtZW50LlxuLy8vIEBwYXJhbSB7Qm9vbGVhbn0gJGZhZGUgW2ZhbHNlXSAtIFNldCB0byBgdHJ1ZWAgdG8gZmFkZSB0aGUgZWxlbWVudCBpbiBvciBvdXQgc2ltdWx0YW5lb3VzbHkuXG4vLy8gQHBhcmFtIHtEdXJhdGlvbn0gJGR1cmF0aW9uIFtudWxsXSAtIExlbmd0aCAoc3BlZWQpIG9mIHRoZSB0cmFuc2l0aW9uLlxuLy8vIEBwYXJhbSB7S2V5d29yZHxGdW5jdGlvbn0gJHRpbWluZyBbbnVsbF0gLSBFYXNpbmcgb2YgdGhlIHRyYW5zaXRpb24uXG4vLy8gQHBhcmFtIHtEdXJhdGlvbn0gJGRlbGF5IFtudWxsXSAtIERlbGF5IGluIHNlY29uZHMgb3IgbWlsbGlzZWNvbmRzIGJlZm9yZSB0aGUgdHJhbnNpdGlvbiBzdGFydHMuXG5AbWl4aW4gbXVpLXNwaW4oXG4gICRzdGF0ZTogaW4sXG4gICRkaXJlY3Rpb246IGN3LFxuICAkYW1vdW50OiAwLjc1dHVybixcbiAgJGZhZGU6IG1hcC1nZXQoJG1vdGlvbi11aS1zZXR0aW5ncywgc3Bpbi1hbmQtZmFkZSksXG4gICRkdXJhdGlvbjogbnVsbCxcbiAgJHRpbWluZzogbnVsbCxcbiAgJGRlbGF5OiBudWxsXG4pIHtcbiAgJHNwaW46IHNwaW4oJHN0YXRlLCAkZGlyZWN0aW9uLCAkYW1vdW50KTtcblxuICBAaW5jbHVkZSB0cmFuc2l0aW9uLXN0YXJ0KCRzdGF0ZSkge1xuICAgIEBpbmNsdWRlIHRyYW5zaXRpb24tYmFzaWNzKCRkdXJhdGlvbiwgJHRpbWluZywgJGRlbGF5KTtcbiAgICBAaW5jbHVkZSAtbXVpLWtleWZyYW1lLWdldCgkc3BpbiwgMCk7XG5cbiAgICBAaWYgJGZhZGUge1xuICAgICAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogdHJhbnNmb3JtLCBvcGFjaXR5O1xuICAgICAgb3BhY2l0eTogaWYoJHN0YXRlID09IGluLCAwLCAxKTtcbiAgICB9IEBlbHNlIHtcbiAgICAgIHRyYW5zaXRpb24tcHJvcGVydHk6IHRyYW5zZm9ybSwgb3BhY2l0eTtcbiAgICB9XG4gIH1cblxuICBAaW5jbHVkZSB0cmFuc2l0aW9uLWVuZCgkc3RhdGUpIHtcbiAgICBAaW5jbHVkZSAtbXVpLWtleWZyYW1lLWdldCgkc3BpbiwgMTAwKTtcblxuICAgIEBpZiAkZmFkZSB7XG4gICAgICBvcGFjaXR5OiBpZigkc3RhdGUgPT0gaW4sIDEsIDApO1xuICAgIH1cbiAgfVxufVxuIiwiLy8gc2Nzcy1saW50OmRpc2FibGUgSW1wb3J0YW50UnVsZSwgU3BhY2VBZnRlckNvbW1hLCBTaW5nbGVMaW5lUGVyUHJvcGVydHlcblxuQG1peGluIC1tb3Rpb24tdWktZGVmYXVsdHMge1xuICB0cmFuc2l0aW9uLWR1cmF0aW9uOiBtYXAtZ2V0KCRtb3Rpb24tdWktc3BlZWRzLCBkZWZhdWx0KTtcbiAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IG1hcC1nZXQoJG1vdGlvbi11aS1lYXNpbmdzLCBkZWZhdWx0KTtcbn1cblxuLy8gVHJhbnNpdGlvbnNcbi8vIC0gLSAtIC0gLSAtIC0gLSAtIC0gLSAtIC0gLSAtXG5AbWl4aW4gbW90aW9uLXVpLXRyYW5zaXRpb25zIHtcbiAgLy8gU2xpZGVcbiAgLnNsaWRlLWluLWRvd24gICAgeyBAaW5jbHVkZSBtdWktc2xpZGUoaW4sICBkb3duKTsgfVxuICAuc2xpZGUtaW4tbGVmdCAgICB7IEBpbmNsdWRlIG11aS1zbGlkZShpbiwgIHJpZ2h0KTsgfVxuICAuc2xpZGUtaW4tdXAgICAgICB7IEBpbmNsdWRlIG11aS1zbGlkZShpbiwgIHVwKTsgfVxuICAuc2xpZGUtaW4tcmlnaHQgICB7IEBpbmNsdWRlIG11aS1zbGlkZShpbiwgIGxlZnQpOyB9XG4gIC5zbGlkZS1vdXQtZG93biAgIHsgQGluY2x1ZGUgbXVpLXNsaWRlKG91dCwgZG93bik7IH1cbiAgLnNsaWRlLW91dC1yaWdodCAgeyBAaW5jbHVkZSBtdWktc2xpZGUob3V0LCByaWdodCk7IH1cbiAgLnNsaWRlLW91dC11cCAgICAgeyBAaW5jbHVkZSBtdWktc2xpZGUob3V0LCB1cCk7IH1cbiAgLnNsaWRlLW91dC1sZWZ0ICAgeyBAaW5jbHVkZSBtdWktc2xpZGUob3V0LCBsZWZ0KTsgfVxuXG4gIC8vIEZhZGVcbiAgLmZhZGUtaW4gIHsgQGluY2x1ZGUgbXVpLWZhZGUoaW4sICAwLCAxKTsgfVxuICAuZmFkZS1vdXQgeyBAaW5jbHVkZSBtdWktZmFkZShvdXQsIDEsIDApOyB9XG5cbiAgLy8gSGluZ2VcbiAgLmhpbmdlLWluLWZyb20tdG9wICAgICAgeyBAaW5jbHVkZSBtdWktaGluZ2UoaW4sICB0b3ApOyB9XG4gIC5oaW5nZS1pbi1mcm9tLXJpZ2h0ICAgIHsgQGluY2x1ZGUgbXVpLWhpbmdlKGluLCAgcmlnaHQpOyB9XG4gIC5oaW5nZS1pbi1mcm9tLWJvdHRvbSAgIHsgQGluY2x1ZGUgbXVpLWhpbmdlKGluLCAgYm90dG9tKTsgfVxuICAuaGluZ2UtaW4tZnJvbS1sZWZ0ICAgICB7IEBpbmNsdWRlIG11aS1oaW5nZShpbiwgIGxlZnQpOyB9XG4gIC5oaW5nZS1pbi1mcm9tLW1pZGRsZS14ICB7IEBpbmNsdWRlIG11aS1oaW5nZShpbiwgIHRvcCwgICBjZW50ZXIpOyB9XG4gIC5oaW5nZS1pbi1mcm9tLW1pZGRsZS15ICB7IEBpbmNsdWRlIG11aS1oaW5nZShpbiwgIHJpZ2h0LCBjZW50ZXIpOyB9XG4gIC5oaW5nZS1vdXQtZnJvbS10b3AgICAgIHsgQGluY2x1ZGUgbXVpLWhpbmdlKG91dCwgdG9wKTsgfVxuICAuaGluZ2Utb3V0LWZyb20tcmlnaHQgICB7IEBpbmNsdWRlIG11aS1oaW5nZShvdXQsIHJpZ2h0KTsgfVxuICAuaGluZ2Utb3V0LWZyb20tYm90dG9tICB7IEBpbmNsdWRlIG11aS1oaW5nZShvdXQsIGJvdHRvbSk7IH1cbiAgLmhpbmdlLW91dC1mcm9tLWxlZnQgICAgeyBAaW5jbHVkZSBtdWktaGluZ2Uob3V0LCBsZWZ0KTsgfVxuICAuaGluZ2Utb3V0LWZyb20tbWlkZGxlLXggeyBAaW5jbHVkZSBtdWktaGluZ2Uob3V0LCB0b3AsICAgY2VudGVyKTsgfVxuICAuaGluZ2Utb3V0LWZyb20tbWlkZGxlLXkgeyBAaW5jbHVkZSBtdWktaGluZ2Uob3V0LCByaWdodCwgY2VudGVyKTsgfVxuXG4gIC8vIFNjYWxlXG4gIC5zY2FsZS1pbi11cCAgICB7IEBpbmNsdWRlIG11aS16b29tKGluLCAgMC41LCAxKTsgfVxuICAuc2NhbGUtaW4tZG93biAgeyBAaW5jbHVkZSBtdWktem9vbShpbiwgIDEuNSwgMSk7IH1cbiAgLnNjYWxlLW91dC11cCAgIHsgQGluY2x1ZGUgbXVpLXpvb20ob3V0LCAxLCAxLjUpOyB9XG4gIC5zY2FsZS1vdXQtZG93biB7IEBpbmNsdWRlIG11aS16b29tKG91dCwgMSwgMC41KTsgfVxuXG4gIC8vIFNwaW5cbiAgLnNwaW4taW4gICAgIHsgQGluY2x1ZGUgbXVpLXNwaW4oaW4sICBjdyk7IH1cbiAgLnNwaW4tb3V0ICAgIHsgQGluY2x1ZGUgbXVpLXNwaW4ob3V0LCBjdyk7IH1cbiAgLnNwaW4taW4tY2N3ICB7IEBpbmNsdWRlIG11aS1zcGluKGluLCAgY2N3KTsgfVxuICAuc3Bpbi1vdXQtY2N3IHsgQGluY2x1ZGUgbXVpLXNwaW4ob3V0LCBjY3cpOyB9XG5cbiAgLy8gVHJhbnNpdGlvbiBNb2RpZmllcnNcbiAgLy8gLSAtIC0gLSAtIC0gLSAtIC0gLSAtIC0gLSAtIC1cblxuICBAZWFjaCAkbmFtZSwgJHZhbHVlIGluICRtb3Rpb24tdWktc3BlZWRzIHtcbiAgICBAaWYgJG5hbWUgIT0gZGVmYXVsdCB7XG4gICAgICAuI3skbmFtZX0geyB0cmFuc2l0aW9uLWR1cmF0aW9uOiAkdmFsdWUgIWltcG9ydGFudDsgfVxuICAgIH1cbiAgfVxuXG4gIEBlYWNoICRuYW1lLCAkdmFsdWUgaW4gJG1vdGlvbi11aS1lYXNpbmdzIHtcbiAgICBAaWYgJG5hbWUgIT0gZGVmYXVsdCB7XG4gICAgICAuI3skbmFtZX0geyB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogJHZhbHVlICFpbXBvcnRhbnQ7IH1cbiAgICB9XG4gIH1cblxuICBAZWFjaCAkbmFtZSwgJHZhbHVlIGluICRtb3Rpb24tdWktZGVsYXlzIHtcbiAgICBAaWYgJG5hbWUgIT0gZGVmYXVsdCB7XG4gICAgICAuI3skbmFtZX0tZGVsYXkgeyB0cmFuc2l0aW9uLWRlbGF5OiAkdmFsdWUgIWltcG9ydGFudDsgfVxuICAgIH1cbiAgfVxufVxuXG4vLyBBbmltYXRpb25zXG4vLyAtIC0gLSAtIC0gLSAtIC0gLSAtIC0gLSAtIC0gLVxuQG1peGluIG1vdGlvbi11aS1hbmltYXRpb25zIHtcbiAgLnNoYWtlICAgIHsgQGluY2x1ZGUgbXVpLWFuaW1hdGlvbihzaGFrZSk7IH1cbiAgLnNwaW4tY3cgIHsgQGluY2x1ZGUgbXVpLWFuaW1hdGlvbihzcGluKTsgfVxuICAuc3Bpbi1jY3cgeyBAaW5jbHVkZSBtdWktYW5pbWF0aW9uKHNwaW4oY2N3KSk7IH1cbiAgLndpZ2dsZSAgIHsgQGluY2x1ZGUgbXVpLWFuaW1hdGlvbih3aWdnbGUpOyB9XG5cbiAgLnNoYWtlLFxuICAuc3Bpbi1jdyxcbiAgLnNwaW4tY2N3LFxuICAud2lnZ2xlIHtcbiAgICBhbmltYXRpb24tZHVyYXRpb246IG1hcC1nZXQoJG1vdGlvbi11aS1zcGVlZHMsIGRlZmF1bHQpO1xuICB9XG5cbiAgLy8gQW5pbWF0aW9uIE1vZGlmaWVyc1xuICAvLyAtIC0gLSAtIC0gLSAtIC0gLSAtIC0gLSAtIC0gLVxuICAuaW5maW5pdGUgeyBhbmltYXRpb24taXRlcmF0aW9uLWNvdW50OiBpbmZpbml0ZTsgfVxuXG4gIEBlYWNoICRuYW1lLCAkdmFsdWUgaW4gJG1vdGlvbi11aS1zcGVlZHMge1xuICAgIEBpZiAkbmFtZSAhPSBkZWZhdWx0IHtcbiAgICAgIC4jeyRuYW1lfSB7IGFuaW1hdGlvbi1kdXJhdGlvbjogJHZhbHVlICFpbXBvcnRhbnQ7IH1cbiAgICB9XG4gIH1cblxuICBAZWFjaCAkbmFtZSwgJHZhbHVlIGluICRtb3Rpb24tdWktZWFzaW5ncyB7XG4gICAgQGlmICRuYW1lICE9IGRlZmF1bHQge1xuICAgICAgLiN7JG5hbWV9IHsgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogJHZhbHVlICFpbXBvcnRhbnQ7IH1cbiAgICB9XG4gIH1cblxuICBAZWFjaCAkbmFtZSwgJHZhbHVlIGluICRtb3Rpb24tdWktZGVsYXlzIHtcbiAgICBAaWYgJG5hbWUgIT0gZGVmYXVsdCB7XG4gICAgICAuI3skbmFtZX0tZGVsYXkgeyBhbmltYXRpb24tZGVsYXk6ICR2YWx1ZSAhaW1wb3J0YW50OyB9XG4gICAgfVxuICB9XG59XG4iLCJAaW1wb3J0ICcuLi9zZXR0aW5ncyc7XG5cbkBtaXhpbiB0eXBvZ3JhcGh5LW92ZXJyaWRlKCkge1xuXG4gIEBpbmNsdWRlIGJyZWFrcG9pbnQoc21hbGwgdXApIHtcblxuICAgIGEge1xuICAgICAgLXdlYmtpdC10cmFuc2l0aW9uOiBjb2xvciAyNTBtcyBlYXNlLWluLW91dDtcbiAgICAgIC1tb3otdHJhbnNpdGlvbjogY29sb3IgMjUwbXMgZWFzZS1pbi1vdXQ7XG4gICAgICAtby10cmFuc2l0aW9uOiBjb2xvciAyNTBtcyBlYXNlLWluLW91dDtcbiAgICAgIHRyYW5zaXRpb246IGNvbG9yIDI1MG1zIGVhc2UtaW4tb3V0O1xuICAgIH1cblxuICB9XG5cbn1cblxuIiwiQGltcG9ydCAnLi4vc2V0dGluZ3MnO1xuXG5AbWl4aW4gdG9wLWJhci1vdmVycmlkZSgpIHtcblxuICBAaW5jbHVkZSBicmVha3BvaW50KHNtYWxsIHVwKSB7XG5cbiAgICAudG9wLWJhciB7XG5cbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICR3aGl0ZTtcbiAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZTFlMWUxO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICB6LWluZGV4OiAyO1xuXG4gICAgICAucHJpbWFyeS1uYXYge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGU7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXG4gICAgICAgIGxpIGEge1xuICAgICAgICAgIHBhZGRpbmc6IDAgMXJlbTtcblxuICAgICAgICAgICYubG9nbyB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBtYXAtZ2V0KCRmb3VuZGF0aW9uLXBhbGV0dGUsIHByaW1hcnkpO1xuICAgICAgICAgICAgY29sb3I6ICR3aGl0ZTtcbiAgICAgICAgICAgIHBhZGRpbmc6IC43cmVtIDA7XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiA0MHB4O1xuICAgICAgICAgICAgaGVpZ2h0OiA0MHB4O1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgd2lkdGg6IDQwcHg7XG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgICAtd2Via2l0LXRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMjUwbXMgZWFzZS1pbi1vdXQ7XG4gICAgICAgICAgICAtbW96LXRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMjUwbXMgZWFzZS1pbi1vdXQ7XG4gICAgICAgICAgICAtby10cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDI1MG1zIGVhc2UtaW4tb3V0O1xuICAgICAgICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAyNTBtcyBlYXNlLWluLW91dDtcblxuICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHNjYWxlLWNvbG9yKG1hcC1nZXQoJGZvdW5kYXRpb24tcGFsZXR0ZSwgcHJpbWFyeSksICRsaWdodG5lc3M6IC0yMCUpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgfVxuXG4gICAgICAgIH1cblxuICAgICAgfVxuXG4gICAgfVxuXG4gICAgLmhlYWRyb29tIHtcbiAgICAgIHdpbGwtY2hhbmdlOiB0cmFuc2Zvcm07XG4gICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMjAwbXMgbGluZWFyO1xuICAgIH1cblxuICAgIC5oZWFkcm9vbS0tcGlubmVkIHtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwJSk7XG4gICAgfVxuXG4gICAgLmhlYWRyb29tLS11bnBpbm5lZCB7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTEwMCUpO1xuICAgIH1cblxuICB9XG5cbn0iLCIvLyBDb3JlIHZhcmlhYmxlcyBhbmQgbWl4aW5zXHJcbkBpbXBvcnQgXCJsZy12YXJpYWJsZXNcIjtcclxuQGltcG9ydCBcImxnLW1peGluc1wiO1xyXG5AaW1wb3J0IFwibGctZm9udHNcIjtcclxuQGltcG9ydCBcImxnLXRoZW1lLWRlZmF1bHRcIjtcclxuQGltcG9ydCBcImxnLXRodW1ibmFpbFwiO1xyXG5AaW1wb3J0IFwibGctdmlkZW9cIjtcclxuQGltcG9ydCBcImxnLWF1dG9wbGF5XCI7XHJcbkBpbXBvcnQgXCJsZy16b29tXCI7XHJcbkBpbXBvcnQgXCJsZy1wYWdlclwiO1xyXG5AaW1wb3J0IFwibGctZnVsbHNjcmVlblwiO1xyXG5cclxuLy8gQ2xlYXJmaXhcclxuLmdyb3VwIHtcclxuICAqem9vbTogMTtcclxuICBtYXJnaW46IDAgYXV0bztcclxufVxyXG5cclxuLmdyb3VwOmJlZm9yZSwgLmdyb3VwOmFmdGVyIHtcclxuICBkaXNwbGF5OiB0YWJsZTtcclxuICBjb250ZW50OiBcIlwiO1xyXG4gIGxpbmUtaGVpZ2h0OiAwO1xyXG59XHJcblxyXG4uZ3JvdXA6YWZ0ZXIge1xyXG4gIGNsZWFyOiBib3RoO1xyXG59XHJcblxyXG4vLyBsaWdodGdhbGxlcnkgY29yZVxyXG4ubGctb3V0ZXIge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgdG9wOiAwO1xyXG4gIGxlZnQ6IDA7XHJcbiAgei1pbmRleDogJHppbmRleC1vdXRlcjtcclxuICBvcGFjaXR5OiAwO1xyXG4gIC8vIEZvciBzdGFydC9lbmQgdHJhbnNpdGlvblxyXG4gIEBpbmNsdWRlIHRyYW5zaXRpb24ob3BhY2l0eSAwLjE1cyBlYXNlIDBzKTtcclxuXHJcbiAgKiB7XHJcbiAgICBAaW5jbHVkZSBib3gtc2l6aW5nKGJvcmRlci1ib3gpO1xyXG4gIH1cclxuXHJcbiAgJi5sZy12aXNpYmxlIHtcclxuICAgIG9wYWNpdHk6IDE7XHJcbiAgfVxyXG5cclxuICAvLyBTZXQgdHJhbnNpdGlvbiBzcGVlZCBhbmQgdGltaW5nIGZ1bmN0aW9uXHJcbiAgJi5sZy1jc3MzIHtcclxuICAgIC5sZy1pdGVtIHtcclxuICAgICAgJi5sZy1wcmV2LXNsaWRlLCAmLmxnLW5leHQtc2xpZGUsICYubGctY3VycmVudCB7XHJcbiAgICAgICAgQGluY2x1ZGUgdHJhbnNpdGlvbi1kdXJhdGlvbihpbmhlcml0ICFpbXBvcnRhbnQpO1xyXG4gICAgICAgIEBpbmNsdWRlIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uKGluaGVyaXQgIWltcG9ydGFudCk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vIFJlbW92ZSB0cmFuc2l0aW9uIHdoaWxlIGRyYWdnaW5nXHJcbiAgJi5sZy1jc3MzLmxnLWRyYWdnaW5nIHtcclxuICAgIC5sZy1pdGVtIHtcclxuICAgICAgJi5sZy1wcmV2LXNsaWRlLCAmLmxnLW5leHQtc2xpZGUsICYubGctY3VycmVudCB7XHJcbiAgICAgICAgQGluY2x1ZGUgdHJhbnNpdGlvbi1kdXJhdGlvbigwcyAhaW1wb3J0YW50KTtcclxuICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvLyBTZXQgY3Vyc29yIGdyYWIgd2hpbGUgZHJhZ2dpbmdcclxuICAmLmxnLWdyYWIge1xyXG4gICAgaW1nLmxnLW9iamVjdCB7XHJcbiAgICAgIEBpbmNsdWRlIGdyYWItY3Vyc29yO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgJi5sZy1ncmFiYmluZyB7XHJcbiAgICBpbWcubGctb2JqZWN0IHtcclxuICAgICAgQGluY2x1ZGUgZ3JhYmJpbmctY3Vyc29yO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLmxnIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG4gICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgbWF4LWhlaWdodDogMTAwJTtcclxuICB9XHJcblxyXG4gIC5sZy1pbm5lciB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICB0b3A6IDA7XHJcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gIH1cclxuXHJcbiAgLmxnLWl0ZW0ge1xyXG4gICAgYmFja2dyb3VuZDogdXJsKFwiI3skbGctcGF0aC1pbWFnZXN9L2xvYWRpbmcuZ2lmXCIpIG5vLXJlcGVhdCBzY3JvbGwgY2VudGVyIGNlbnRlciB0cmFuc3BhcmVudDtcclxuICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcclxuICB9XHJcbiAgJi5sZy1jc3MzIHtcclxuICAgIC5sZy1wcmV2LXNsaWRlLCAubGctY3VycmVudCwgLmxnLW5leHQtc2xpZGUge1xyXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2sgIWltcG9ydGFudDtcclxuICAgIH1cclxuICB9XHJcbiAgJi5sZy1jc3Mge1xyXG4gICAgLmxnLWN1cnJlbnQge1xyXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2sgIWltcG9ydGFudDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5sZy1pdGVtLCAubGctaW1nLXdyYXAge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcblxyXG4gICAgJjpiZWZvcmUge1xyXG4gICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgIGhlaWdodDogNTAlO1xyXG4gICAgICB3aWR0aDogMXB4O1xyXG4gICAgICBtYXJnaW4tcmlnaHQ6IC0xcHg7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAubGctaW1nLXdyYXAge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgcGFkZGluZzogMCA1cHg7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBib3R0b206IDBcclxuICB9XHJcblxyXG4gIC5sZy1pdGVtIHtcclxuICAgICYubGctY29tcGxldGUge1xyXG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xyXG4gICAgfVxyXG5cclxuICAgICYubGctY3VycmVudCB7XHJcbiAgICAgIHotaW5kZXg6ICR6aW5kZXgtaXRlbTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5sZy1pbWFnZSB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgbWF4LWhlaWdodDogMTAwJTtcclxuICAgIHdpZHRoOiBhdXRvICFpbXBvcnRhbnQ7XHJcbiAgICBoZWlnaHQ6IGF1dG8gIWltcG9ydGFudDtcclxuICB9XHJcblxyXG4gICYubGctc2hvdy1hZnRlci1sb2FkIHtcclxuICAgIC5sZy1pdGVtIHtcclxuICAgICAgLmxnLW9iamVjdCwgLmxnLXZpZGVvLXBsYXkge1xyXG4gICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgQGluY2x1ZGUgdHJhbnNpdGlvbihvcGFjaXR5IDAuMTVzIGVhc2UgMHMpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAmLmxnLWNvbXBsZXRlIHtcclxuICAgICAgICAubGctb2JqZWN0LCAubGctdmlkZW8tcGxheSB7XHJcbiAgICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLy8gSGlkZSB0aXRsZSBkaXYgaWYgZW1wdHlcclxuICAubGctZW1wdHktaHRtbCB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gIH1cclxuXHJcbiAgJi5sZy1oaWRlLWRvd25sb2FkIHtcclxuICAgICNsZy1kb3dubG9hZCB7XHJcbiAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4ubGctYmFja2Ryb3Age1xyXG4gIHBvc2l0aW9uOiBmaXhlZDtcclxuICB0b3A6IDA7XHJcbiAgbGVmdDogMDtcclxuICByaWdodDogMDtcclxuICBib3R0b206IDA7XHJcbiAgei1pbmRleDogJHppbmRleC1iYWNrZHJvcDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xyXG4gIG9wYWNpdHk6IDA7XHJcbiAgQGluY2x1ZGUgdHJhbnNpdGlvbihvcGFjaXR5IDAuMTVzIGVhc2UgMHMpO1xyXG4gICYuaW4ge1xyXG4gICAgb3BhY2l0eTogJGJhY2tkcm9wLW9wYWNpdHk7XHJcbiAgfVxyXG59XHJcblxyXG4vLyBEZWZhdWx0IHNsaWRlIGFuaW1hdGlvbnMuIFNob3VsZCBiZSBwbGFjZWQgYXQgdGhlIGJvdHRvbSBvZiB0aGUgYW5pbWF0aW9uIGNzc1xyXG4ubGctY3NzMyB7XHJcblxyXG4gIC8vIFJlbW92ZSBhbGwgdHJhbnNpdGlvbiBlZmZlY3RzXHJcbiAgJi5sZy1uby10cmFucyB7XHJcbiAgICAubGctcHJldi1zbGlkZSwgLmxnLW5leHQtc2xpZGUsIC5sZy1jdXJyZW50IHtcclxuICAgICAgQGluY2x1ZGUgdHJhbnNpdGlvbkN1c3RvbShub25lIDBzIGVhc2UgMHMgIWltcG9ydGFudCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmLmxnLXVzZS1jc3MzIHtcclxuICAgIC5sZy1pdGVtIHtcclxuICAgICAgQGluY2x1ZGUgYmFja2ZhY2UtdmlzaWJpbGl0eShoaWRkZW4pO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgJi5sZy11c2UtbGVmdCB7XHJcbiAgICAubGctaXRlbSB7XHJcbiAgICAgIEBpbmNsdWRlIGJhY2tmYWNlLXZpc2liaWxpdHkoaGlkZGVuKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vIEZhZGUgbW9kZVxyXG4gICYubGctZmFkZSB7XHJcbiAgICAubGctaXRlbSB7XHJcbiAgICAgIG9wYWNpdHk6IDA7XHJcblxyXG4gICAgICAmLmxnLWN1cnJlbnQge1xyXG4gICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vIHRyYW5zaXRpb24gdGltaW5nIHByb3BlcnR5IGFuZCBkdXJhdGlvbiB3aWxsIGJlIG92ZXIgd3JpdHRlbiBmcm9tIGphdmFzY3JpcHRcclxuICAgICAgJi5sZy1wcmV2LXNsaWRlLCAmLmxnLW5leHQtc2xpZGUsICYubGctY3VycmVudCB7XHJcbiAgICAgICAgQGluY2x1ZGUgdHJhbnNpdGlvbkN1c3RvbShvcGFjaXR5IDAuMXMgZWFzZSAwcyk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gICYubGctc2xpZGUge1xyXG4gICAgJi5sZy11c2UtY3NzMyB7XHJcbiAgICAgIC5sZy1pdGVtIHtcclxuICAgICAgICBvcGFjaXR5OiAwO1xyXG5cclxuICAgICAgICAmLmxnLXByZXYtc2xpZGUge1xyXG4gICAgICAgICAgQGluY2x1ZGUgdHJhbnNsYXRlM2QoLTEwMCUsIDAsIDApO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJi5sZy1uZXh0LXNsaWRlIHtcclxuICAgICAgICAgIEBpbmNsdWRlIHRyYW5zbGF0ZTNkKDEwMCUsIDAsIDApO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJi5sZy1jdXJyZW50IHtcclxuICAgICAgICAgIEBpbmNsdWRlIHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xyXG4gICAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIHRyYW5zaXRpb24gdGltaW5nIHByb3BlcnR5IGFuZCBkdXJhdGlvbiB3aWxsIGJlIG92ZXIgd3JpdHRlbiBmcm9tIGphdmFzY3JpcHRcclxuICAgICAgICAmLmxnLXByZXYtc2xpZGUsICYubGctbmV4dC1zbGlkZSwgJi5sZy1jdXJyZW50IHtcclxuICAgICAgICAgIEBpbmNsdWRlIHRyYW5zaXRpb25DdXN0b20odHJhbnNmb3JtIDFzIGN1YmljLWJlemllcigwLCAwLCAwLjI1LCAxKSAwcywgb3BhY2l0eSAwLjFzIGVhc2UgMHMpO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICYubGctdXNlLWxlZnQge1xyXG4gICAgICAubGctaXRlbSB7XHJcbiAgICAgICAgb3BhY2l0eTogMDtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgbGVmdDogMDtcclxuXHJcbiAgICAgICAgJi5sZy1wcmV2LXNsaWRlIHtcclxuICAgICAgICAgIGxlZnQ6IC0xMDAlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJi5sZy1uZXh0LXNsaWRlIHtcclxuICAgICAgICAgIGxlZnQ6IDEwMCU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmLmxnLWN1cnJlbnQge1xyXG4gICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyB0cmFuc2l0aW9uIHRpbWluZyBwcm9wZXJ0eSBhbmQgZHVyYXRpb24gd2lsbCBiZSBvdmVyIHdyaXR0ZW4gZnJvbSBqYXZhc2NyaXB0XHJcbiAgICAgICAgJi5sZy1wcmV2LXNsaWRlLCAmLmxnLW5leHQtc2xpZGUsICYubGctY3VycmVudCB7XHJcbiAgICAgICAgICBAaW5jbHVkZSB0cmFuc2l0aW9uQ3VzdG9tKGxlZnQgMXMgY3ViaWMtYmV6aWVyKDAsIDAsIDAuMjUsIDEpIDBzLCBvcGFjaXR5IDAuMXMgZWFzZSAwcyk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59IiwiQGltcG9ydCBcIi4uL3NldHRpbmdzXCI7XHJcblxyXG4kYmFja2Ryb3Atb3BhY2l0eTogMSAhZGVmYXVsdDtcclxuJGxnLXRvb2xiYXItYmc6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC45KSAhZGVmYXVsdDtcclxuJGxnLWJvcmRlci1yYWRpdXMtYmFzZTogMnB4ICFkZWZhdWx0O1xyXG4kbGctdGhlbWUtaGlnaGxpZ2h0OiByZ2IoMTY5LCA3LCA3KSAhZGVmYXVsdDtcclxuJGxnLXRoZW1lOiAjMEQwQTBBICFkZWZhdWx0O1xyXG5cclxuLy8gYmFzaWMgaWNvbiBjb2xvdXJzXHJcbiRsZy1pY29uLWJnOiByZ2JhKDI0MCwgMjQwLCAyNDAsIDAuNDUpICFkZWZhdWx0O1xyXG4kbGctaWNvbi1jb2xvcjogbWFwLWdldCgkZm91bmRhdGlvbi1wYWxldHRlLCBwcmltYXJ5KSAhZGVmYXVsdDtcclxuJGxnLWljb24taG92ZXItY29sb3I6IHNjYWxlLWNvbG9yKG1hcC1nZXQoJGZvdW5kYXRpb24tcGFsZXR0ZSwgcHJpbWFyeSksICRsaWdodG5lc3M6IC0yMCUpICFkZWZhdWx0O1xyXG5cclxuLy8gY291bnRlclxyXG4kbGctY291bnRlci1jb2xvcjogI2U2ZTZlNiAhZGVmYXVsdDtcclxuJGxnLWNvdW50ZXItZm9udC1zaXplOiAxNnB4ICFkZWZhdWx0O1xyXG5cclxuLy8gTmV4dCBwcmV2IGljb25zXHJcbiRsZy1uZXh0LXByZXYtYmc6ICRsZy1pY29uLWJnICFkZWZhdWx0O1xyXG4kbGctbmV4dC1wcmV2LWNvbG9yOiAkbGctaWNvbi1jb2xvciAhZGVmYXVsdDtcclxuJGxnLW5leHQtcHJldi1ob3Zlci1jb2xvcjogJGxnLWljb24taG92ZXItY29sb3IgIWRlZmF1bHQ7XHJcblxyXG4vLyB0b29sYmFyIGljb25zXHJcbiRsZy10b29sYmFyLWljb24tY29sb3I6ICRsZy1pY29uLWNvbG9yICFkZWZhdWx0O1xyXG4kbGctdG9vbGJhci1pY29uLWhvdmVyLWNvbG9yOiAkbGctaWNvbi1ob3Zlci1jb2xvciAhZGVmYXVsdDtcclxuXHJcbi8vIGF1dG9wbGF5IHByb2dyZXNzIGJhclxyXG4kbGctcHJvZ3Jlc3MtYmFyLWJnOiAjRkZGICFkZWZhdWx0O1xyXG4kbGctcHJvZ3Jlc3MtYmFyLWFjdGl2ZS1iZzogbWFwLWdldCgkZm91bmRhdGlvbi1wYWxldHRlLCBwcmltYXJ5KSAhZGVmYXVsdDtcclxuJGxnLXByb2dyZXNzLWJhci1oZWlnaHQ6IDVweCAhZGVmYXVsdDtcclxuXHJcbi8vIHBhdGhzXHJcbiRsZy1wYXRoLWZvbnRzOiAnLi4vLi4vYXNzZXRzL2ZvbnRzJyAhZGVmYXVsdDtcclxuJGxnLXBhdGgtaW1hZ2VzOiAnLi4vLi4vYXNzZXRzL2ltZycgIWRlZmF1bHQ7XHJcblxyXG4vLyBab29tIHBsdWdpblxyXG4kem9vbS10cmFuc2l0aW9uLWR1cmF0aW9uOiAwLjNzICFkZWZhdWx0O1xyXG5cclxuLy8gU3ViIGh0bWwgLSB0aXRsZVxyXG4kbGctc3ViLWh0bWwtYmc6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC45KSAhZGVmYXVsdDtcclxuJGxnLXN1Yi1odG1sLWNvbG9yOiAjMzMzICFkZWZhdWx0O1xyXG5cclxuLy8gdGh1bWJuYWlsIHRvZ2dsZSBidXR0b25cclxuJGxnLXRodW1iLXRvZ2dsZS1iZzogI3RyYW5zcGFyZW50ICFkZWZhdWx0O1xyXG4kbGctdGh1bWItdG9nZ2xlLWNvbG9yOiAkbGctaWNvbi1jb2xvciAhZGVmYXVsdDtcclxuJGxnLXRodW1iLXRvZ2dsZS1ob3Zlci1jb2xvcjogJGxnLWljb24taG92ZXItY29sb3IgIWRlZmF1bHQ7XHJcbiRsZy10aHVtYi1iZzogI0ZGRiAhZGVmYXVsdDtcclxuXHJcbi8vIHotaW5kZXhcclxuJHppbmRleC1vdXRlcjogMTA1MCAhZGVmYXVsdDtcclxuJHppbmRleC1wcm9ncmVzc2JhcjogMTA4MCAhZGVmYXVsdDtcclxuJHppbmRleC1jb250cm9sczogMTA4MCAhZGVmYXVsdDtcclxuJHppbmRleC10b29sYmFyOiAxMDgyICFkZWZhdWx0O1xyXG4kemluZGV4LXN1Ymh0bWw6IDEwODAgIWRlZmF1bHQ7XHJcbiR6aW5kZXgtdGh1bWJuYWlsOiAxMDgwICFkZWZhdWx0O1xyXG4kemluZGV4LXBhZ2VyOiAxMDgwICFkZWZhdWx0O1xyXG4kemluZGV4LXBsYXlidXR0b246IDEwODAgIWRlZmF1bHQ7XHJcbiR6aW5kZXgtaXRlbTogMTA2MCAhZGVmYXVsdDtcclxuJHppbmRleC1iYWNrZHJvcDogMTA0MCAhZGVmYXVsdDtcclxuIiwiLy8gVmVuZG9yIFByZWZpeGVzXHJcbi8vXHJcbi8vIEFsbCB2ZW5kb3IgbWl4aW5zIGFyZSBkZXByZWNhdGVkIGFzIG9mIHYzLjIuMCBkdWUgdG8gdGhlIGludHJvZHVjdGlvbiBvZlxyXG4vLyBBdXRvcHJlZml4ZXIgaW4gb3VyIEdydW50ZmlsZS4gVGhleSB3aWxsIGJlIHJlbW92ZWQgaW4gdjQuXHJcblxyXG4vLyAtIEFuaW1hdGlvbnNcclxuLy8gLSBCYWNrZmFjZSB2aXNpYmlsaXR5XHJcbi8vIC0gQm94IHNoYWRvd1xyXG4vLyAtIEJveCBzaXppbmdcclxuLy8gLSBDb250ZW50IGNvbHVtbnNcclxuLy8gLSBIeXBoZW5zXHJcbi8vIC0gUGxhY2Vob2xkZXIgdGV4dFxyXG4vLyAtIFRyYW5zZm9ybWF0aW9uc1xyXG4vLyAtIFRyYW5zaXRpb25zXHJcbi8vIC0gVXNlciBTZWxlY3RcclxuLy8gLSBjdXJzb3IgZ3JhYlxyXG5cclxuLy8gQW5pbWF0aW9uc1xyXG5AbWl4aW4gYW5pbWF0aW9uKCRhbmltYXRpb24pIHtcclxuICAtd2Via2l0LWFuaW1hdGlvbjogJGFuaW1hdGlvbjtcclxuICAtby1hbmltYXRpb246ICRhbmltYXRpb247XHJcbiAgYW5pbWF0aW9uOiAkYW5pbWF0aW9uO1xyXG59XHJcblxyXG5AbWl4aW4gYW5pbWF0aW9uLW5hbWUoJG5hbWUpIHtcclxuICAtd2Via2l0LWFuaW1hdGlvbi1uYW1lOiAkbmFtZTtcclxuICBhbmltYXRpb24tbmFtZTogJG5hbWU7XHJcbn1cclxuXHJcbkBtaXhpbiBhbmltYXRpb24tZHVyYXRpb24oJGR1cmF0aW9uKSB7XHJcbiAgLXdlYmtpdC1hbmltYXRpb24tZHVyYXRpb246ICRkdXJhdGlvbjtcclxuICBhbmltYXRpb24tZHVyYXRpb246ICRkdXJhdGlvbjtcclxufVxyXG5cclxuQG1peGluIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb24oJHRpbWluZy1mdW5jdGlvbikge1xyXG4gIC13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogJHRpbWluZy1mdW5jdGlvbjtcclxuICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiAkdGltaW5nLWZ1bmN0aW9uO1xyXG59XHJcblxyXG5AbWl4aW4gYW5pbWF0aW9uLWRlbGF5KCRkZWxheSkge1xyXG4gIC13ZWJraXQtYW5pbWF0aW9uLWRlbGF5OiAkZGVsYXk7XHJcbiAgYW5pbWF0aW9uLWRlbGF5OiAkZGVsYXk7XHJcbn1cclxuXHJcbkBtaXhpbiBhbmltYXRpb24taXRlcmF0aW9uLWNvdW50KCRpdGVyYXRpb24tY291bnQpIHtcclxuICAtd2Via2l0LWFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6ICRpdGVyYXRpb24tY291bnQ7XHJcbiAgYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogJGl0ZXJhdGlvbi1jb3VudDtcclxufVxyXG5cclxuQG1peGluIGFuaW1hdGlvbi1kaXJlY3Rpb24oJGRpcmVjdGlvbikge1xyXG4gIC13ZWJraXQtYW5pbWF0aW9uLWRpcmVjdGlvbjogJGRpcmVjdGlvbjtcclxuICBhbmltYXRpb24tZGlyZWN0aW9uOiAkZGlyZWN0aW9uO1xyXG59XHJcblxyXG5AbWl4aW4gYW5pbWF0aW9uLWZpbGwtbW9kZSgkZmlsbC1tb2RlKSB7XHJcbiAgLXdlYmtpdC1hbmltYXRpb24tZmlsbC1tb2RlOiAkZmlsbC1tb2RlO1xyXG4gIGFuaW1hdGlvbi1maWxsLW1vZGU6ICRmaWxsLW1vZGU7XHJcbn1cclxuXHJcbkBtaXhpbiBrZXlmcmFtZXMoJG5hbWUpIHtcclxuICBALXdlYmtpdC1rZXlmcmFtZXMgI3skbmFtZX0ge1xyXG4gICAgQGNvbnRlbnQ7XHJcbiAgfVxyXG5cclxuICBALW1vei1rZXlmcmFtZXMgI3skbmFtZX0ge1xyXG4gICAgQGNvbnRlbnQ7XHJcbiAgfVxyXG5cclxuICBALW1zLWtleWZyYW1lcyAjeyRuYW1lfSB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcblxyXG4gIEBrZXlmcmFtZXMgI3skbmFtZX0ge1xyXG4gICAgQGNvbnRlbnQ7XHJcbiAgfVxyXG59XHJcblxyXG4vLyBCYWNrZmFjZSB2aXNpYmlsaXR5XHJcbi8vIFByZXZlbnQgYnJvd3NlcnMgZnJvbSBmbGlja2VyaW5nIHdoZW4gdXNpbmcgQ1NTIDNEIHRyYW5zZm9ybXMuXHJcbi8vIERlZmF1bHQgdmFsdWUgaXMgYHZpc2libGVgLCBidXQgY2FuIGJlIGNoYW5nZWQgdG8gYGhpZGRlbmBcclxuXHJcbkBtaXhpbiBiYWNrZmFjZS12aXNpYmlsaXR5KCR2aXNpYmlsaXR5KSB7XHJcbiAgLXdlYmtpdC1iYWNrZmFjZS12aXNpYmlsaXR5OiAkdmlzaWJpbGl0eTtcclxuICAtbW96LWJhY2tmYWNlLXZpc2liaWxpdHk6ICR2aXNpYmlsaXR5O1xyXG4gIGJhY2tmYWNlLXZpc2liaWxpdHk6ICR2aXNpYmlsaXR5O1xyXG59XHJcblxyXG4vLyBEcm9wIHNoYWRvd3NcclxuLy9cclxuLy8gTm90ZTogRGVwcmVjYXRlZCBgLmJveC1zaGFkb3coKWAgYXMgb2YgdjMuMS4wIHNpbmNlIGFsbCBvZiBCb290c3RyYXAnc1xyXG4vLyBzdXBwb3J0ZWQgYnJvd3NlcnMgdGhhdCBoYXZlIGJveCBzaGFkb3cgY2FwYWJpbGl0aWVzIG5vdyBzdXBwb3J0IGl0LlxyXG5cclxuQG1peGluIGJveC1zaGFkb3coJHNoYWRvdy4uLikge1xyXG4gIC13ZWJraXQtYm94LXNoYWRvdzogJHNoYWRvdzsgLy8gaU9TIDw0LjMgJiBBbmRyb2lkIDw0LjFcclxuICBib3gtc2hhZG93OiAkc2hhZG93O1xyXG59XHJcblxyXG4vLyBCb3ggc2l6aW5nXHJcbkBtaXhpbiBib3gtc2l6aW5nKCRib3htb2RlbCkge1xyXG4gIC13ZWJraXQtYm94LXNpemluZzogJGJveG1vZGVsO1xyXG4gIC1tb3otYm94LXNpemluZzogJGJveG1vZGVsO1xyXG4gIGJveC1zaXppbmc6ICRib3htb2RlbDtcclxufVxyXG5cclxuLy8gQ1NTMyBDb250ZW50IENvbHVtbnNcclxuQG1peGluIGNvbnRlbnQtY29sdW1ucygkY29sdW1uLWNvdW50LCAkY29sdW1uLWdhcDogJGdyaWQtZ3V0dGVyLXdpZHRoKSB7XHJcbiAgLXdlYmtpdC1jb2x1bW4tY291bnQ6ICRjb2x1bW4tY291bnQ7XHJcbiAgLW1vei1jb2x1bW4tY291bnQ6ICRjb2x1bW4tY291bnQ7XHJcbiAgY29sdW1uLWNvdW50OiAkY29sdW1uLWNvdW50O1xyXG4gIC13ZWJraXQtY29sdW1uLWdhcDogJGNvbHVtbi1nYXA7XHJcbiAgLW1vei1jb2x1bW4tZ2FwOiAkY29sdW1uLWdhcDtcclxuICBjb2x1bW4tZ2FwOiAkY29sdW1uLWdhcDtcclxufVxyXG5cclxuLy8gT3B0aW9uYWwgaHlwaGVuYXRpb25cclxuQG1peGluIGh5cGhlbnMoJG1vZGU6IGF1dG8pIHtcclxuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XHJcbiAgLXdlYmtpdC1oeXBoZW5zOiAkbW9kZTtcclxuICAtbW96LWh5cGhlbnM6ICRtb2RlO1xyXG4gIC1tcy1oeXBoZW5zOiAkbW9kZTsgLy8gSUUxMCtcclxuICAtby1oeXBoZW5zOiAkbW9kZTtcclxuICBoeXBoZW5zOiAkbW9kZTtcclxufVxyXG5cclxuLy8gVHJhbnNmb3JtYXRpb25zXHJcbkBtaXhpbiBzY2FsZSgkcmF0aW8uLi4pIHtcclxuICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoJHJhdGlvKTtcclxuICAtbXMtdHJhbnNmb3JtOiBzY2FsZSgkcmF0aW8pOyAvLyBJRTkgb25seVxyXG4gIC1vLXRyYW5zZm9ybTogc2NhbGUoJHJhdGlvKTtcclxuICB0cmFuc2Zvcm06IHNjYWxlKCRyYXRpbyk7XHJcbn1cclxuXHJcbkBtaXhpbiBzY2FsZVgoJHJhdGlvKSB7XHJcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlWCgkcmF0aW8pO1xyXG4gIC1tcy10cmFuc2Zvcm06IHNjYWxlWCgkcmF0aW8pOyAvLyBJRTkgb25seVxyXG4gIC1vLXRyYW5zZm9ybTogc2NhbGVYKCRyYXRpbyk7XHJcbiAgdHJhbnNmb3JtOiBzY2FsZVgoJHJhdGlvKTtcclxufVxyXG5cclxuQG1peGluIHNjYWxlWSgkcmF0aW8pIHtcclxuICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGVZKCRyYXRpbyk7XHJcbiAgLW1zLXRyYW5zZm9ybTogc2NhbGVZKCRyYXRpbyk7IC8vIElFOSBvbmx5XHJcbiAgLW8tdHJhbnNmb3JtOiBzY2FsZVkoJHJhdGlvKTtcclxuICB0cmFuc2Zvcm06IHNjYWxlWSgkcmF0aW8pO1xyXG59XHJcblxyXG5AbWl4aW4gc2tldygkeCwgJHkpIHtcclxuICAtd2Via2l0LXRyYW5zZm9ybTogc2tld1goJHgpIHNrZXdZKCR5KTtcclxuICAtbXMtdHJhbnNmb3JtOiBza2V3WCgkeCkgc2tld1koJHkpOyAvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2lzc3Vlcy80ODg1OyBJRTkrXHJcbiAgLW8tdHJhbnNmb3JtOiBza2V3WCgkeCkgc2tld1koJHkpO1xyXG4gIHRyYW5zZm9ybTogc2tld1goJHgpIHNrZXdZKCR5KTtcclxufVxyXG5cclxuQG1peGluIHRyYW5zbGF0ZSgkeCwgJHkpIHtcclxuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlKCR4LCAkeSk7XHJcbiAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlKCR4LCAkeSk7IC8vIElFOSBvbmx5XHJcbiAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGUoJHgsICR5KTtcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgkeCwgJHkpO1xyXG59XHJcblxyXG5AbWl4aW4gdHJhbnNsYXRlM2QoJHgsICR5LCAkeikge1xyXG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgkeCwgJHksICR6KTtcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKCR4LCAkeSwgJHopO1xyXG59XHJcblxyXG5AbWl4aW4gc2NhbGUzZCgkeCwgJHksICR6KSB7XHJcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlM2QoJHgsICR5LCAkeik7XHJcbiAgdHJhbnNmb3JtOiBzY2FsZTNkKCR4LCAkeSwgJHopO1xyXG59XHJcblxyXG5AbWl4aW4gcm90YXRlKCRkZWdyZWVzKSB7XHJcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgkZGVncmVlcyk7XHJcbiAgLW1zLXRyYW5zZm9ybTogcm90YXRlKCRkZWdyZWVzKTsgLy8gSUU5IG9ubHlcclxuICAtby10cmFuc2Zvcm06IHJvdGF0ZSgkZGVncmVlcyk7XHJcbiAgdHJhbnNmb3JtOiByb3RhdGUoJGRlZ3JlZXMpO1xyXG59XHJcblxyXG5AbWl4aW4gcm90YXRlWCgkZGVncmVlcykge1xyXG4gIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGVYKCRkZWdyZWVzKTtcclxuICAtbXMtdHJhbnNmb3JtOiByb3RhdGVYKCRkZWdyZWVzKTsgLy8gSUU5IG9ubHlcclxuICAtby10cmFuc2Zvcm06IHJvdGF0ZVgoJGRlZ3JlZXMpO1xyXG4gIHRyYW5zZm9ybTogcm90YXRlWCgkZGVncmVlcyk7XHJcbn1cclxuXHJcbkBtaXhpbiByb3RhdGVZKCRkZWdyZWVzKSB7XHJcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZVkoJGRlZ3JlZXMpO1xyXG4gIC1tcy10cmFuc2Zvcm06IHJvdGF0ZVkoJGRlZ3JlZXMpOyAvLyBJRTkgb25seVxyXG4gIC1vLXRyYW5zZm9ybTogcm90YXRlWSgkZGVncmVlcyk7XHJcbiAgdHJhbnNmb3JtOiByb3RhdGVZKCRkZWdyZWVzKTtcclxufVxyXG5cclxuQG1peGluIHBlcnNwZWN0aXZlKCRwZXJzcGVjdGl2ZSkge1xyXG4gIC13ZWJraXQtcGVyc3BlY3RpdmU6ICRwZXJzcGVjdGl2ZTtcclxuICAtbW96LXBlcnNwZWN0aXZlOiAkcGVyc3BlY3RpdmU7XHJcbiAgcGVyc3BlY3RpdmU6ICRwZXJzcGVjdGl2ZTtcclxufVxyXG5cclxuQG1peGluIHBlcnNwZWN0aXZlLW9yaWdpbigkcGVyc3BlY3RpdmUpIHtcclxuICAtd2Via2l0LXBlcnNwZWN0aXZlLW9yaWdpbjogJHBlcnNwZWN0aXZlO1xyXG4gIC1tb3otcGVyc3BlY3RpdmUtb3JpZ2luOiAkcGVyc3BlY3RpdmU7XHJcbiAgcGVyc3BlY3RpdmUtb3JpZ2luOiAkcGVyc3BlY3RpdmU7XHJcbn1cclxuXHJcbkBtaXhpbiB0cmFuc2Zvcm0tb3JpZ2luKCRvcmlnaW4pIHtcclxuICAtd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46ICRvcmlnaW47XHJcbiAgLW1vei10cmFuc2Zvcm0tb3JpZ2luOiAkb3JpZ2luO1xyXG4gIC1tcy10cmFuc2Zvcm0tb3JpZ2luOiAkb3JpZ2luOyAvLyBJRTkgb25seVxyXG4gIHRyYW5zZm9ybS1vcmlnaW46ICRvcmlnaW47XHJcbn1cclxuXHJcbkBtaXhpbiB0cmFuc2Zvcm0oJHRyYW5zZm9ybXMpIHtcclxuICAtbW96LXRyYW5zZm9ybTogJHRyYW5zZm9ybXM7XHJcbiAgLW8tdHJhbnNmb3JtOiAkdHJhbnNmb3JtcztcclxuICAtbXMtdHJhbnNmb3JtOiAkdHJhbnNmb3JtcztcclxuICAtd2Via2l0LXRyYW5zZm9ybTogJHRyYW5zZm9ybXM7XHJcbiAgdHJhbnNmb3JtOiAkdHJhbnNmb3JtcztcclxufVxyXG5cclxuLy8gVHJhbnNpdGlvbnNcclxuXHJcbkBtaXhpbiB0cmFuc2l0aW9uKCR0cmFuc2l0aW9uLi4uKSB7XHJcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiAkdHJhbnNpdGlvbjtcclxuICAtby10cmFuc2l0aW9uOiAkdHJhbnNpdGlvbjtcclxuICB0cmFuc2l0aW9uOiAkdHJhbnNpdGlvbjtcclxufVxyXG5cclxuQG1peGluIHRyYW5zaXRpb24tcHJvcGVydHkoJHRyYW5zaXRpb24tcHJvcGVydHkuLi4pIHtcclxuICAtd2Via2l0LXRyYW5zaXRpb24tcHJvcGVydHk6ICR0cmFuc2l0aW9uLXByb3BlcnR5O1xyXG4gIHRyYW5zaXRpb24tcHJvcGVydHk6ICR0cmFuc2l0aW9uLXByb3BlcnR5O1xyXG59XHJcblxyXG5AbWl4aW4gdHJhbnNpdGlvbi1kZWxheSgkdHJhbnNpdGlvbi1kZWxheSkge1xyXG4gIC13ZWJraXQtdHJhbnNpdGlvbi1kZWxheTogJHRyYW5zaXRpb24tZGVsYXk7XHJcbiAgdHJhbnNpdGlvbi1kZWxheTogJHRyYW5zaXRpb24tZGVsYXk7XHJcbn1cclxuXHJcbkBtaXhpbiB0cmFuc2l0aW9uLWR1cmF0aW9uKCR0cmFuc2l0aW9uLWR1cmF0aW9uLi4uKSB7XHJcbiAgLXdlYmtpdC10cmFuc2l0aW9uLWR1cmF0aW9uOiAkdHJhbnNpdGlvbi1kdXJhdGlvbjtcclxuICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAkdHJhbnNpdGlvbi1kdXJhdGlvbjtcclxufVxyXG5cclxuQG1peGluIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uKCR0aW1pbmctZnVuY3Rpb24pIHtcclxuICAtd2Via2l0LXRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiAkdGltaW5nLWZ1bmN0aW9uO1xyXG4gIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiAkdGltaW5nLWZ1bmN0aW9uO1xyXG59XHJcblxyXG5AbWl4aW4gdHJhbnNpdGlvbi10cmFuc2Zvcm0oJHRyYW5zaXRpb24uLi4pIHtcclxuICAtd2Via2l0LXRyYW5zaXRpb246IC13ZWJraXQtdHJhbnNmb3JtICR0cmFuc2l0aW9uO1xyXG4gIC1tb3otdHJhbnNpdGlvbjogLW1vei10cmFuc2Zvcm0gJHRyYW5zaXRpb247XHJcbiAgLW8tdHJhbnNpdGlvbjogLW8tdHJhbnNmb3JtICR0cmFuc2l0aW9uO1xyXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAkdHJhbnNpdGlvbjtcclxufVxyXG5cclxuLy8gdHJhbnNpdGlvbiBjdXN0b21cclxuXHJcbkBmdW5jdGlvbiBwcmVmaXgoJHByb3BlcnR5LCAkcHJlZml4ZXM6IHdlYmtpdCBtb3ogbyBtcykge1xyXG4gICR2ZW5kb3ItcHJlZml4ZWQtcHJvcGVydGllczogdHJhbnNmb3JtIGJhY2tncm91bmQtY2xpcCBiYWNrZ3JvdW5kLXNpemU7XHJcbiAgJHJlc3VsdDogKCk7XHJcblxyXG4gIEBlYWNoICRwcmVmaXggaW4gJHByZWZpeGVzIHtcclxuICAgIEBpZiBpbmRleCgkdmVuZG9yLXByZWZpeGVkLXByb3BlcnRpZXMsICRwcm9wZXJ0eSkge1xyXG4gICAgICAkcHJvcGVydHk6IC0jeyRwcmVmaXh9LSN7JHByb3BlcnR5fTtcclxuICAgIH1cclxuICAgICRyZXN1bHQ6IGFwcGVuZCgkcmVzdWx0LCAkcHJvcGVydHkpO1xyXG4gIH1cclxuICBAcmV0dXJuICRyZXN1bHQ7XHJcbn1cclxuXHJcbkBmdW5jdGlvbiB0cmFucy1wcmVmaXgoJHRyYW5zaXRpb24sICRwcmVmaXg6IG1veikge1xyXG4gICRwcmVmaXhlZDogKCk7XHJcblxyXG4gIEBlYWNoICR0cmFucyBpbiAkdHJhbnNpdGlvbiB7XHJcbiAgICAkcHJvcC1uYW1lOiBudGgoJHRyYW5zLCAxKTtcclxuICAgICR2ZW5kb3ItcHJvcC1uYW1lOiBwcmVmaXgoJHByb3AtbmFtZSwgJHByZWZpeCk7XHJcbiAgICAkcHJvcC12YWxzOiBudGgoJHRyYW5zLCAyKTtcclxuICAgICRwcmVmaXhlZDogYXBwZW5kKCRwcmVmaXhlZCwgJHZlbmRvci1wcm9wLW5hbWUgJHByb3AtdmFscywgY29tbWEpO1xyXG4gIH1cclxuICBAcmV0dXJuICRwcmVmaXhlZDtcclxufVxyXG5cclxuQG1peGluIHRyYW5zaXRpb25DdXN0b20oJHZhbHVlcy4uLikge1xyXG4gICR0cmFuc2l0aW9uczogKCk7XHJcblxyXG4gIEBlYWNoICRkZWNsYXJhdGlvbiBpbiAkdmFsdWVzIHtcclxuICAgICRwcm9wOiBudGgoJGRlY2xhcmF0aW9uLCAxKTtcclxuICAgICRwcm9wLW9wdHM6ICgpO1xyXG4gICAgJGxlbmd0aDogbGVuZ3RoKCRkZWNsYXJhdGlvbik7XHJcblxyXG4gICAgQGlmICRsZW5ndGggPj0gMiB7XHJcbiAgICAgIEBmb3IgJGkgZnJvbSAyIHRocm91Z2ggJGxlbmd0aCB7XHJcbiAgICAgICAgJHByb3Atb3B0czogYXBwZW5kKCRwcm9wLW9wdHMsIG50aCgkZGVjbGFyYXRpb24sICRpKSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgICR0cmFuczogJHByb3AsICRwcm9wLW9wdHM7XHJcbiAgICAkdHJhbnNpdGlvbnM6IGFwcGVuZCgkdHJhbnNpdGlvbnMsICR0cmFucywgY29tbWEpO1xyXG4gIH1cclxuICAtd2Via2l0LXRyYW5zaXRpb246IHRyYW5zLXByZWZpeCgkdHJhbnNpdGlvbnMsIHdlYmtpdCk7XHJcbiAgLW1vei10cmFuc2l0aW9uOiB0cmFucy1wcmVmaXgoJHRyYW5zaXRpb25zLCBtb3opO1xyXG4gIC1vLXRyYW5zaXRpb246IHRyYW5zLXByZWZpeCgkdHJhbnNpdGlvbnMsIG8pO1xyXG4gIHRyYW5zaXRpb246ICR2YWx1ZXM7XHJcbn1cclxuXHJcbi8vIFVzZXIgc2VsZWN0XHJcbi8vIEZvciBzZWxlY3RpbmcgdGV4dCBvbiB0aGUgcGFnZVxyXG5cclxuQG1peGluIHVzZXItc2VsZWN0KCRzZWxlY3QpIHtcclxuICAtd2Via2l0LXVzZXItc2VsZWN0OiAkc2VsZWN0O1xyXG4gIC1tb3otdXNlci1zZWxlY3Q6ICRzZWxlY3Q7XHJcbiAgLW1zLXVzZXItc2VsZWN0OiAkc2VsZWN0OyAvLyBJRTEwK1xyXG4gIHVzZXItc2VsZWN0OiAkc2VsZWN0O1xyXG59XHJcblxyXG4vLyBtb3VzZSBncmFiXHJcblxyXG5AbWl4aW4gZ3JhYi1jdXJzb3Ige1xyXG4gIGN1cnNvcjogLXdlYmtpdC1ncmFiO1xyXG4gIGN1cnNvcjogLW1vei1ncmFiO1xyXG4gIGN1cnNvcjogLW8tZ3JhYjtcclxuICBjdXJzb3I6IC1tcy1ncmFiO1xyXG4gIGN1cnNvcjogZ3JhYjtcclxufVxyXG5cclxuQG1peGluIGdyYWJiaW5nLWN1cnNvciB7XHJcbiAgY3Vyc29yOiBtb3ZlO1xyXG4gIGN1cnNvcjogLXdlYmtpdC1ncmFiYmluZztcclxuICBjdXJzb3I6IC1tb3otZ3JhYmJpbmc7XHJcbiAgY3Vyc29yOiAtby1ncmFiYmluZztcclxuICBjdXJzb3I6IC1tcy1ncmFiYmluZztcclxuICBjdXJzb3I6IGdyYWJiaW5nO1xyXG59XHJcbiIsIkBpbXBvcnQgXCJsZy12YXJpYWJsZXNcIjtcclxuXHJcbi8vIGZvbnQgaWNvbnMgc3VwcG9ydFxyXG5AZm9udC1mYWNlIHtcclxuICBmb250LWZhbWlseTogJ2xnJztcclxuICBzcmM6IHVybChcIiN7JGxnLXBhdGgtZm9udHN9L2xnLmVvdD9uMXozNzNcIik7XHJcbiAgc3JjOiB1cmwoXCIjeyRsZy1wYXRoLWZvbnRzfS9sZy5lb3Q/I2llZml4bjF6MzczXCIpIGZvcm1hdChcImVtYmVkZGVkLW9wZW50eXBlXCIpLCB1cmwoXCIjeyRsZy1wYXRoLWZvbnRzfS9sZy53b2ZmP24xejM3M1wiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIjeyRsZy1wYXRoLWZvbnRzfS9sZy50dGY/bjF6MzczXCIpIGZvcm1hdChcInRydWV0eXBlXCIpLCB1cmwoXCIjeyRsZy1wYXRoLWZvbnRzfS9sZy5zdmc/bjF6MzczI2xnXCIpIGZvcm1hdChcInN2Z1wiKTtcclxuICBmb250LXdlaWdodDogbm9ybWFsO1xyXG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxufVxyXG5cclxuLmxnLWljb24ge1xyXG4gIGZvbnQtZmFtaWx5OiAnbGcnO1xyXG4gIHNwZWFrOiBub25lO1xyXG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICBmb250LXdlaWdodDogbm9ybWFsO1xyXG4gIGZvbnQtdmFyaWFudDogbm9ybWFsO1xyXG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xyXG4gIGxpbmUtaGVpZ2h0OiAxO1xyXG4gIC8qIEJldHRlciBGb250IFJlbmRlcmluZyA9PT09PT09PT09PSAqL1xyXG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xyXG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7XHJcbn0iLCJAaW1wb3J0IFwibGctdmFyaWFibGVzXCI7XHJcbkBpbXBvcnQgXCJsZy1taXhpbnNcIjtcclxuXHJcbi8vIGRlZmF1bHQgdGhlbWVcclxuLmxnLWFjdGlvbnMge1xyXG4gIC5sZy1uZXh0LCAubGctcHJldiB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbGctbmV4dC1wcmV2LWJnO1xyXG4gICAgYm9yZGVyLXJhZGl1czogJGxnLWJvcmRlci1yYWRpdXMtYmFzZTtcclxuICAgIGNvbG9yOiAkbGctbmV4dC1wcmV2LWNvbG9yO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBmb250LXNpemU6IDIycHg7XHJcbiAgICBtYXJnaW4tdG9wOiAtMTBweDtcclxuICAgIHBhZGRpbmc6IDhweCAxMHB4IDlweDtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogNTAlO1xyXG4gICAgei1pbmRleDogJHppbmRleC1jb250cm9scztcclxuXHJcbiAgICAmLmRpc2FibGVkIHtcclxuICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgIG9wYWNpdHk6IDAuNTtcclxuICAgIH1cclxuXHJcbiAgICAmOmhvdmVyIHtcclxuICAgICAgY29sb3I6ICRsZy1uZXh0LXByZXYtaG92ZXItY29sb3I7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAubGctbmV4dCB7XHJcbiAgICByaWdodDogMjBweDtcclxuXHJcbiAgICAmOmJlZm9yZSB7XHJcbiAgICAgIGNvbnRlbnQ6IFwiXFxlMDk1XCI7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAubGctcHJldiB7XHJcbiAgICBsZWZ0OiAyMHB4O1xyXG5cclxuICAgICY6YWZ0ZXIge1xyXG4gICAgICBjb250ZW50OiBcIlxcZTA5NFwiO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuQGluY2x1ZGUga2V5ZnJhbWVzKGxnLXJpZ2h0LWVuZCkge1xyXG4gIDAlIHtcclxuICAgIGxlZnQ6IDA7XHJcbiAgfVxyXG5cclxuICA1MCUge1xyXG4gICAgbGVmdDogLTMwcHg7XHJcbiAgfVxyXG5cclxuICAxMDAlIHtcclxuICAgIGxlZnQ6IDA7XHJcbiAgfVxyXG59XHJcblxyXG5AaW5jbHVkZSBrZXlmcmFtZXMobGctbGVmdC1lbmQpIHtcclxuICAwJSB7XHJcbiAgICBsZWZ0OiAwO1xyXG4gIH1cclxuXHJcbiAgNTAlIHtcclxuICAgIGxlZnQ6IDMwcHg7XHJcbiAgfVxyXG5cclxuICAxMDAlIHtcclxuICAgIGxlZnQ6IDA7XHJcbiAgfVxyXG59XHJcblxyXG4ubGctb3V0ZXIge1xyXG4gICYubGctcmlnaHQtZW5kIHtcclxuICAgIC5sZy1vYmplY3Qge1xyXG4gICAgICBAaW5jbHVkZSBhbmltYXRpb24obGctcmlnaHQtZW5kIDAuM3MpO1xyXG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmLmxnLWxlZnQtZW5kIHtcclxuICAgIC5sZy1vYmplY3Qge1xyXG4gICAgICBAaW5jbHVkZSBhbmltYXRpb24obGctbGVmdC1lbmQgMC4zcyk7XHJcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi8vIGxnIHRvb2xiYXJcclxuLmxnLXRvb2xiYXIge1xyXG4gIHotaW5kZXg6ICR6aW5kZXgtdG9vbGJhcjtcclxuICBsZWZ0OiAwO1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDA7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogJGxnLXRvb2xiYXItYmc7XHJcblxyXG4gIC5sZy1pY29uIHtcclxuICAgIGNvbG9yOiAkbGctdG9vbGJhci1pY29uLWNvbG9yO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgZmxvYXQ6IHJpZ2h0O1xyXG4gICAgZm9udC1zaXplOiAyNHB4O1xyXG4gICAgaGVpZ2h0OiA0N3B4O1xyXG4gICAgbGluZS1oZWlnaHQ6IDI3cHg7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDA7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB3aWR0aDogNTBweDtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZSAhaW1wb3J0YW50O1xyXG4gICAgb3V0bGluZTogbWVkaXVtIG5vbmU7XHJcbiAgICBAaW5jbHVkZSB0cmFuc2l0aW9uKGNvbG9yIDAuMnMgbGluZWFyKTtcclxuXHJcbiAgICAmOmhvdmVyIHtcclxuICAgICAgY29sb3I6ICRsZy10b29sYmFyLWljb24taG92ZXItY29sb3I7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAubGctY2xvc2Uge1xyXG4gICAgJjphZnRlciB7XHJcbiAgICAgIGNvbnRlbnQ6IFwiXFxlMDcwXCI7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAubGctZG93bmxvYWQge1xyXG4gICAgJjphZnRlciB7XHJcbiAgICAgIGNvbnRlbnQ6IFwiXFxlMGYyXCI7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4vLyBsaWdodEdhbGxlcnkgdGl0bGVcclxuLmxnLXN1Yi1odG1sIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkbGctc3ViLWh0bWwtYmc7XHJcbiAgYm90dG9tOiAwO1xyXG4gIGNvbG9yOiAkbGctc3ViLWh0bWwtY29sb3I7XHJcbiAgZm9udC1zaXplOiAxNnB4O1xyXG4gIGxlZnQ6IDA7XHJcbiAgcGFkZGluZzogMTBweCA0MHB4O1xyXG4gIHBvc2l0aW9uOiBmaXhlZDtcclxuICByaWdodDogMDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgei1pbmRleDogJHppbmRleC1zdWJodG1sO1xyXG5cclxuICBoNCB7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBmb250LXNpemU6IDEzcHg7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICB9XHJcblxyXG4gIHAge1xyXG4gICAgZm9udC1zaXplOiAxMnB4O1xyXG4gICAgbWFyZ2luOiA1cHggYXV0byAwO1xyXG4gICAgbWF4LXdpZHRoOiA4MCU7XHJcbiAgfVxyXG59XHJcblxyXG4vLyBsZyBpbWFnZSBjb3VudGVyXHJcbiNsZy1jb3VudGVyIHtcclxuICBjb2xvcjogJGxnLWljb24tY29sb3I7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIGZvbnQtc2l6ZTogJGxnLWNvdW50ZXItZm9udC1zaXplO1xyXG4gIHBhZGRpbmctbGVmdDogMjBweDtcclxuICBwYWRkaW5nLXRvcDogMTJweDtcclxuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG59XHJcblxyXG4vLyBmb3IgaWRsZSBzdGF0ZVxyXG4ubGctdG9vbGJhciwgLmxnLXByZXYsIC5sZy1uZXh0IHtcclxuICBvcGFjaXR5OiAxO1xyXG4gIEBpbmNsdWRlIHRyYW5zaXRpb25DdXN0b20odHJhbnNmb3JtIDAuMzVzIGN1YmljLWJlemllcigwLCAwLCAwLjI1LCAxKSAwcywgb3BhY2l0eSAwLjM1cyBjdWJpYy1iZXppZXIoMCwgMCwgMC4yNSwgMSkgMHMsIGNvbG9yIDAuMnMgbGluZWFyKTtcclxufVxyXG5cclxuLmxnLWhpZGUtaXRlbXMge1xyXG4gIC5sZy1wcmV2IHtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgICBAaW5jbHVkZSB0cmFuc2xhdGUzZCgtMTBweCwgMCwgMCk7XHJcbiAgfVxyXG5cclxuICAubGctbmV4dCB7XHJcbiAgICBvcGFjaXR5OiAwO1xyXG4gICAgQGluY2x1ZGUgdHJhbnNsYXRlM2QoMTBweCwgMCwgMCk7XHJcbiAgfVxyXG5cclxuICAubGctdG9vbGJhciB7XHJcbiAgICBvcGFjaXR5OiAwO1xyXG4gICAgQGluY2x1ZGUgdHJhbnNsYXRlM2QoMCwgLTEwcHgsIDApO1xyXG4gIH1cclxufVxyXG5cclxuLy8gU3RhcnRpbmcgZWZmZWN0XHJcbmJvZHk6bm90KC5sZy1mcm9tLWhhc2gpIHtcclxuICAubGctb3V0ZXIge1xyXG4gICAgJi5sZy1zdGFydC16b29tIHtcclxuICAgICAgLmxnLW9iamVjdCB7XHJcbiAgICAgICAgQGluY2x1ZGUgc2NhbGUzZCgwLjUsIDAuNSwgMC41KTtcclxuICAgICAgICBvcGFjaXR5OiAwO1xyXG4gICAgICAgIEBpbmNsdWRlIHRyYW5zaXRpb25DdXN0b20odHJhbnNmb3JtIDI1MG1zIGN1YmljLWJlemllcigwLCAwLCAwLjI1LCAxKSAwcywgb3BhY2l0eSAyNTBtcyBjdWJpYy1iZXppZXIoMCwgMCwgMC4yNSwgMSkgIWltcG9ydGFudCk7XHJcbiAgICAgICAgQGluY2x1ZGUgdHJhbnNmb3JtLW9yaWdpbig1MCUgNTAlKTtcclxuICAgICAgfVxyXG4gICAgICAubGctaXRlbS5sZy1jb21wbGV0ZSB7XHJcbiAgICAgICAgLmxnLW9iamVjdCB7XHJcbiAgICAgICAgICBAaW5jbHVkZSBzY2FsZTNkKDEsIDEsIDEpO1xyXG4gICAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn0iLCJAaW1wb3J0IFwibGctdmFyaWFibGVzXCI7XHJcbkBpbXBvcnQgXCJsZy1taXhpbnNcIjtcclxuXHJcbi5sZy1vdXRlciB7XHJcbiAgLmxnLXRodW1iLW91dGVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRsZy10aHVtYi1iZztcclxuICAgIGJvdHRvbTogMDtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgei1pbmRleDogJHppbmRleC10aHVtYm5haWw7XHJcbiAgICBtYXgtaGVpZ2h0OiAzNTBweDtcclxuICAgIEBpbmNsdWRlIHRyYW5zbGF0ZTNkKDAsIDEwMCUsIDApO1xyXG4gICAgQGluY2x1ZGUgdHJhbnNpdGlvbkN1c3RvbSh0cmFuc2Zvcm0gMC4yNXMgY3ViaWMtYmV6aWVyKDAsIDAsIDAuMjUsIDEpIDBzKTtcclxuXHJcbiAgICAmLmxnLWdyYWIge1xyXG4gICAgICAubGctdGh1bWItaXRlbSB7XHJcbiAgICAgICAgQGluY2x1ZGUgZ3JhYi1jdXJzb3I7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmLmxnLWdyYWJiaW5nIHtcclxuICAgICAgLmxnLXRodW1iLWl0ZW0ge1xyXG4gICAgICAgIEBpbmNsdWRlIGdyYWJiaW5nLWN1cnNvcjtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICYubGctZHJhZ2dpbmcge1xyXG4gICAgICAubGctdGh1bWIge1xyXG4gICAgICAgIEBpbmNsdWRlIHRyYW5zaXRpb24tZHVyYXRpb24oMHMgIWltcG9ydGFudCk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbiAgJi5sZy10aHVtYi1vcGVuIHtcclxuICAgIC5sZy10aHVtYi1vdXRlciB7XHJcbiAgICAgIEBpbmNsdWRlIHRyYW5zbGF0ZTNkKDAsIDAlLCAwKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5sZy10aHVtYiB7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDA7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAtNXB4O1xyXG4gIH1cclxuXHJcbiAgLmxnLXRodW1iLWl0ZW0ge1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgYm9yZGVyOiAycHggc29saWQgI0ZGRjtcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDVweDtcclxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI1cHgpIHtcclxuICAgICAgQGluY2x1ZGUgdHJhbnNpdGlvbihib3JkZXItY29sb3IgMC4yNXMgZWFzZSk7XHJcbiAgICB9XHJcblxyXG4gICAgJi5hY3RpdmUsICY6aG92ZXIge1xyXG4gICAgICBib3JkZXItY29sb3I6ICRsZy10aGVtZS1oaWdobGlnaHQ7XHJcbiAgICB9XHJcblxyXG4gICAgaW1nIHtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgIGhlaWdodDogMTAwJTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gICYubGctaGFzLXRodW1iIHtcclxuICAgIC5sZy1pdGVtIHtcclxuICAgICAgcGFkZGluZy1ib3R0b206IDEyMHB4O1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgJi5sZy1jYW4tdG9nZ2xlIHtcclxuICAgIC5sZy1pdGVtIHtcclxuICAgICAgcGFkZGluZy1ib3R0b206IDA7XHJcbiAgICB9XHJcbiAgfVxyXG4gICYubGctcHVsbC1jYXB0aW9uLXVwIHtcclxuICAgIC5sZy1zdWItaHRtbCB7XHJcbiAgICAgIEBpbmNsdWRlIHRyYW5zaXRpb24oYm90dG9tIDAuMjVzIGVhc2UpO1xyXG4gICAgfVxyXG4gICAgJi5sZy10aHVtYi1vcGVuIHtcclxuICAgICAgLmxnLXN1Yi1odG1sIHtcclxuICAgICAgICBib3R0b206IDEwMHB4O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAubGctdG9vZ2xlLXRodW1iIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRsZy10aHVtYi10b2dnbGUtYmc7XHJcbiAgICBib3JkZXItcmFkaXVzOiAkbGctYm9yZGVyLXJhZGl1cy1iYXNlICRsZy1ib3JkZXItcmFkaXVzLWJhc2UgMCAwO1xyXG4gICAgY29sb3I6ICRsZy10aHVtYi10b2dnbGUtY29sb3I7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBmb250LXNpemU6IDI0cHg7XHJcbiAgICBoZWlnaHQ6IDM5cHg7XHJcbiAgICBsaW5lLWhlaWdodDogMjdweDtcclxuICAgIHBhZGRpbmc6IDVweCAwO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgcmlnaHQ6IDIwcHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB0b3A6IC0zOXB4O1xyXG4gICAgd2lkdGg6IDUwcHg7XHJcblxyXG4gICAgJjphZnRlciB7XHJcbiAgICAgIGNvbnRlbnQ6IFwiXFxlMWZmXCI7XHJcbiAgICB9XHJcblxyXG4gICAgJjpob3ZlciB7XHJcbiAgICAgIGNvbG9yOiAkbGctdGh1bWItdG9nZ2xlLWhvdmVyLWNvbG9yO1xyXG4gICAgfVxyXG4gIH1cclxufSIsIkBpbXBvcnQgXCJsZy12YXJpYWJsZXNcIjtcclxuQGltcG9ydCBcImxnLW1peGluc1wiO1xyXG5cclxuLmxnLW91dGVyIHtcclxuICAubGctdmlkZW8tY29udCB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gICAgbWF4LXdpZHRoOiAxMTQwcHg7XHJcbiAgICBtYXgtaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nOiAwIDVweDtcclxuICB9XHJcblxyXG4gIC5sZy12aWRlbyB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMDtcclxuICAgIHBhZGRpbmctYm90dG9tOiA1Ni4yNSU7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICAgIC5sZy1vYmplY3Qge1xyXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgdG9wOiAwO1xyXG4gICAgICBsZWZ0OiAwO1xyXG4gICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xyXG4gICAgICBoZWlnaHQ6IDEwMCUgIWltcG9ydGFudDtcclxuICAgIH1cclxuXHJcbiAgICAubGctdmlkZW8tcGxheSB7XHJcbiAgICAgIHdpZHRoOiA4NHB4O1xyXG4gICAgICBoZWlnaHQ6IDU5cHg7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgbGVmdDogNTAlO1xyXG4gICAgICB0b3A6IDUwJTtcclxuICAgICAgbWFyZ2luLWxlZnQ6IC00MnB4O1xyXG4gICAgICBtYXJnaW4tdG9wOiAtMzBweDtcclxuICAgICAgei1pbmRleDogJHppbmRleC1wbGF5YnV0dG9uO1xyXG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAubGctaGFzLXZpbWVvIHtcclxuICAgIC5sZy12aWRlby1wbGF5IHtcclxuICAgICAgYmFja2dyb3VuZDogdXJsKFwiI3skbGctcGF0aC1pbWFnZXN9L3ZpbWVvLXBsYXkucG5nXCIpIG5vLXJlcGVhdCBzY3JvbGwgMCAwIHRyYW5zcGFyZW50O1xyXG4gICAgfVxyXG4gICAgJjpob3ZlciB7XHJcbiAgICAgIC5sZy12aWRlby1wbGF5IHtcclxuICAgICAgICBiYWNrZ3JvdW5kOiB1cmwoXCIjeyRsZy1wYXRoLWltYWdlc30vdmltZW8tcGxheS5wbmdcIikgbm8tcmVwZWF0IHNjcm9sbCAwIC01OHB4IHRyYW5zcGFyZW50O1xyXG4gICAgICB9XHJcblxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLmxnLWhhcy1odG1sNSB7XHJcbiAgICAubGctdmlkZW8tcGxheSB7XHJcbiAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50IHVybChcIiN7JGxnLXBhdGgtaW1hZ2VzfS92aWRlby1wbGF5LnBuZ1wiKSBuby1yZXBlYXQgc2Nyb2xsIDAgMDtcclxuICAgICAgaGVpZ2h0OiA2NHB4O1xyXG4gICAgICBtYXJnaW4tbGVmdDogLTMycHg7XHJcbiAgICAgIG1hcmdpbi10b3A6IC0zMnB4O1xyXG4gICAgICB3aWR0aDogNjRweDtcclxuICAgICAgb3BhY2l0eTogMC44O1xyXG4gICAgfVxyXG4gICAgJjpob3ZlciB7XHJcbiAgICAgIC5sZy12aWRlby1wbGF5IHtcclxuICAgICAgICBvcGFjaXR5OiAxXHJcbiAgICAgIH1cclxuXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAubGctaGFzLXlvdXR1YmUge1xyXG4gICAgLmxnLXZpZGVvLXBsYXkge1xyXG4gICAgICBiYWNrZ3JvdW5kOiB1cmwoXCIjeyRsZy1wYXRoLWltYWdlc30veW91dHViZS1wbGF5LnBuZ1wiKSBuby1yZXBlYXQgc2Nyb2xsIDAgMCB0cmFuc3BhcmVudDtcclxuICAgIH1cclxuICAgICY6aG92ZXIge1xyXG4gICAgICAubGctdmlkZW8tcGxheSB7XHJcbiAgICAgICAgYmFja2dyb3VuZDogdXJsKFwiI3skbGctcGF0aC1pbWFnZXN9L3lvdXR1YmUtcGxheS5wbmdcIikgbm8tcmVwZWF0IHNjcm9sbCAwIC02MHB4IHRyYW5zcGFyZW50O1xyXG4gICAgICB9XHJcblxyXG4gICAgfVxyXG4gIH1cclxuICAubGctdmlkZW8tb2JqZWN0IHtcclxuICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XHJcbiAgICBoZWlnaHQ6IDEwMCUgIWltcG9ydGFudDtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgfVxyXG5cclxuICAubGctaGFzLXZpZGVvIHtcclxuICAgIC5sZy12aWRlby1vYmplY3Qge1xyXG4gICAgICB2aXNpYmlsaXR5OiBoaWRkZW47XHJcbiAgICB9XHJcblxyXG4gICAgJi5sZy12aWRlby1wbGF5aW5nIHtcclxuICAgICAgLmxnLW9iamVjdCwgLmxnLXZpZGVvLXBsYXkge1xyXG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC5sZy12aWRlby1vYmplY3Qge1xyXG4gICAgICAgIHZpc2liaWxpdHk6IHZpc2libGU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn0iLCJAaW1wb3J0IFwibGctdmFyaWFibGVzXCI7XHJcbkBpbXBvcnQgXCJsZy1taXhpbnNcIjtcclxuXHJcbi5sZy1wcm9ncmVzcy1iYXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICRsZy1wcm9ncmVzcy1iYXItYmc7XHJcbiAgaGVpZ2h0OiAkbGctcHJvZ3Jlc3MtYmFyLWhlaWdodDtcclxuICBsZWZ0OiAwO1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDA7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgei1pbmRleDogJHppbmRleC1wcm9ncmVzc2JhcjtcclxuICBvcGFjaXR5OiAwO1xyXG4gIEBpbmNsdWRlIHRyYW5zaXRpb25DdXN0b20ob3BhY2l0eSAwLjA4cyBlYXNlIDBzKTtcclxuXHJcbiAgLmxnLXByb2dyZXNzIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRsZy1wcm9ncmVzcy1iYXItYWN0aXZlLWJnO1xyXG4gICAgaGVpZ2h0OiAkbGctcHJvZ3Jlc3MtYmFyLWhlaWdodDtcclxuICAgIHdpZHRoOiAwO1xyXG4gIH1cclxuXHJcbiAgJi5sZy1zdGFydCB7XHJcbiAgICAubGctcHJvZ3Jlc3Mge1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5sZy1zaG93LWF1dG9wbGF5ICYge1xyXG4gICAgb3BhY2l0eTogMTtcclxuICB9XHJcbn1cclxuXHJcbi5sZy1hdXRvcGxheS1idXR0b24ge1xyXG4gICY6YWZ0ZXIge1xyXG4gICAgLmxnLXNob3ctYXV0b3BsYXkgJiB7XHJcbiAgICAgIGNvbnRlbnQ6IFwiXFxlMDFhXCI7XHJcbiAgICB9XHJcbiAgICBjb250ZW50OiBcIlxcZTAxZFwiO1xyXG4gIH1cclxufSIsIkBpbXBvcnQgXCJsZy12YXJpYWJsZXNcIjtcclxuQGltcG9ydCBcImxnLW1peGluc1wiO1xyXG5cclxuLmxnLW91dGVyIHtcclxuICAvLyByZXNldCB0cmFuc2l0aW9uIGR1cmF0aW9uXHJcbiAgJi5sZy1jc3MzLmxnLXpvb20tZHJhZ2dpbmcge1xyXG4gICAgLmxnLWl0ZW0ubGctY29tcGxldGUubGctem9vbWFibGUge1xyXG4gICAgICAubGctaW1nLXdyYXAsIC5sZy1pbWFnZSB7XHJcbiAgICAgICAgQGluY2x1ZGUgdHJhbnNpdGlvbi1kdXJhdGlvbigwcyk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5sZy1pdGVtLmxnLWNvbXBsZXRlLmxnLXpvb21hYmxlIHtcclxuXHJcbiAgICAubGctaW1nLXdyYXAge1xyXG4gICAgICBAaW5jbHVkZSB0cmFuc2l0aW9uQ3VzdG9tKGxlZnQgJHpvb20tdHJhbnNpdGlvbi1kdXJhdGlvbiBjdWJpYy1iZXppZXIoMCwgMCwgMC4yNSwgMSkgMHMsIHRvcCAkem9vbS10cmFuc2l0aW9uLWR1cmF0aW9uIGN1YmljLWJlemllcigwLCAwLCAwLjI1LCAxKSAwcyk7XHJcbiAgICAgIEBpbmNsdWRlIHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xyXG4gICAgICBAaW5jbHVkZSBiYWNrZmFjZS12aXNpYmlsaXR5KGhpZGRlbik7XHJcbiAgICB9XHJcblxyXG4gICAgLmxnLWltYWdlIHtcclxuICAgICAgLy8gVHJhbnNsYXRlIHJlcXVpcmVkIGZvciB6b29tXHJcbiAgICAgIEBpbmNsdWRlIHNjYWxlM2QoMSwgMSwgMSk7XHJcbiAgICAgIEBpbmNsdWRlIHRyYW5zaXRpb25DdXN0b20odHJhbnNmb3JtICR6b29tLXRyYW5zaXRpb24tZHVyYXRpb24gY3ViaWMtYmV6aWVyKDAsIDAsIDAuMjUsIDEpIDBzLCBvcGFjaXR5IDAuMTVzICFpbXBvcnRhbnQpO1xyXG4gICAgICBAaW5jbHVkZSB0cmFuc2Zvcm0tb3JpZ2luKDAgMCk7XHJcbiAgICAgIEBpbmNsdWRlIGJhY2tmYWNlLXZpc2liaWxpdHkoaGlkZGVuKTtcclxuICAgIH1cclxuICB9XHJcblxyXG59XHJcblxyXG4vLyB6b29tIGJ1dHRvbnNcclxuI2xnLXpvb20taW4ge1xyXG4gICY6YWZ0ZXIge1xyXG4gICAgY29udGVudDogXCJcXGUzMTFcIjtcclxuICB9XHJcbn1cclxuXHJcbiNsZy1hY3R1YWwtc2l6ZSB7XHJcbiAgZm9udC1zaXplOiAyMHB4O1xyXG4gICY6YWZ0ZXIge1xyXG4gICAgY29udGVudDogXCJcXGUwMzNcIjtcclxuICB9XHJcbn1cclxuXHJcbiNsZy16b29tLW91dCB7XHJcbiAgb3BhY2l0eTogMC41O1xyXG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG5cclxuICAmOmFmdGVyIHtcclxuICAgIGNvbnRlbnQ6IFwiXFxlMzEyXCI7XHJcbiAgfVxyXG5cclxuICAubGctem9vbWVkICYge1xyXG4gICAgb3BhY2l0eTogMTtcclxuICAgIHBvaW50ZXItZXZlbnRzOiBhdXRvO1xyXG4gIH1cclxufSIsIkBpbXBvcnQgXCJsZy12YXJpYWJsZXNcIjtcclxuQGltcG9ydCBcImxnLW1peGluc1wiO1xyXG5cclxuLmxnLW91dGVyIHtcclxuICAubGctcGFnZXItb3V0ZXIge1xyXG4gICAgYm90dG9tOiA2MHB4O1xyXG4gICAgbGVmdDogMDtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgei1pbmRleDogJHppbmRleC1wYWdlcjtcclxuICAgIGhlaWdodDogMTBweDtcclxuXHJcbiAgICAmLmxnLXBhZ2VyLWhvdmVyIHtcclxuICAgICAgLmxnLXBhZ2VyLWNvbnQge1xyXG4gICAgICAgIG92ZXJmbG93OiB2aXNpYmxlO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAubGctcGFnZXItY29udCB7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgdmVydGljYWwtYWxpZ246IHRvcDtcclxuICAgIG1hcmdpbjogMCA1cHg7XHJcblxyXG4gICAgJjpob3ZlciB7XHJcbiAgICAgIC5sZy1wYWdlci10aHVtYi1jb250IHtcclxuICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICAgIEBpbmNsdWRlIHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJi5sZy1wYWdlci1hY3RpdmUge1xyXG4gICAgICAubGctcGFnZXIge1xyXG4gICAgICAgIGJveC1zaGFkb3c6IDAgMCAwIDJweCB3aGl0ZSBpbnNldDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLmxnLXBhZ2VyLXRodW1iLWNvbnQge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgIGNvbG9yOiAjRkZGO1xyXG4gICAgYm90dG9tOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA4M3B4O1xyXG4gICAgbGVmdDogMDtcclxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgICBtYXJnaW4tbGVmdDogLTYwcHg7XHJcbiAgICBvcGFjaXR5OiAwO1xyXG4gICAgcGFkZGluZzogNXB4O1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgd2lkdGg6IDEyMHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogM3B4O1xyXG4gICAgQGluY2x1ZGUgdHJhbnNpdGlvbkN1c3RvbShvcGFjaXR5IDAuMTVzIGVhc2UgMHMsIHRyYW5zZm9ybSAwLjE1cyBlYXNlIDBzKTtcclxuICAgIEBpbmNsdWRlIHRyYW5zbGF0ZTNkKDAsIDVweCwgMCk7XHJcblxyXG4gICAgaW1nIHtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgIGhlaWdodDogMTAwJTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5sZy1wYWdlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSk7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICBib3gtc2hhZG93OiAwIDAgMCA4cHggcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjcpIGluc2V0O1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBoZWlnaHQ6IDEycHg7XHJcbiAgICBAaW5jbHVkZSB0cmFuc2l0aW9uKGJveC1zaGFkb3cgMC4zcyBlYXNlIDBzKTtcclxuICAgIHdpZHRoOiAxMnB4O1xyXG5cclxuICAgICY6aG92ZXIsICY6Zm9jdXMge1xyXG4gICAgICBib3gtc2hhZG93OiAwIDAgMCA4cHggd2hpdGUgaW5zZXQ7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAubGctY2FyZXQge1xyXG4gICAgYm9yZGVyLWxlZnQ6IDEwcHggc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgICBib3JkZXItcmlnaHQ6IDEwcHggc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgICBib3JkZXItdG9wOiAxMHB4IGRhc2hlZDtcclxuICAgIGJvdHRvbTogLTEwcHg7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBoZWlnaHQ6IDA7XHJcbiAgICBsZWZ0OiA1MCU7XHJcbiAgICBtYXJnaW4tbGVmdDogLTVweDtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgICB3aWR0aDogMDtcclxuICB9XHJcbn0iLCIubGctZnVsbHNjcmVlbiB7XHJcbiAgJjphZnRlciB7XHJcbiAgICBjb250ZW50OiBcIlxcZTIwY1wiO1xyXG5cclxuICAgIC5sZy1mdWxsc2NyZWVuLW9uICYge1xyXG4gICAgICBjb250ZW50OiBcIlxcZTIwZFwiO1xyXG4gICAgfVxyXG4gIH1cclxufSJdLCJtYXBwaW5ncyI6IkFTK25CQSxBQUFBLElBQUksQ0FBQztFQUNILFVBQVUsRUFBRSxNQUFPLEdBQ3BCOztBQUVELEFBQU8sTUFBRCxDQUFDLFlBQVk7QUFDbkIsQUFBTyxNQUFELENBQUMsUUFBUSxDQUFDO0VBQ2QsT0FBTyxFQUFFLENBQUUsR0FDWjs7QUFFRCxBQUFZLFdBQUQsQ0FBQyxZQUFZO0FBQ3hCLEFBQVksV0FBRCxDQUFDLFFBQVEsQ0FBQztFQUNuQixPQUFPLEVBQUUsQ0FBRTtFQUNYLFNBQVMsRUFBRSxpQkFBVTtFQUNyQixhQUFhLEVBQUUsaUJBQVU7RUFDekIsaUJBQWlCLEVBQUUsaUJBQVUsR0FDOUI7O0FBRUQsQUFBQSxZQUFZO0FBQ1osQUFBQSxRQUFRLENBQUM7RUFDUCxPQUFPLEVBQUUsQ0FBRTtFQUNYLFNBQVMsRUFBRSxhQUFVO0VBQ3JCLGFBQWEsRUFBRSxhQUFVO0VBQ3pCLGlCQUFpQixFQUFFLGFBQVU7RUFDN0IsVUFBVSxFQUFFLGtEQUFtRDtFQUMvRCxrQkFBa0IsRUFBRSwwREFBMkQsR0FDaEY7O0FBRUQsQUFBQSxLQUFLLENBQUM7RUFDSixLQUFLLEVBQUUsSUFBSztFQUNaLE1BQU0sRUFBRSxJQUFLLEdBQ2Q7O0E0Q2xwQkMsQUFBQSxjQUFjLEFkVVgsVUFBVSxDQUFYO0VjbEJGLG1CQUFtQixFcEJrQlYsS0FBSztFb0JqQmQsMEJBQTBCLEVwQmlDakIsTUFBTTtFR2dCYixTQUFRLEVBRkUsaUJBQU87RWV2QmYsbUJBQW1CLEVBQUUsa0JBQW1CO0VBRzFDLG1CQUFtQixFQUFFLE1BQU8sR1pSM0I7O0FjWkgsQUFBQSxjQUFjLEFkc0JYLFVBQVUsQUFB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ZGxCLEFBQUEsRUFBRTtJQUNBLElBQUksRUFBRSxDQUFFO0VBR1YsQUFBQSxHQUFHO0lBQ0QsSUFBSSxFQUFFLEtBQU07RUFHZCxBQUFBLElBQUk7SUFDRixJQUFJLEVBQUUsQ0FBRTs7QUZTVixlQUFlLENBQWYsWUFBZTtFRWxCZixBQUFBLEVBQUU7SUFDQSxJQUFJLEVBQUUsQ0FBRTtFQUdWLEFBQUEsR0FBRztJQUNELElBQUksRUFBRSxLQUFNO0VBR2QsQUFBQSxJQUFJO0lBQ0YsSUFBSSxFQUFFLENBQUU7O0FGYVYsY0FBYyxDQUFkLFlBQWM7RUV0QmQsQUFBQSxFQUFFLENBQUM7SUFDRCxJQUFJLEVBQUUsQ0FBRSxHQUNUO0VBRUQsQUFBQSxHQUFHLENBQUM7SUFDRixJQUFJLEVBQUUsS0FBTSxHQUNiO0VBRUQsQUFBQSxJQUFJLENBQUM7SUFDSCxJQUFJLEVBQUUsQ0FBRSxHQUNUOztBRmdCRCxVQUFVLENBQVYsWUFBVTtFRTFCVixBQUFBLEVBQUU7SUFDQSxJQUFJLEVBQUUsQ0FBRTtFQUdWLEFBQUEsR0FBRztJQUNELElBQUksRUFBRSxLQUFNO0VBR2QsQUFBQSxJQUFJO0lBQ0YsSUFBSSxFQUFFLENBQUU7O0FGS1Ysa0JBQWtCLENBQWxCLFdBQWtCO0VFQWxCLEFBQUEsRUFBRTtJQUNBLElBQUksRUFBRSxDQUFFO0VBR1YsQUFBQSxHQUFHO0lBQ0QsSUFBSSxFQUFFLElBQUs7RUFHYixBQUFBLElBQUk7SUFDRixJQUFJLEVBQUUsQ0FBRTs7QUZMVixlQUFlLENBQWYsV0FBZTtFRUpmLEFBQUEsRUFBRTtJQUNBLElBQUksRUFBRSxDQUFFO0VBR1YsQUFBQSxHQUFHO0lBQ0QsSUFBSSxFQUFFLElBQUs7RUFHYixBQUFBLElBQUk7SUFDRixJQUFJLEVBQUUsQ0FBRTs7QUZEVixjQUFjLENBQWQsV0FBYztFRVJkLEFBQUEsRUFBRSxDQUFDO0lBQ0QsSUFBSSxFQUFFLENBQUUsR0FDVDtFQUVELEFBQUEsR0FBRyxDQUFDO0lBQ0YsSUFBSSxFQUFFLElBQUssR0FDWjtFQUVELEFBQUEsSUFBSSxD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 */
